// scripts/deploy.js
const { ethers } = require("hardhat");
const fs = require("fs");
const path = require("path");

async function main() {
  const [deployer] = await ethers.getSigners();
  console.log("Deploying contracts with the account:", deployer.address);

  // Deploy Verifier
  const verifier = await ethers.deployContract("Verifier");
  await verifier.waitForDeployment();
  const verifierAddress = await verifier.getAddress();
  console.log("Verifier deployed to:", verifierAddress);

  // Deploy PoseidonHasher
  const poseidonHasher = await ethers.deployContract("PoseidonHasher");
  await poseidonHasher.waitForDeployment();
  const poseidonHasherAddress = await poseidonHasher.getAddress();
  console.log("PoseidonHasher deployed to:", poseidonHasherAddress);

  // Deploy Executor
  const executor = await ethers.deployContract("Executor", [deployer.address]);
  await executor.waitForDeployment();
  const executorAddress = await executor.getAddress();
  console.log("Executor deployed to:", executorAddress);

  // Deploy SmartAccountFactory
  const entryPoint = await ethers.deployContract("EntryPoint");
  await entryPoint.waitForDeployment();
  const entryPointAddress = await entryPoint.getAddress();
  const factory = await ethers.deployContract("SmartAccountFactory", [
    entryPointAddress,
  ]);
  await factory.waitForDeployment();
  const factoryAddress = await factory.getAddress();
  console.log("SmartAccountFactory deployed to:", factoryAddress);

  // Deploy Paymaster
  const paymaster = await ethers.deployContract("Paymaster", [
    entryPointAddress,
    deployer.address,
  ]);
  await paymaster.waitForDeployment();
  const paymasterAddress = await paymaster.getAddress();
  console.log("Paymaster deployed to:", paymasterAddress);

  // Deploy PrivacyPool
  const privacyPool = await ethers.deployContract("PrivacyPool", [
    verifierAddress,
    poseidonHasherAddress,
    deployer.address,
  ]);
  await privacyPool.waitForDeployment();
  const privacyPoolAddress = await privacyPool.getAddress();
  console.log("PrivacyPool deployed to:", privacyPoolAddress);

  // --- Automatic Frontend Configuration ---
  console.log("\nUpdating frontend configuration...");
  const configDir = path.join(__dirname, "..", "frontend", "src", "config");
  if (!fs.existsSync(configDir)) {
    fs.mkdirSync(configDir);
  }
  const configPath = path.join(configDir, "contracts.ts");
  const configContent = `// This file is auto-generated by the deployment script.
// Do not edit this file manually.

export const CONTRACTS = {
  PRIVACY_POOL_ADDRESS: "${privacyPoolAddress}",
  PAYMASTER_ADDRESS: "${paymasterAddress}",
  SMART_ACCOUNT_FACTORY_ADDRESS: "${factoryAddress}",
  EXECUTOR_ADDRESS: "${executorAddress}",
  VERIFIER_ADDRESS: "${verifierAddress}",
  ENTRYPOINT_ADDRESS: "${entryPointAddress}",
  POSEIDON_HASHER_ADDRESS: "${poseidonHasherAddress}",
} as const;
`;

  fs.writeFileSync(configPath, configContent);
  console.log(`Frontend configuration updated at ${configPath}`);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
