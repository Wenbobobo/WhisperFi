{"id":"aba4f5531ece62f002149ae26261f986","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/lib/core/Helpers.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\n/* solhint-disable no-inline-assembly */\r\n\r\n\r\n /*\r\n  * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\r\n  * must return this value in case of signature failure, instead of revert.\r\n  */\r\nuint256 constant SIG_VALIDATION_FAILED = 1;\r\n\r\n\r\n/*\r\n * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\r\n * return this value on success.\r\n */\r\nuint256 constant SIG_VALIDATION_SUCCESS = 0;\r\n\r\n\r\n/**\r\n * Returned data from validateUserOp.\r\n * validateUserOp returns a uint256, which is created by `_packedValidationData` and\r\n * parsed by `_parseValidationData`.\r\n * @param aggregator  - address(0) - The account validated the signature by itself.\r\n *                      address(1) - The account failed to validate the signature.\r\n *                      otherwise - This is an address of a signature aggregator that must\r\n *                                  be used to validate the signature.\r\n * @param validAfter  - This UserOp is valid only after this timestamp.\r\n * @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\r\n */\r\nstruct ValidationData {\r\n    address aggregator;\r\n    uint48 validAfter;\r\n    uint48 validUntil;\r\n}\r\n\r\n/**\r\n * Extract aggregator/sigFailed, validAfter, validUntil.\r\n * Also convert zero validUntil to type(uint48).max.\r\n * @param validationData - The packed validation data.\r\n * @return data - The unpacked in-memory validation data.\r\n */\r\nfunction _parseValidationData(\r\n    uint256 validationData\r\n) pure returns (ValidationData memory data) {\r\n    address aggregator = address(uint160(validationData));\r\n    uint48 validUntil = uint48(validationData >> 160);\r\n    if (validUntil == 0) {\r\n        validUntil = type(uint48).max;\r\n    }\r\n    uint48 validAfter = uint48(validationData >> (48 + 160));\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp.\r\n * @param data - The ValidationData to pack.\r\n * @return the packed validation data.\r\n */\r\nfunction _packValidationData(\r\n    ValidationData memory data\r\n) pure returns (uint256) {\r\n    return\r\n        uint160(data.aggregator) |\r\n        (uint256(data.validUntil) << 160) |\r\n        (uint256(data.validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\r\n * @param sigFailed  - True for signature failure, false for success.\r\n * @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\r\n * @param validAfter - First timestamp this UserOperation is valid.\r\n * @return the packed validation data.\r\n */\r\nfunction _packValidationData(\r\n    bool sigFailed,\r\n    uint48 validUntil,\r\n    uint48 validAfter\r\n) pure returns (uint256) {\r\n    return\r\n        (sigFailed ?  SIG_VALIDATION_FAILED : SIG_VALIDATION_SUCCESS) |\r\n        (uint256(validUntil) << 160) |\r\n        (uint256(validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * keccak function over calldata.\r\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\r\n *\r\n * @param data - the calldata bytes array to perform keccak on.\r\n * @return ret - the keccak hash of the 'data' array.\r\n */\r\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\r\n        assembly (\"memory-safe\") {\r\n            let mem := mload(0x40)\r\n            let len := data.length\r\n            calldatacopy(mem, data.offset, len)\r\n            ret := keccak256(mem, len)\r\n        }\r\n    }\r\n\r\n\r\n/**\r\n * The minimum of two numbers.\r\n * @param a - First number.\r\n * @param b - Second number.\r\n * @return - the minimum value.\r\n */\r\n    function min(uint256 a, uint256 b) pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n/**\r\n * standard solidity memory allocation finalization.\r\n * copied from solidity generated code\r\n * @param memPointer - The current memory pointer\r\n * @param allocationSize - Bytes allocated from memPointer.\r\n */\r\n    function finalizeAllocation(uint256 memPointer, uint256 allocationSize) pure {\r\n\r\n        assembly (\"memory-safe\"){\r\n            finalize_allocation(memPointer, allocationSize)\r\n\r\n            function finalize_allocation(memPtr, size) {\r\n                let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\r\n                mstore(64, newFreePtr)\r\n            }\r\n\r\n            function round_up_to_mul_of_32(value) -> result {\r\n                result := and(add(value, 31), not(31))\r\n            }\r\n        }\r\n    }\r\n"},"contracts/lib/core/UserOperationLib.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable no-inline-assembly */\n\nimport \"../interfaces/PackedUserOperation.sol\";\nimport {calldataKeccak, min} from \"./Helpers.sol\";\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    uint256 public constant PAYMASTER_VALIDATION_GAS_OFFSET = 20;\n    uint256 public constant PAYMASTER_POSTOP_GAS_OFFSET = 36;\n    uint256 public constant PAYMASTER_DATA_OFFSET = 52;\n\n    /**\n     * Relayer/block builder might submit the TX with higher priorityFee,\n     * but the user should not pay above what he signed for.\n     * @param userOp - The user operation data.\n     */\n    function gasPrice(\n        PackedUserOperation calldata userOp\n    ) internal view returns (uint256) {\n        unchecked {\n            (uint256 maxPriorityFeePerGas, uint256 maxFeePerGas) = unpackUints(userOp.gasFees);\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n        }\n    }\n\n    bytes32 internal constant PACKED_USEROP_TYPEHASH =\n    keccak256(\n        \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\"\n    );\n\n    /**\n     * Pack the user operation data into bytes for hashing.\n     * @param userOp - The user operation data.\n     * @param overrideInitCodeHash - If set, encode this instead of the initCode field in the userOp.\n     */\n    function encode(\n        PackedUserOperation calldata userOp,\n        bytes32 overrideInitCodeHash\n    ) internal pure returns (bytes memory ret) {\n        address sender = userOp.sender;\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = overrideInitCodeHash != 0 ? overrideInitCodeHash : calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        bytes32 accountGasLimits = userOp.accountGasLimits;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        bytes32 gasFees = userOp.gasFees;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            UserOperationLib.PACKED_USEROP_TYPEHASH,\n            sender, nonce,\n            hashInitCode, hashCallData,\n            accountGasLimits, preVerificationGas, gasFees,\n            hashPaymasterAndData\n        );\n    }\n\n    function unpackUints(\n        bytes32 packed\n    ) internal pure returns (uint256 high128, uint256 low128) {\n        return (unpackHigh128(packed), unpackLow128(packed));\n    }\n\n    // Unpack just the high 128-bits from a packed value\n    function unpackHigh128(bytes32 packed) internal pure returns (uint256) {\n        return uint256(packed) >> 128;\n    }\n\n    // Unpack just the low 128-bits from a packed value\n    function unpackLow128(bytes32 packed) internal pure returns (uint256) {\n        return uint128(uint256(packed));\n    }\n\n    function unpackMaxPriorityFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.gasFees);\n    }\n\n    function unpackMaxFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.gasFees);\n    }\n\n    function unpackVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.accountGasLimits);\n    }\n\n    function unpackCallGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.accountGasLimits);\n    }\n\n    function unpackPaymasterVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET]));\n    }\n\n    function unpackPostOpGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]));\n    }\n\n    function unpackPaymasterStaticFields(\n        bytes calldata paymasterAndData\n    ) internal pure returns (address paymaster, uint256 validationGasLimit, uint256 postOpGasLimit) {\n        return (\n            address(bytes20(paymasterAndData[: PAYMASTER_VALIDATION_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]))\n        );\n    }\n\n    /**\n     * Hash the user operation data.\n     * @param userOp - The user operation data.\n     * @param overrideInitCodeHash - If set, the initCode hash will be replaced with this value just for UserOp hashing.\n     */\n    function hash(\n        PackedUserOperation calldata userOp,\n        bytes32 overrideInitCodeHash\n    ) internal pure returns (bytes32) {\n        return keccak256(encode(userOp, overrideInitCodeHash));\n    }\n}\n"},"contracts/lib/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"./PackedUserOperation.sol\";\r\n\r\n/**\r\n * Aggregated Signatures validator.\r\n */\r\ninterface IAggregator {\r\n    /**\r\n     * Validate an aggregated signature.\r\n     * Reverts if the aggregated signature does not match the given list of operations.\r\n     * @param userOps   - An array of UserOperations to validate the signature for.\r\n     * @param signature - The aggregated signature.\r\n     */\r\n    function validateSignatures(\r\n        PackedUserOperation[] calldata userOps,\r\n        bytes calldata signature\r\n    ) external;\r\n\r\n    /**\r\n     * Validate the signature of a single userOp.\r\n     * This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\r\n     * the aggregator this account uses.\r\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\r\n     * @param userOp        - The userOperation received from the user.\r\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\r\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\r\n     */\r\n    function validateUserOpSignature(\r\n        PackedUserOperation calldata userOp\r\n    ) external view returns (bytes memory sigForUserOp);\r\n\r\n    /**\r\n     * Aggregate multiple signatures into a single value.\r\n     * This method is called off-chain to calculate the signature to pass with handleOps()\r\n     * bundler MAY use optimized custom code to perform this aggregation.\r\n     * @param userOps              - An array of UserOperations to collect the signatures from.\r\n     * @return aggregatedSignature - The aggregated signature.\r\n     */\r\n    function aggregateSignatures(\r\n        PackedUserOperation[] calldata userOps\r\n    ) external view returns (bytes memory aggregatedSignature);\r\n}\r\n"},"contracts/lib/interfaces/IEntryPoint.sol":{"content":"/**\r\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\r\n ** Only one instance required on each chain.\r\n **/\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\n/* solhint-disable avoid-low-level-calls */\r\n/* solhint-disable no-inline-assembly */\r\n/* solhint-disable reason-string */\r\n\r\nimport \"./PackedUserOperation.sol\";\r\nimport \"./IStakeManager.sol\";\r\nimport \"./IAggregator.sol\";\r\nimport \"./INonceManager.sol\";\r\nimport \"./ISenderCreator.sol\";\r\n\r\ninterface IEntryPoint is IStakeManager, INonceManager {\r\n    /***\r\n     * An event emitted after each successful request.\r\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\r\n     * @param sender        - The account that generates this request.\r\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\r\n     * @param nonce         - The nonce value from the request.\r\n     * @param success       - True if the sender transaction succeeded, false if reverted.\r\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\r\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\r\n     *                        validation and execution).\r\n     */\r\n    event UserOperationEvent(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address indexed paymaster,\r\n        uint256 nonce,\r\n        bool success,\r\n        uint256 actualGasCost,\r\n        uint256 actualGasUsed\r\n    );\r\n\r\n    /**\r\n     * Account \"sender\" was deployed.\r\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\r\n     * @param sender     - The account that is deployed\r\n     * @param factory    - The factory used to deploy this account (in the initCode)\r\n     * @param paymaster  - The paymaster used by this UserOp\r\n     */\r\n    event AccountDeployed(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address factory,\r\n        address paymaster\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the reverted \"callData\" call.\r\n     */\r\n    event UserOperationRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the reverted call to \"postOp\".\r\n     */\r\n    event PostOpRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     */\r\n    event UserOperationPrefundTooLow(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce\r\n    );\r\n\r\n    /**\r\n     * An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop.\r\n     * Any event emitted before this event, is part of the validation.\r\n     */\r\n    event BeforeExecution();\r\n\r\n    /**\r\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\r\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\r\n     */\r\n    event SignatureAggregatorChanged(address indexed aggregator);\r\n\r\n    /**\r\n     * A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op.\r\n     * Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain.\r\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\r\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\r\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\r\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\r\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\r\n     *                  so a failure can be attributed to the correct entity.\r\n     */\r\n    error FailedOp(uint256 opIndex, string reason);\r\n\r\n    /**\r\n     * A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\r\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\r\n     * @param reason  - Revert reason. see FailedOp(uint256,string), above\r\n     * @param inner   - data from inner cought revert reason\r\n     * @dev note that inner is truncated to 2048 bytes\r\n     */\r\n    error FailedOpWithRevert(uint256 opIndex, string reason, bytes inner);\r\n\r\n    error PostOpReverted(bytes returnData);\r\n\r\n    /**\r\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\r\n     * @param aggregator The aggregator that failed to verify the signature\r\n     */\r\n    error SignatureValidationFailed(address aggregator);\r\n\r\n    // Return value of getSenderAddress.\r\n    error SenderAddressResult(address sender);\r\n\r\n    // UserOps handled, per aggregator.\r\n    struct UserOpsPerAggregator {\r\n        PackedUserOperation[] userOps;\r\n        // Aggregator address\r\n        IAggregator aggregator;\r\n        // Aggregated signature\r\n        bytes signature;\r\n    }\r\n\r\n    /**\r\n     * Execute a batch of UserOperations.\r\n     * No signature aggregator is used.\r\n     * If any account requires an aggregator (that is, it returned an aggregator when\r\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\r\n     * @param ops         - The operations to execute.\r\n     * @param beneficiary - The address to receive the fees.\r\n     */\r\n    function handleOps(\r\n        PackedUserOperation[] calldata ops,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Execute a batch of UserOperation with Aggregators\r\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\r\n     * @param beneficiary      - The address to receive the fees.\r\n     */\r\n    function handleAggregatedOps(\r\n        UserOpsPerAggregator[] calldata opsPerAggregator,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Generate a request Id - unique identifier for this request.\r\n     * The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\r\n     * @param userOp - The user operation to generate the request ID for.\r\n     * @return hash the hash of this UserOperation\r\n     */\r\n    function getUserOpHash(\r\n        PackedUserOperation calldata userOp\r\n    ) external view returns (bytes32);\r\n\r\n    /**\r\n     * Gas and return values during simulation.\r\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\r\n     * @param prefund          - The required prefund for this operation\r\n     * @param accountValidationData   - returned validationData from account.\r\n     * @param paymasterValidationData - return validationData from paymaster.\r\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\r\n     */\r\n    struct ReturnInfo {\r\n        uint256 preOpGas;\r\n        uint256 prefund;\r\n        uint256 accountValidationData;\r\n        uint256 paymasterValidationData;\r\n        bytes paymasterContext;\r\n    }\r\n\r\n    /**\r\n     * Get counterfactual sender address.\r\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\r\n     * This method always revert, and returns the address in SenderAddressResult error.\r\n     * @notice this method cannot be used for EIP-7702 derived contracts.\r\n     *\r\n     * @param initCode - The constructor code to be passed into the UserOperation.\r\n     */\r\n    function getSenderAddress(bytes memory initCode) external;\r\n\r\n    error DelegateAndRevert(bool success, bytes ret);\r\n\r\n    /**\r\n     * Helper method for dry-run testing.\r\n     * @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\r\n     *  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\r\n     *  actual EntryPoint code is less convenient.\r\n     * @param target a target contract to make a delegatecall from entrypoint\r\n     * @param data data to pass to target in a delegatecall\r\n     */\r\n    function delegateAndRevert(address target, bytes calldata data) external;\r\n\r\n    /**\r\n     * @notice Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts.\r\n     */\r\n    function senderCreator() external view returns (ISenderCreator);\r\n}\r\n"},"contracts/lib/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\ninterface INonceManager {\r\n\r\n    /**\r\n     * Return the next nonce for this sender.\r\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\r\n     * But UserOp with different keys can come with arbitrary order.\r\n     *\r\n     * @param sender the account address\r\n     * @param key the high 192 bit of the nonce\r\n     * @return nonce a full nonce to pass for next UserOp with this sender.\r\n     */\r\n    function getNonce(address sender, uint192 key)\r\n    external view returns (uint256 nonce);\r\n\r\n    /**\r\n     * Manually increment the nonce of the sender.\r\n     * This method is exposed just for completeness..\r\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\r\n     * as the EntryPoint will update the nonce regardless.\r\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\r\n     * UserOperations will not pay extra for the first transaction with a given key.\r\n     *\r\n     * @param key - the \"nonce key\" to increment the \"nonce sequence\" for.\r\n     */\r\n    function incrementNonce(uint192 key) external;\r\n}\r\n"},"contracts/lib/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"./PackedUserOperation.sol\";\r\n\r\n/**\r\n * The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\r\n * A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\r\n */\r\ninterface IPaymaster {\r\n    enum PostOpMode {\r\n        // User op succeeded.\r\n        opSucceeded,\r\n        // User op reverted. Still has to pay for gas.\r\n        opReverted,\r\n        // Only used internally in the EntryPoint (cleanup after postOp reverts). Never calling paymaster with this value\r\n        postOpReverted\r\n    }\r\n\r\n    /**\r\n     * Payment validation: check if paymaster agrees to pay.\r\n     * Must verify sender is the entryPoint.\r\n     * Revert to reject this request.\r\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\r\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\r\n     * @param userOp          - The user operation.\r\n     * @param userOpHash      - Hash of the user's request data.\r\n     * @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\r\n     * @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\r\n     * @return validationData - Signature and time-range of this operation, encoded the same as the return\r\n     *                          value of validateUserOperation.\r\n     *                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\r\n     *                                                    other values are invalid for paymaster.\r\n     *                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\r\n     *                          <6-byte> validAfter - first timestamp this operation is valid\r\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\r\n     */\r\n    function validatePaymasterUserOp(\r\n        PackedUserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) external returns (bytes memory context, uint256 validationData);\r\n\r\n    /**\r\n     * Post-operation handler.\r\n     * Must verify sender is the entryPoint.\r\n     * @param mode          - Enum with the following options:\r\n     *                        opSucceeded - User operation succeeded.\r\n     *                        opReverted  - User op reverted. The paymaster still has to pay for gas.\r\n     *                        postOpReverted - never passed in a call to postOp().\r\n     * @param context       - The context value returned by validatePaymasterUserOp\r\n     * @param actualGasCost - Actual cost of gas used so far (without this postOp call).\r\n     * @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\r\n     *                        and maxPriorityFee (and basefee)\r\n     *                        It is not the same as tx.gasprice, which is what the bundler pays.\r\n     */\r\n    function postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost,\r\n        uint256 actualUserOpFeePerGas\r\n    ) external;\r\n}\r\n"},"contracts/lib/interfaces/ISenderCreator.sol":{"content":"\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\ninterface ISenderCreator {\r\n    /**\r\n     * @dev Creates a new sender contract.\r\n     * @return sender Address of the newly created sender contract.\r\n     */\r\n    function createSender(bytes calldata initCode) external returns (address sender);\r\n\r\n    /**\r\n     * Use initCallData to initialize an EIP-7702 account.\r\n     * The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account.\r\n     * Note: Can be called multiple times as long as an appropriate initCode is supplied\r\n     *\r\n     * @param sender - the 'sender' EIP-7702 account to be initialized.\r\n     * @param initCallData - the call data to be passed to the sender account call.\r\n     */\r\n    function initEip7702Sender(address sender, bytes calldata initCallData) external;\r\n}\r\n"},"contracts/lib/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\n/**\r\n * Manage deposits and stakes.\r\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\r\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\r\n */\r\ninterface IStakeManager {\r\n    event Deposited(address indexed account, uint256 totalDeposit);\r\n\r\n    event Withdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    // Emitted when stake or unstake delay are modified.\r\n    event StakeLocked(\r\n        address indexed account,\r\n        uint256 totalStaked,\r\n        uint256 unstakeDelaySec\r\n    );\r\n\r\n    // Emitted once a stake is scheduled for withdrawal.\r\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\r\n\r\n    event StakeWithdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    /**\r\n     * @param deposit         - The entity's deposit.\r\n     * @param staked          - True if this entity is staked.\r\n     * @param stake           - Actual amount of ether staked for this entity.\r\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\r\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\r\n     * @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\r\n     *      and the rest fit into a 2nd cell (used during stake/unstake)\r\n     *      - 112 bit allows for 10^15 eth\r\n     *      - 48 bit for full timestamp\r\n     *      - 32 bit allows 150 years for unstake delay\r\n     */\r\n    struct DepositInfo {\r\n        uint256 deposit;\r\n        bool staked;\r\n        uint112 stake;\r\n        uint32 unstakeDelaySec;\r\n        uint48 withdrawTime;\r\n    }\r\n\r\n    // API struct used by getStakeInfo and simulateValidation.\r\n    struct StakeInfo {\r\n        uint256 stake;\r\n        uint256 unstakeDelaySec;\r\n    }\r\n\r\n    /**\r\n     * Get deposit info.\r\n     * @param account - The account to query.\r\n     * @return info   - Full deposit information of given account.\r\n     */\r\n    function getDepositInfo(\r\n        address account\r\n    ) external view returns (DepositInfo memory info);\r\n\r\n    /**\r\n     * Get account balance.\r\n     * @param account - The account to query.\r\n     * @return        - The deposit (for gas payment) of the account.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * Add to the deposit of the given account.\r\n     * @param account - The account to add to.\r\n     */\r\n    function depositTo(address account) external payable;\r\n\r\n    /**\r\n     * Add to the account's stake - amount and delay\r\n     * any pending unstake is first cancelled.\r\n     * @param unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\r\n     */\r\n    function addStake(uint32 unstakeDelaySec) external payable;\r\n\r\n    /**\r\n     * Attempt to unlock the stake.\r\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\r\n     */\r\n    function unlockStake() external;\r\n\r\n    /**\r\n     * Withdraw from the (unlocked) stake.\r\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     */\r\n    function withdrawStake(address payable withdrawAddress) external;\r\n\r\n    /**\r\n     * Withdraw from the deposit.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     * @param withdrawAmount  - The amount to withdraw.\r\n     */\r\n    function withdrawTo(\r\n        address payable withdrawAddress,\r\n        uint256 withdrawAmount\r\n    ) external;\r\n}\r\n"},"contracts/lib/interfaces/PackedUserOperation.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\n/**\r\n * User Operation struct\r\n * @param sender                - The sender account of this request.\r\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\r\n * @param initCode              - If set, the account contract will be created by this constructor\r\n * @param callData              - The method call to execute on this account.\r\n * @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\r\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\r\n *                                Covers batch overhead.\r\n * @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\r\n * @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\r\n *                                The paymaster will pay for the transaction instead of the sender.\r\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\r\n */\r\nstruct PackedUserOperation {\r\n    address sender;\r\n    uint256 nonce;\r\n    bytes initCode;\r\n    bytes callData;\r\n    bytes32 accountGasLimits;\r\n    uint256 preVerificationGas;\r\n    bytes32 gasFees;\r\n    bytes paymasterAndData;\r\n    bytes signature;\r\n}\r\n"},"contracts/Paymaster.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.24;\n\nimport \"./lib/interfaces/IPaymaster.sol\";\nimport \"./lib/interfaces/IEntryPoint.sol\";\nimport \"./lib/core/UserOperationLib.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nstruct UserOperation {\n    address sender;\n    uint256 nonce;\n    bytes initCode;\n    bytes callData;\n    uint256 callGasLimit;\n    uint256 verificationGasLimit;\n    uint256 preVerificationGas;\n    uint256 maxFeePerGas;\n    uint256 maxPriorityFeePerGas;\n    bytes paymasterAndData;\n    bytes signature;\n    address target;\n}\n\ncontract Paymaster is IPaymaster, Ownable {\n    IEntryPoint public immutable entryPoint;\n    \n    // A mapping to whitelist specific target contracts\n    mapping(address => bool) public supportedTargets;\n\n    // Custom errors for gas efficiency\n    error UnsupportedTarget();\n\n    event TargetSupportChanged(address indexed target, bool supported);\n    event FundsDeposited(address indexed depositor, uint256 amount);\n\n    constructor(address _entryPoint, address _owner) Ownable(_owner) {\n        entryPoint = IEntryPoint(_entryPoint);\n    }\n\n    /**\n     * @dev Sets whether a target contract is supported for gas sponsorship.\n     */\n    function setSupportedTarget(address target, bool supported) external onlyOwner {\n        supportedTargets[target] = supported;\n        emit TargetSupportChanged(target, supported);\n    }\n\n    /**\n     * @dev Deposits funds into the EntryPoint on behalf of this Paymaster.\n     */\n    function depositToEntryPoint() external payable {\n        entryPoint.depositTo{value: msg.value}(address(this));\n        emit FundsDeposited(msg.sender, msg.value);\n    }\n\n    /**\n     * @dev Validates a UserOperation to determine if it should be sponsored.\n     */\n    function validatePaymasterUserOp(\n        PackedUserOperation calldata packedUserOp,\n        bytes32 /*userOpHash*/,\n        uint256 /*maxCost*/\n    ) external view override returns (bytes memory context, uint256 validationData) {\n        UserOperation memory userOp;\n        userOp.sender = packedUserOp.sender;\n        userOp.nonce = packedUserOp.nonce;\n        userOp.initCode = packedUserOp.initCode;\n        userOp.callData = packedUserOp.callData;\n        (userOp.verificationGasLimit, userOp.callGasLimit) = UserOperationLib.unpackUints(packedUserOp.accountGasLimits);\n        userOp.preVerificationGas = packedUserOp.preVerificationGas;\n        (userOp.maxPriorityFeePerGas, userOp.maxFeePerGas) = UserOperationLib.unpackUints(packedUserOp.gasFees);\n        userOp.paymasterAndData = packedUserOp.paymasterAndData;\n        userOp.signature = packedUserOp.signature;\n        userOp.target = address(bytes20(packedUserOp.callData[4:24]));\n\n        if (!supportedTargets[userOp.target]) {\n            revert UnsupportedTarget();\n        }\n        // For this simple paymaster, we don't need any context, so we return an empty bytes array.\n        // We also don't have any time-based validation, so validationData is 0.\n        return (bytes(\"\"), 0);\n    }\n\n    /**\n     * @dev The function that the EntryPoint calls after the execution to charge the Paymaster.\n     */\n    function postOp(\n        PostOpMode /*mode*/, \n        bytes calldata /*context*/, \n        uint256 /*actualGasCost*/,\n        uint256 /*actualUserOpFeePerGas*/\n    ) external view override {\n        // In this simple implementation, we don't need to do anything here.\n        // The EntryPoint will automatically deduct the gas cost from our deposit.\n        // Adding view call to prevent empty block warning\n        entryPoint.balanceOf(address(this));\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[177],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":178,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,177],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"127:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"718:34:1","statements":[{"expression":{"expression":{"id":155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:1","memberName":"sender","nodeType":"MemberAccess","src":"735:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":157,"nodeType":"Return","src":"728:17:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"675:2:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"709:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:1"},"scope":177,"src":"656:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"825:32:1","statements":[{"expression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:1","memberName":"data","nodeType":"MemberAccess","src":"842:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":163,"id":166,"nodeType":"Return","src":"835:15:1"}]},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"775:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"809:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:1"},"scope":177,"src":"758:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"935:25:1","statements":[{"expression":{"hexValue":"30","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":172,"id":174,"nodeType":"Return","src":"945:8:1"}]},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"892:2:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:1"},"scope":177,"src":"863:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":178,"src":"624:338:1","usedErrors":[],"usedEvents":[]}],"src":"101:862:1"},"id":1},"contracts/Paymaster.sol":{"ast":{"absolutePath":"contracts/Paymaster.sol","exportedSymbols":{"Context":[177],"IAggregator":[1009],"IEntryPoint":[1194],"INonceManager":[1213],"IPaymaster":[1250],"ISenderCreator":[1269],"IStakeManager":[1373],"Ownable":[147],"PackedUserOperation":[1395],"Paymaster":[450],"UserOperation":[208],"UserOperationLib":[975],"calldataKeccak":[611],"min":[629]},"id":451,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"39:24:2"},{"absolutePath":"contracts/lib/interfaces/IPaymaster.sol","file":"./lib/interfaces/IPaymaster.sol","id":180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":451,"sourceUnit":1251,"src":"65:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/interfaces/IEntryPoint.sol","file":"./lib/interfaces/IEntryPoint.sol","id":181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":451,"sourceUnit":1195,"src":"107:42:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/core/UserOperationLib.sol","file":"./lib/core/UserOperationLib.sol","id":182,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":451,"sourceUnit":976,"src":"150:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":451,"sourceUnit":148,"src":"192:52:2","symbolAliases":[],"unitAlias":""},{"canonicalName":"UserOperation","id":208,"members":[{"constant":false,"id":185,"mutability":"mutable","name":"sender","nameLocation":"281:6:2","nodeType":"VariableDeclaration","scope":208,"src":"273:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"273:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"nonce","nameLocation":"301:5:2","nodeType":"VariableDeclaration","scope":208,"src":"293:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"293:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"initCode","nameLocation":"318:8:2","nodeType":"VariableDeclaration","scope":208,"src":"312:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":188,"name":"bytes","nodeType":"ElementaryTypeName","src":"312:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"callData","nameLocation":"338:8:2","nodeType":"VariableDeclaration","scope":208,"src":"332:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":190,"name":"bytes","nodeType":"ElementaryTypeName","src":"332:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"callGasLimit","nameLocation":"360:12:2","nodeType":"VariableDeclaration","scope":208,"src":"352:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"352:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"386:20:2","nodeType":"VariableDeclaration","scope":208,"src":"378:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"preVerificationGas","nameLocation":"420:18:2","nodeType":"VariableDeclaration","scope":208,"src":"412:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"412:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"452:12:2","nodeType":"VariableDeclaration","scope":208,"src":"444:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"444:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"478:20:2","nodeType":"VariableDeclaration","scope":208,"src":"470:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":203,"mutability":"mutable","name":"paymasterAndData","nameLocation":"510:16:2","nodeType":"VariableDeclaration","scope":208,"src":"504:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":202,"name":"bytes","nodeType":"ElementaryTypeName","src":"504:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"signature","nameLocation":"538:9:2","nodeType":"VariableDeclaration","scope":208,"src":"532:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":204,"name":"bytes","nodeType":"ElementaryTypeName","src":"532:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"target","nameLocation":"561:6:2","nodeType":"VariableDeclaration","scope":208,"src":"553:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"553:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"UserOperation","nameLocation":"253:13:2","nodeType":"StructDefinition","scope":451,"src":"246:324:2","visibility":"public"},{"abstract":false,"baseContracts":[{"baseName":{"id":209,"name":"IPaymaster","nameLocations":["594:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":1250,"src":"594:10:2"},"id":210,"nodeType":"InheritanceSpecifier","src":"594:10:2"},{"baseName":{"id":211,"name":"Ownable","nameLocations":["606:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"606:7:2"},"id":212,"nodeType":"InheritanceSpecifier","src":"606:7:2"}],"canonicalName":"Paymaster","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":450,"linearizedBaseContracts":[450,147,177,1250],"name":"Paymaster","nameLocation":"581:9:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b0d691fe","id":215,"mutability":"immutable","name":"entryPoint","nameLocation":"649:10:2","nodeType":"VariableDeclaration","scope":450,"src":"620:39:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1194","typeString":"contract IEntryPoint"},"typeName":{"id":214,"nodeType":"UserDefinedTypeName","pathNode":{"id":213,"name":"IEntryPoint","nameLocations":["620:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":1194,"src":"620:11:2"},"referencedDeclaration":1194,"src":"620:11:2","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1194","typeString":"contract IEntryPoint"}},"visibility":"public"},{"constant":false,"functionSelector":"dc69c06f","id":219,"mutability":"mutable","name":"supportedTargets","nameLocation":"758:16:2","nodeType":"VariableDeclaration","scope":450,"src":"726:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":218,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"726:24:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":217,"name":"bool","nodeType":"ElementaryTypeName","src":"745:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"errorSelector":"778b288a","id":221,"name":"UnsupportedTarget","nameLocation":"827:17:2","nodeType":"ErrorDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"844:2:2"},"src":"821:26:2"},{"anonymous":false,"eventSelector":"e5239967f86bdfebd2052a7d2539a8359f2cdefacfbdeb04bdd72e854c994553","id":227,"name":"TargetSupportChanged","nameLocation":"859:20:2","nodeType":"EventDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"896:6:2","nodeType":"VariableDeclaration","scope":227,"src":"880:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"880:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":225,"indexed":false,"mutability":"mutable","name":"supported","nameLocation":"909:9:2","nodeType":"VariableDeclaration","scope":227,"src":"904:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"904:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"879:40:2"},"src":"853:67:2"},{"anonymous":false,"eventSelector":"543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d474","id":233,"name":"FundsDeposited","nameLocation":"931:14:2","nodeType":"EventDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"962:9:2","nodeType":"VariableDeclaration","scope":233,"src":"946:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"946:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":231,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"981:6:2","nodeType":"VariableDeclaration","scope":233,"src":"973:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"973:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"945:43:2"},"src":"925:64:2"},{"body":{"id":249,"nodeType":"Block","src":"1060:54:2","statements":[{"expression":{"id":247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":243,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1070:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1194","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":245,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"1095:11:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":244,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1194,"src":"1083:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$1194_$","typeString":"type(contract IEntryPoint)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1083:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1194","typeString":"contract IEntryPoint"}},"src":"1070:37:2","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1194","typeString":"contract IEntryPoint"}},"id":248,"nodeType":"ExpressionStatement","src":"1070:37:2"}]},"id":250,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":240,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1052:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":241,"kind":"baseConstructorSpecifier","modifierName":{"id":239,"name":"Ownable","nameLocations":["1044:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1044:7:2"},"nodeType":"ModifierInvocation","src":"1044:15:2"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"_entryPoint","nameLocation":"1015:11:2","nodeType":"VariableDeclaration","scope":250,"src":"1007:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"_owner","nameLocation":"1036:6:2","nodeType":"VariableDeclaration","scope":250,"src":"1028:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1006:37:2"},"returnParameters":{"id":242,"nodeType":"ParameterList","parameters":[],"src":"1060:0:2"},"scope":450,"src":"995:119:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":271,"nodeType":"Block","src":"1292:107:2","statements":[{"expression":{"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":260,"name":"supportedTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"1302:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":262,"indexExpression":{"id":261,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"1319:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1302:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":263,"name":"supported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"1329:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1302:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":265,"nodeType":"ExpressionStatement","src":"1302:36:2"},{"eventCall":{"arguments":[{"id":267,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"1374:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":268,"name":"supported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"1382:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":266,"name":"TargetSupportChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"1353:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1353:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":270,"nodeType":"EmitStatement","src":"1348:44:2"}]},"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"1120:88:2","text":" @dev Sets whether a target contract is supported for gas sponsorship."},"functionSelector":"a19f212f","id":272,"implemented":true,"kind":"function","modifiers":[{"id":258,"kind":"modifierInvocation","modifierName":{"id":257,"name":"onlyOwner","nameLocations":["1282:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1282:9:2"},"nodeType":"ModifierInvocation","src":"1282:9:2"}],"name":"setSupportedTarget","nameLocation":"1222:18:2","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"target","nameLocation":"1249:6:2","nodeType":"VariableDeclaration","scope":272,"src":"1241:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"1241:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"supported","nameLocation":"1262:9:2","nodeType":"VariableDeclaration","scope":272,"src":"1257:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":254,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1240:32:2"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"1292:0:2"},"scope":450,"src":"1213:186:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":295,"nodeType":"Block","src":"1545:122:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":284,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1602:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Paymaster_$450","typeString":"contract Paymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Paymaster_$450","typeString":"contract Paymaster"}],"id":283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1594:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"1594:7:2","typeDescriptions":{}}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1594:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":276,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1555:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1194","typeString":"contract IEntryPoint"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1566:9:2","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":1348,"src":"1555:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":279,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1583:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1587:5:2","memberName":"value","nodeType":"MemberAccess","src":"1583:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1555:38:2","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1555:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":287,"nodeType":"ExpressionStatement","src":"1555:53:2"},{"eventCall":{"arguments":[{"expression":{"id":289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1638:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1642:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1638:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":291,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1650:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1654:5:2","memberName":"value","nodeType":"MemberAccess","src":"1650:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":288,"name":"FundsDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"1623:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1623:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"EmitStatement","src":"1618:42:2"}]},"documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"1405:87:2","text":" @dev Deposits funds into the EntryPoint on behalf of this Paymaster."},"functionSelector":"1b3ba101","id":296,"implemented":true,"kind":"function","modifiers":[],"name":"depositToEntryPoint","nameLocation":"1506:19:2","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[],"src":"1525:2:2"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[],"src":"1545:0:2"},"scope":450,"src":"1497:170:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[1236],"body":{"id":424,"nodeType":"Block","src":"1996:1032:2","statements":[{"assignments":[314],"declarations":[{"constant":false,"id":314,"mutability":"mutable","name":"userOp","nameLocation":"2027:6:2","nodeType":"VariableDeclaration","scope":424,"src":"2006:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation"},"typeName":{"id":313,"nodeType":"UserDefinedTypeName","pathNode":{"id":312,"name":"UserOperation","nameLocations":["2006:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":208,"src":"2006:13:2"},"referencedDeclaration":208,"src":"2006:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"id":315,"nodeType":"VariableDeclarationStatement","src":"2006:27:2"},{"expression":{"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":316,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2043:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation memory"}},"id":318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2050:6:2","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":185,"src":"2043:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":319,"name":"packedUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2059:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2072:6:2","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"2059:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2043:35:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":322,"nodeType":"ExpressionStatement","src":"2043:35:2"},{"expression":{"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":323,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2088:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation memory"}},"id":325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2095:5:2","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":187,"src":"2088:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":326,"name":"packedUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2103:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2116:5:2","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1380,"src":"2103:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2088:33:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":329,"nodeType":"ExpressionStatement","src":"2088:33:2"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":330,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2131:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation memory"}},"id":332,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2138:8:2","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":189,"src":"2131:15:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":333,"name":"packedUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2149:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2162:8:2","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"2149:21:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"2131:39:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":336,"nodeType":"ExpressionStatement","src":"2131:39:2"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":337,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2180:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation memory"}},"id":339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2187:8:2","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":191,"src":"2180:15:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":340,"name":"packedUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2198:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2211:8:2","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"2198:21:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"2180:39:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":343,"nodeType":"ExpressionStatement","src":"2180:39:2"},{"expression":{"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"expression":{"id":344,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2230:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation memory"}},"id":346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2237:20:2","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":195,"src":"2230:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":347,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2259:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation memory"}},"id":348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2266:12:2","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":193,"src":"2259:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":349,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"2229:50:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":352,"name":"packedUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2311:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:16:2","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":1386,"src":"2311:29:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":350,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"2282:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$975_$","typeString":"type(library UserOperationLib)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2299:11:2","memberName":"unpackUints","nodeType":"MemberAccess","referencedDeclaration":783,"src":"2282:28:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2282:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"2229:112:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"ExpressionStatement","src":"2229:112:2"},{"expression":{"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":357,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2351:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation memory"}},"id":359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2358:18:2","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":197,"src":"2351:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":360,"name":"packedUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2379:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2392:18:2","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":1388,"src":"2379:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2351:59:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":363,"nodeType":"ExpressionStatement","src":"2351:59:2"},{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"expression":{"id":364,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2421:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation memory"}},"id":366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2428:20:2","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":201,"src":"2421:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":367,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2450:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation memory"}},"id":368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2457:12:2","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":199,"src":"2450:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":369,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"2420:50:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":372,"name":"packedUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2502:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:2","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"2502:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":370,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"2473:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$975_$","typeString":"type(library UserOperationLib)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2490:11:2","memberName":"unpackUints","nodeType":"MemberAccess","referencedDeclaration":783,"src":"2473:28:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"2420:103:2","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"ExpressionStatement","src":"2420:103:2"},{"expression":{"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":377,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2533:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation memory"}},"id":379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2540:16:2","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":203,"src":"2533:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":380,"name":"packedUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2559:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2572:16:2","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1392,"src":"2559:29:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"2533:55:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":383,"nodeType":"ExpressionStatement","src":"2533:55:2"},{"expression":{"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":384,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2598:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation memory"}},"id":386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2605:9:2","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":205,"src":"2598:16:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":387,"name":"packedUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2617:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2630:9:2","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":1394,"src":"2617:22:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"src":"2598:41:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":390,"nodeType":"ExpressionStatement","src":"2598:41:2"},{"expression":{"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":391,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2649:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation memory"}},"id":393,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2656:6:2","memberName":"target","nodeType":"MemberAccess","referencedDeclaration":207,"src":"2649:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":398,"name":"packedUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2681:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2694:8:2","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"2681:21:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3234","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2705:2:2","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2681:27:2","startExpression":{"hexValue":"34","id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2703:1:2","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2673:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":396,"name":"bytes20","nodeType":"ElementaryTypeName","src":"2673:7:2","typeDescriptions":{}}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2673:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2665:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"2665:7:2","typeDescriptions":{}}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2665:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2649:61:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":406,"nodeType":"ExpressionStatement","src":"2649:61:2"},{"condition":{"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2725:32:2","subExpression":{"baseExpression":{"id":407,"name":"supportedTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"2726:16:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":410,"indexExpression":{"expression":{"id":408,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2743:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$208_memory_ptr","typeString":"struct UserOperation memory"}},"id":409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2750:6:2","memberName":"target","nodeType":"MemberAccess","referencedDeclaration":207,"src":"2743:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2726:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":416,"nodeType":"IfStatement","src":"2721:89:2","trueBody":{"id":415,"nodeType":"Block","src":"2759:51:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":412,"name":"UnsupportedTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"2780:17:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2780:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":414,"nodeType":"RevertStatement","src":"2773:26:2"}]}},{"expression":{"components":[{"arguments":[{"hexValue":"","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3014:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3008:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":417,"name":"bytes","nodeType":"ElementaryTypeName","src":"3008:5:2","typeDescriptions":{}}},"id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3008:9:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3019:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3007:14:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_rational_0_by_1_$","typeString":"tuple(bytes memory,int_const 0)"}},"functionReturnParameters":311,"id":423,"nodeType":"Return","src":"3000:21:2"}]},"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"1673:89:2","text":" @dev Validates a UserOperation to determine if it should be sponsored."},"functionSelector":"52b7512c","id":425,"implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"1776:23:2","nodeType":"FunctionDefinition","overrides":{"id":306,"nodeType":"OverrideSpecifier","overrides":[],"src":"1932:8:2"},"parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"packedUserOp","nameLocation":"1838:12:2","nodeType":"VariableDeclaration","scope":425,"src":"1809:41:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":299,"nodeType":"UserDefinedTypeName","pathNode":{"id":298,"name":"PackedUserOperation","nameLocations":["1809:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"1809:19:2"},"referencedDeclaration":1395,"src":"1809:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":425,"src":"1860:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1860:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":425,"src":"1892:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1892:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1799:118:2"},"returnParameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"context","nameLocation":"1963:7:2","nodeType":"VariableDeclaration","scope":425,"src":"1950:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":307,"name":"bytes","nodeType":"ElementaryTypeName","src":"1950:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"validationData","nameLocation":"1980:14:2","nodeType":"VariableDeclaration","scope":425,"src":"1972:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1972:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1949:46:2"},"scope":450,"src":"1767:1261:2","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[1249],"body":{"id":448,"nodeType":"Block","src":"3336:271:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":444,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3594:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Paymaster_$450","typeString":"contract Paymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Paymaster_$450","typeString":"contract Paymaster"}],"id":443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3586:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"3586:7:2","typeDescriptions":{}}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3586:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":439,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"3565:10:2","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1194","typeString":"contract IEntryPoint"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3576:9:2","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1342,"src":"3565:20:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"3565:35:2"}]},"documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"3034:107:2","text":" @dev The function that the EntryPoint calls after the execution to charge the Paymaster."},"functionSelector":"7c627b21","id":449,"implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3155:6:2","nodeType":"FunctionDefinition","overrides":{"id":437,"nodeType":"OverrideSpecifier","overrides":[],"src":"3327:8:2"},"parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":449,"src":"3171:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1221","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":428,"nodeType":"UserDefinedTypeName","pathNode":{"id":427,"name":"PostOpMode","nameLocations":["3171:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"3171:10:2"},"referencedDeclaration":1221,"src":"3171:10:2","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1221","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":449,"src":"3201:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":430,"name":"bytes","nodeType":"ElementaryTypeName","src":"3201:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":449,"src":"3238:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3238:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":449,"src":"3273:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3273:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3161:151:2"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[],"src":"3336:0:2"},"scope":450,"src":"3146:461:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":451,"src":"572:3037:2","usedErrors":[13,18,221],"usedEvents":[24,227,233]}],"src":"39:3570:2"},"id":2},"contracts/lib/core/Helpers.sol":{"ast":{"absolutePath":"contracts/lib/core/Helpers.sol","exportedSymbols":{"SIG_VALIDATION_FAILED":[455],"SIG_VALIDATION_SUCCESS":[458],"ValidationData":[466],"_packValidationData":[563,601],"_parseValidationData":[526],"calldataKeccak":[611],"finalizeAllocation":[639],"min":[629]},"id":640,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":452,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:3"},{"constant":true,"id":455,"mutability":"constant","name":"SIG_VALIDATION_FAILED","nameLocation":"287:21:3","nodeType":"VariableDeclaration","scope":640,"src":"270:42:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"270:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":458,"mutability":"constant","name":"SIG_VALIDATION_SUCCESS","nameLocation":"453:22:3","nodeType":"VariableDeclaration","scope":640,"src":"436:43:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"436:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"478:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"canonicalName":"ValidationData","documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"486:669:3","text":" Returned data from validateUserOp.\n validateUserOp returns a uint256, which is created by `_packedValidationData` and\n parsed by `_parseValidationData`.\n @param aggregator  - address(0) - The account validated the signature by itself.\n                      address(1) - The account failed to validate the signature.\n                      otherwise - This is an address of a signature aggregator that must\n                                  be used to validate the signature.\n @param validAfter  - This UserOp is valid only after this timestamp.\n @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"."},"id":466,"members":[{"constant":false,"id":461,"mutability":"mutable","name":"aggregator","nameLocation":"1194:10:3","nodeType":"VariableDeclaration","scope":466,"src":"1186:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"1186:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"validAfter","nameLocation":"1218:10:3","nodeType":"VariableDeclaration","scope":466,"src":"1211:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":462,"name":"uint48","nodeType":"ElementaryTypeName","src":"1211:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":465,"mutability":"mutable","name":"validUntil","nameLocation":"1242:10:3","nodeType":"VariableDeclaration","scope":466,"src":"1235:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":464,"name":"uint48","nodeType":"ElementaryTypeName","src":"1235:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"1164:14:3","nodeType":"StructDefinition","scope":640,"src":"1157:99:3","visibility":"public"},{"body":{"id":525,"nodeType":"Block","src":"1601:322:3","statements":[{"assignments":[476],"declarations":[{"constant":false,"id":476,"mutability":"mutable","name":"aggregator","nameLocation":"1616:10:3","nodeType":"VariableDeclaration","scope":525,"src":"1608:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"1608:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":484,"initialValue":{"arguments":[{"arguments":[{"id":481,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"1645:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1637:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":479,"name":"uint160","nodeType":"ElementaryTypeName","src":"1637:7:3","typeDescriptions":{}}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1637:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1629:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"1629:7:3","typeDescriptions":{}}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1629:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1608:53:3"},{"assignments":[486],"declarations":[{"constant":false,"id":486,"mutability":"mutable","name":"validUntil","nameLocation":"1675:10:3","nodeType":"VariableDeclaration","scope":525,"src":"1668:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":485,"name":"uint48","nodeType":"ElementaryTypeName","src":"1668:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":493,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":489,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"1695:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:3:3","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1695:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1688:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":487,"name":"uint48","nodeType":"ElementaryTypeName","src":"1688:6:3","typeDescriptions":{}}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1688:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1668:49:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":494,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1728:10:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1728:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"1724:69:3","trueBody":{"id":505,"nodeType":"Block","src":"1745:48:3","statements":[{"expression":{"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":497,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1756:10:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1774:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":499,"name":"uint48","nodeType":"ElementaryTypeName","src":"1774:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":498,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1769:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1782:3:3","memberName":"max","nodeType":"MemberAccess","src":"1769:16:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1756:29:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":504,"nodeType":"ExpressionStatement","src":"1756:29:3"}]}},{"assignments":[508],"declarations":[{"constant":false,"id":508,"mutability":"mutable","name":"validAfter","nameLocation":"1806:10:3","nodeType":"VariableDeclaration","scope":525,"src":"1799:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":507,"name":"uint48","nodeType":"ElementaryTypeName","src":"1799:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":518,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":511,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"1826:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1845:2:3","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1850:3:3","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1845:8:3","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1844:10:3","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1826:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1819:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":509,"name":"uint48","nodeType":"ElementaryTypeName","src":"1819:6:3","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1819:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1799:56:3"},{"expression":{"arguments":[{"id":520,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"1884:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"1896:10:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":522,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"1908:10:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":519,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"1869:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$466_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1869:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$466_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":474,"id":524,"nodeType":"Return","src":"1862:57:3"}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"1260:235:3","text":" Extract aggregator/sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data.\n @return data - The unpacked in-memory validation data."},"id":526,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"1506:20:3","nodeType":"FunctionDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"validationData","nameLocation":"1541:14:3","nodeType":"VariableDeclaration","scope":526,"src":"1533:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1533:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1526:32:3"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"data","nameLocation":"1595:4:3","nodeType":"VariableDeclaration","scope":526,"src":"1573:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$466_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":472,"nodeType":"UserDefinedTypeName","pathNode":{"id":471,"name":"ValidationData","nameLocations":["1573:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":466,"src":"1573:14:3"},"referencedDeclaration":466,"src":"1573:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$466_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1572:28:3"},"scope":640,"src":"1497:426:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"2167:148:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":537,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"2198:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$466_memory_ptr","typeString":"struct ValidationData memory"}},"id":538,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2203:10:3","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":461,"src":"2198:15:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2190:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":535,"name":"uint160","nodeType":"ElementaryTypeName","src":"2190:7:3","typeDescriptions":{}}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2190:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":542,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"2235:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$466_memory_ptr","typeString":"struct ValidationData memory"}},"id":543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2240:10:3","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":465,"src":"2235:15:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2227:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"2227:7:3","typeDescriptions":{}}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2227:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2255:3:3","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2227:31:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2226:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2190:69:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":551,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"2280:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$466_memory_ptr","typeString":"struct ValidationData memory"}},"id":552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2285:10:3","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":463,"src":"2280:15:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2272:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2272:7:3","typeDescriptions":{}}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2272:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2301:3:3","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2307:2:3","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2301:8:3","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2300:10:3","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2272:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2271:40:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2190:121:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":534,"id":561,"nodeType":"Return","src":"2174:137:3"}]},"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"1927:150:3","text":" Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack.\n @return the packed validation data."},"id":563,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2088:19:3","nodeType":"FunctionDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"data","nameLocation":"2136:4:3","nodeType":"VariableDeclaration","scope":563,"src":"2114:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$466_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":529,"nodeType":"UserDefinedTypeName","pathNode":{"id":528,"name":"ValidationData","nameLocations":["2114:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":466,"src":"2114:14:3"},"referencedDeclaration":466,"src":"2114:14:3","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$466_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2107:36:3"},"returnParameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":563,"src":"2158:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2158:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2157:9:3"},"scope":640,"src":"2079:236:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":600,"nodeType":"Block","src":"2811:175:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":575,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2835:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":577,"name":"SIG_VALIDATION_SUCCESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"2872:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2835:59:3","trueExpression":{"id":576,"name":"SIG_VALIDATION_FAILED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"2848:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2834:61:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":582,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"2916:10:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2908:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"2908:7:3","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2908:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2931:3:3","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2908:26:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2907:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2834:101:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":590,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"2956:10:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2948:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"2948:7:3","typeDescriptions":{}}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2948:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2972:3:3","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:2:3","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2972:8:3","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2971:10:3","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2948:33:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2947:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2834:148:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":574,"id":599,"nodeType":"Return","src":"2818:164:3"}]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"2319:366:3","text":" Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\n @param validAfter - First timestamp this UserOperation is valid.\n @return the packed validation data."},"id":601,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2696:19:3","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"sigFailed","nameLocation":"2727:9:3","nodeType":"VariableDeclaration","scope":601,"src":"2722:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":565,"name":"bool","nodeType":"ElementaryTypeName","src":"2722:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"validUntil","nameLocation":"2750:10:3","nodeType":"VariableDeclaration","scope":601,"src":"2743:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":567,"name":"uint48","nodeType":"ElementaryTypeName","src":"2743:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"validAfter","nameLocation":"2774:10:3","nodeType":"VariableDeclaration","scope":601,"src":"2767:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":569,"name":"uint48","nodeType":"ElementaryTypeName","src":"2767:6:3","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2715:72:3"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"2802:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2801:9:3"},"scope":640,"src":"2687:299:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":610,"nodeType":"Block","src":"3371:216:3","statements":[{"AST":{"nativeSrc":"3407:173:3","nodeType":"YulBlock","src":"3407:173:3","statements":[{"nativeSrc":"3422:22:3","nodeType":"YulVariableDeclaration","src":"3422:22:3","value":{"arguments":[{"kind":"number","nativeSrc":"3439:4:3","nodeType":"YulLiteral","src":"3439:4:3","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3433:5:3","nodeType":"YulIdentifier","src":"3433:5:3"},"nativeSrc":"3433:11:3","nodeType":"YulFunctionCall","src":"3433:11:3"},"variables":[{"name":"mem","nativeSrc":"3426:3:3","nodeType":"YulTypedName","src":"3426:3:3","type":""}]},{"nativeSrc":"3458:22:3","nodeType":"YulVariableDeclaration","src":"3458:22:3","value":{"name":"data.length","nativeSrc":"3469:11:3","nodeType":"YulIdentifier","src":"3469:11:3"},"variables":[{"name":"len","nativeSrc":"3462:3:3","nodeType":"YulTypedName","src":"3462:3:3","type":""}]},{"expression":{"arguments":[{"name":"mem","nativeSrc":"3507:3:3","nodeType":"YulIdentifier","src":"3507:3:3"},{"name":"data.offset","nativeSrc":"3512:11:3","nodeType":"YulIdentifier","src":"3512:11:3"},{"name":"len","nativeSrc":"3525:3:3","nodeType":"YulIdentifier","src":"3525:3:3"}],"functionName":{"name":"calldatacopy","nativeSrc":"3494:12:3","nodeType":"YulIdentifier","src":"3494:12:3"},"nativeSrc":"3494:35:3","nodeType":"YulFunctionCall","src":"3494:35:3"},"nativeSrc":"3494:35:3","nodeType":"YulExpressionStatement","src":"3494:35:3"},{"nativeSrc":"3543:26:3","nodeType":"YulAssignment","src":"3543:26:3","value":{"arguments":[{"name":"mem","nativeSrc":"3560:3:3","nodeType":"YulIdentifier","src":"3560:3:3"},{"name":"len","nativeSrc":"3565:3:3","nodeType":"YulIdentifier","src":"3565:3:3"}],"functionName":{"name":"keccak256","nativeSrc":"3550:9:3","nodeType":"YulIdentifier","src":"3550:9:3"},"nativeSrc":"3550:19:3","nodeType":"YulFunctionCall","src":"3550:19:3"},"variableNames":[{"name":"ret","nativeSrc":"3543:3:3","nodeType":"YulIdentifier","src":"3543:3:3"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":604,"isOffset":false,"isSlot":false,"src":"3469:11:3","suffix":"length","valueSize":1},{"declaration":604,"isOffset":true,"isSlot":false,"src":"3512:11:3","suffix":"offset","valueSize":1},{"declaration":607,"isOffset":false,"isSlot":false,"src":"3543:3:3","valueSize":1}],"flags":["memory-safe"],"id":609,"nodeType":"InlineAssembly","src":"3382:198:3"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"2990:303:3","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n @param data - the calldata bytes array to perform keccak on.\n @return ret - the keccak hash of the 'data' array."},"id":611,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3308:14:3","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"data","nameLocation":"3338:4:3","nodeType":"VariableDeclaration","scope":611,"src":"3323:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":603,"name":"bytes","nodeType":"ElementaryTypeName","src":"3323:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3322:21:3"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"ret","nameLocation":"3366:3:3","nodeType":"VariableDeclaration","scope":611,"src":"3358:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3358:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3357:13:3"},"scope":640,"src":"3299:288:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"3789:39:3","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"3807:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":622,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"3811:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3807:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":625,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"3819:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3807:13:3","trueExpression":{"id":624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"3815:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":620,"id":627,"nodeType":"Return","src":"3800:20:3"}]},"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"3593:132:3","text":" The minimum of two numbers.\n @param a - First number.\n @param b - Second number.\n @return - the minimum value."},"id":629,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"min","nameLocation":"3740:3:3","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"a","nameLocation":"3752:1:3","nodeType":"VariableDeclaration","scope":629,"src":"3744:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3744:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"b","nameLocation":"3763:1:3","nodeType":"VariableDeclaration","scope":629,"src":"3755:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"3755:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:22:3"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":629,"src":"3780:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"3780:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3779:9:3"},"scope":640,"src":"3731:97:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"4129:444:3","statements":[{"AST":{"nativeSrc":"4166:400:3","nodeType":"YulBlock","src":"4166:400:3","statements":[{"expression":{"arguments":[{"name":"memPointer","nativeSrc":"4201:10:3","nodeType":"YulIdentifier","src":"4201:10:3"},{"name":"allocationSize","nativeSrc":"4213:14:3","nodeType":"YulIdentifier","src":"4213:14:3"}],"functionName":{"name":"finalize_allocation","nativeSrc":"4181:19:3","nodeType":"YulIdentifier","src":"4181:19:3"},"nativeSrc":"4181:47:3","nodeType":"YulFunctionCall","src":"4181:47:3"},"nativeSrc":"4181:47:3","nodeType":"YulExpressionStatement","src":"4181:47:3"},{"body":{"nativeSrc":"4287:132:3","nodeType":"YulBlock","src":"4287:132:3","statements":[{"nativeSrc":"4306:58:3","nodeType":"YulVariableDeclaration","src":"4306:58:3","value":{"arguments":[{"name":"memPtr","nativeSrc":"4328:6:3","nodeType":"YulIdentifier","src":"4328:6:3"},{"arguments":[{"name":"size","nativeSrc":"4358:4:3","nodeType":"YulIdentifier","src":"4358:4:3"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4336:21:3","nodeType":"YulIdentifier","src":"4336:21:3"},"nativeSrc":"4336:27:3","nodeType":"YulFunctionCall","src":"4336:27:3"}],"functionName":{"name":"add","nativeSrc":"4324:3:3","nodeType":"YulIdentifier","src":"4324:3:3"},"nativeSrc":"4324:40:3","nodeType":"YulFunctionCall","src":"4324:40:3"},"variables":[{"name":"newFreePtr","nativeSrc":"4310:10:3","nodeType":"YulTypedName","src":"4310:10:3","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4389:2:3","nodeType":"YulLiteral","src":"4389:2:3","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4393:10:3","nodeType":"YulIdentifier","src":"4393:10:3"}],"functionName":{"name":"mstore","nativeSrc":"4382:6:3","nodeType":"YulIdentifier","src":"4382:6:3"},"nativeSrc":"4382:22:3","nodeType":"YulFunctionCall","src":"4382:22:3"},"nativeSrc":"4382:22:3","nodeType":"YulExpressionStatement","src":"4382:22:3"}]},"name":"finalize_allocation","nativeSrc":"4244:175:3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"4273:6:3","nodeType":"YulTypedName","src":"4273:6:3","type":""},{"name":"size","nativeSrc":"4281:4:3","nodeType":"YulTypedName","src":"4281:4:3","type":""}],"src":"4244:175:3"},{"body":{"nativeSrc":"4483:72:3","nodeType":"YulBlock","src":"4483:72:3","statements":[{"nativeSrc":"4502:38:3","nodeType":"YulAssignment","src":"4502:38:3","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4520:5:3","nodeType":"YulIdentifier","src":"4520:5:3"},{"kind":"number","nativeSrc":"4527:2:3","nodeType":"YulLiteral","src":"4527:2:3","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4516:3:3","nodeType":"YulIdentifier","src":"4516:3:3"},"nativeSrc":"4516:14:3","nodeType":"YulFunctionCall","src":"4516:14:3"},{"arguments":[{"kind":"number","nativeSrc":"4536:2:3","nodeType":"YulLiteral","src":"4536:2:3","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4532:3:3","nodeType":"YulIdentifier","src":"4532:3:3"},"nativeSrc":"4532:7:3","nodeType":"YulFunctionCall","src":"4532:7:3"}],"functionName":{"name":"and","nativeSrc":"4512:3:3","nodeType":"YulIdentifier","src":"4512:3:3"},"nativeSrc":"4512:28:3","nodeType":"YulFunctionCall","src":"4512:28:3"},"variableNames":[{"name":"result","nativeSrc":"4502:6:3","nodeType":"YulIdentifier","src":"4502:6:3"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"4435:120:3","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4466:5:3","nodeType":"YulTypedName","src":"4466:5:3","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4476:6:3","nodeType":"YulTypedName","src":"4476:6:3","type":""}],"src":"4435:120:3"}]},"evmVersion":"cancun","externalReferences":[{"declaration":634,"isOffset":false,"isSlot":false,"src":"4213:14:3","valueSize":1},{"declaration":632,"isOffset":false,"isSlot":false,"src":"4201:10:3","valueSize":1}],"flags":["memory-safe"],"id":637,"nodeType":"InlineAssembly","src":"4142:424:3"}]},"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"3832:214:3","text":" standard solidity memory allocation finalization.\n copied from solidity generated code\n @param memPointer - The current memory pointer\n @param allocationSize - Bytes allocated from memPointer."},"id":639,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"finalizeAllocation","nameLocation":"4061:18:3","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"memPointer","nameLocation":"4088:10:3","nodeType":"VariableDeclaration","scope":639,"src":"4080:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"4080:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"allocationSize","nameLocation":"4108:14:3","nodeType":"VariableDeclaration","scope":639,"src":"4100:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"4100:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4079:44:3"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"4129:0:3"},"scope":640,"src":"4052:521:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"33:4542:3"},"id":3},"contracts/lib/core/UserOperationLib.sol":{"ast":{"absolutePath":"contracts/lib/core/UserOperationLib.sol","exportedSymbols":{"PackedUserOperation":[1395],"UserOperationLib":[975],"calldataKeccak":[611],"min":[629]},"id":976,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":641,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:4"},{"absolutePath":"contracts/lib/interfaces/PackedUserOperation.sol","file":"../interfaces/PackedUserOperation.sol","id":642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":976,"sourceUnit":1396,"src":"100:47:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/core/Helpers.sol","file":"./Helpers.sol","id":645,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":976,"sourceUnit":640,"src":"148:50:4","symbolAliases":[{"foreign":{"id":643,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"156:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":644,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"172:3:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"200:77:4","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":975,"linearizedBaseContracts":[975],"name":"UserOperationLib","nameLocation":"286:16:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"b29a8ff4","id":649,"mutability":"constant","name":"PAYMASTER_VALIDATION_GAS_OFFSET","nameLocation":"334:31:4","nodeType":"VariableDeclaration","scope":975,"src":"310:60:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"310:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"368:2:4","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"functionSelector":"25093e1b","id":652,"mutability":"constant","name":"PAYMASTER_POSTOP_GAS_OFFSET","nameLocation":"400:27:4","nodeType":"VariableDeclaration","scope":975,"src":"376:56:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":650,"name":"uint256","nodeType":"ElementaryTypeName","src":"376:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3336","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"430:2:4","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"36"},"visibility":"public"},{"constant":true,"functionSelector":"ede31502","id":655,"mutability":"constant","name":"PAYMASTER_DATA_OFFSET","nameLocation":"462:21:4","nodeType":"VariableDeclaration","scope":975,"src":"438:50:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3532","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"486:2:4","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"visibility":"public"},{"body":{"id":682,"nodeType":"Block","src":"795:209:4","statements":[{"id":681,"nodeType":"UncheckedBlock","src":"805:193:4","statements":[{"assignments":[665,667],"declarations":[{"constant":false,"id":665,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"838:20:4","nodeType":"VariableDeclaration","scope":681,"src":"830:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"830:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":667,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"868:12:4","nodeType":"VariableDeclaration","scope":681,"src":"860:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":666,"name":"uint256","nodeType":"ElementaryTypeName","src":"860:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":672,"initialValue":{"arguments":[{"expression":{"id":669,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"896:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"903:7:4","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"896:14:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":668,"name":"unpackUints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"884:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"884:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"829:82:4"},{"expression":{"arguments":[{"id":674,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"936:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":675,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"950:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":676,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"973:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"979:7:4","memberName":"basefee","nodeType":"MemberAccess","src":"973:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"950:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":673,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"932:3:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":663,"id":680,"nodeType":"Return","src":"925:62:4"}]}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"495:194:4","text":" Relayer/block builder might submit the TX with higher priorityFee,\n but the user should not pay above what he signed for.\n @param userOp - The user operation data."},"id":683,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"703:8:4","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"userOp","nameLocation":"750:6:4","nodeType":"VariableDeclaration","scope":683,"src":"721:35:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":658,"nodeType":"UserDefinedTypeName","pathNode":{"id":657,"name":"PackedUserOperation","nameLocations":["721:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"721:19:4"},"referencedDeclaration":1395,"src":"721:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"711:51:4"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":683,"src":"786:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"785:9:4"},"scope":975,"src":"694:310:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":true,"id":688,"mutability":"constant","name":"PACKED_USEROP_TYPEHASH","nameLocation":"1036:22:4","nodeType":"VariableDeclaration","scope":975,"src":"1010:252:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1010:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5061636b6564557365724f7065726174696f6e28616464726573732073656e6465722c75696e74323536206e6f6e63652c627974657320696e6974436f64652c62797465732063616c6c446174612c62797465733332206163636f756e744761734c696d6974732c75696e7432353620707265566572696669636174696f6e4761732c6279746573333220676173466565732c6279746573207061796d6173746572416e644461746129","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1084:172:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_29a0bca4af4be3421398da00295e58e6d7de38cb492214754cb6a47507dd6f8e","typeString":"literal_string \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\""},"value":"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_29a0bca4af4be3421398da00295e58e6d7de38cb492214754cb6a47507dd6f8e","typeString":"literal_string \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\""}],"id":685,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1065:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:197:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"body":{"id":764,"nodeType":"Block","src":"1641:761:4","statements":[{"assignments":[700],"declarations":[{"constant":false,"id":700,"mutability":"mutable","name":"sender","nameLocation":"1659:6:4","nodeType":"VariableDeclaration","scope":764,"src":"1651:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"1651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":703,"initialValue":{"expression":{"id":701,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"1668:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1675:6:4","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"1668:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1651:30:4"},{"assignments":[705],"declarations":[{"constant":false,"id":705,"mutability":"mutable","name":"nonce","nameLocation":"1699:5:4","nodeType":"VariableDeclaration","scope":764,"src":"1691:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":704,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":708,"initialValue":{"expression":{"id":706,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"1707:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1714:5:4","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1380,"src":"1707:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1691:28:4"},{"assignments":[710],"declarations":[{"constant":false,"id":710,"mutability":"mutable","name":"hashInitCode","nameLocation":"1737:12:4","nodeType":"VariableDeclaration","scope":764,"src":"1729:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1729:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":720,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":711,"name":"overrideInitCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"1752:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1776:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1752:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"expression":{"id":716,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"1818:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1825:8:4","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"1818:15:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":715,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"1803:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1803:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1752:82:4","trueExpression":{"id":714,"name":"overrideInitCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"1780:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1729:105:4"},{"assignments":[722],"declarations":[{"constant":false,"id":722,"mutability":"mutable","name":"hashCallData","nameLocation":"1852:12:4","nodeType":"VariableDeclaration","scope":764,"src":"1844:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1844:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":727,"initialValue":{"arguments":[{"expression":{"id":724,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"1882:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:8:4","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":1384,"src":"1882:15:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":723,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"1867:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1867:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1844:54:4"},{"assignments":[729],"declarations":[{"constant":false,"id":729,"mutability":"mutable","name":"accountGasLimits","nameLocation":"1916:16:4","nodeType":"VariableDeclaration","scope":764,"src":"1908:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1908:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":732,"initialValue":{"expression":{"id":730,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"1935:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1942:16:4","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":1386,"src":"1935:23:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1908:50:4"},{"assignments":[734],"declarations":[{"constant":false,"id":734,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1976:18:4","nodeType":"VariableDeclaration","scope":764,"src":"1968:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1968:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":737,"initialValue":{"expression":{"id":735,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"1997:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2004:18:4","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":1388,"src":"1997:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1968:54:4"},{"assignments":[739],"declarations":[{"constant":false,"id":739,"mutability":"mutable","name":"gasFees","nameLocation":"2040:7:4","nodeType":"VariableDeclaration","scope":764,"src":"2032:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2032:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":742,"initialValue":{"expression":{"id":740,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"2050:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2057:7:4","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"2050:14:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2032:32:4"},{"assignments":[744],"declarations":[{"constant":false,"id":744,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"2082:20:4","nodeType":"VariableDeclaration","scope":764,"src":"2074:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2074:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":749,"initialValue":{"arguments":[{"expression":{"id":746,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"2120:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2127:16:4","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1392,"src":"2120:23:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":745,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"2105:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2074:70:4"},{"expression":{"arguments":[{"expression":{"id":752,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"2186:16:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$975_$","typeString":"type(library UserOperationLib)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2203:22:4","memberName":"PACKED_USEROP_TYPEHASH","nodeType":"MemberAccess","referencedDeclaration":688,"src":"2186:39:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":754,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"2239:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"2247:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":756,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"2266:12:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":757,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"2280:12:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":758,"name":"accountGasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"2306:16:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":759,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"2324:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":760,"name":"gasFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"2344:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":761,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"2365:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":750,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2162:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2166:6:4","memberName":"encode","nodeType":"MemberAccess","src":"2162:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:233:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":698,"id":763,"nodeType":"Return","src":"2155:240:4"}]},"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"1269:221:4","text":" Pack the user operation data into bytes for hashing.\n @param userOp - The user operation data.\n @param overrideInitCodeHash - If set, encode this instead of the initCode field in the userOp."},"id":765,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"1504:6:4","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"userOp","nameLocation":"1549:6:4","nodeType":"VariableDeclaration","scope":765,"src":"1520:35:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":691,"nodeType":"UserDefinedTypeName","pathNode":{"id":690,"name":"PackedUserOperation","nameLocations":["1520:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"1520:19:4"},"referencedDeclaration":1395,"src":"1520:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"overrideInitCodeHash","nameLocation":"1573:20:4","nodeType":"VariableDeclaration","scope":765,"src":"1565:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1565:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1510:89:4"},"returnParameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":697,"mutability":"mutable","name":"ret","nameLocation":"1636:3:4","nodeType":"VariableDeclaration","scope":765,"src":"1623:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":696,"name":"bytes","nodeType":"ElementaryTypeName","src":"1623:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1622:18:4"},"scope":975,"src":"1495:907:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":782,"nodeType":"Block","src":"2515:69:4","statements":[{"expression":{"components":[{"arguments":[{"id":775,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"2547:6:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":774,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"2533:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":778,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"2569:6:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":777,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"2556:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2556:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2532:45:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":773,"id":781,"nodeType":"Return","src":"2525:52:4"}]},"id":783,"implemented":true,"kind":"function","modifiers":[],"name":"unpackUints","nameLocation":"2417:11:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"packed","nameLocation":"2446:6:4","nodeType":"VariableDeclaration","scope":783,"src":"2438:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":766,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2438:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2428:30:4"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"high128","nameLocation":"2490:7:4","nodeType":"VariableDeclaration","scope":783,"src":"2482:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"low128","nameLocation":"2507:6:4","nodeType":"VariableDeclaration","scope":783,"src":"2499:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2481:33:4"},"scope":975,"src":"2408:176:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"2718:46:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":792,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"2743:6:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"2735:7:4","typeDescriptions":{}}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2754:3:4","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2735:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":789,"id":796,"nodeType":"Return","src":"2728:29:4"}]},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"unpackHigh128","nameLocation":"2656:13:4","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"packed","nameLocation":"2678:6:4","nodeType":"VariableDeclaration","scope":798,"src":"2670:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2670:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2669:16:4"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":798,"src":"2709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"2709:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2708:9:4"},"scope":975,"src":"2647:117:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":813,"nodeType":"Block","src":"2896:48:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":809,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"2929:6:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2921:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"2921:7:4","typeDescriptions":{}}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2921:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2913:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":805,"name":"uint128","nodeType":"ElementaryTypeName","src":"2913:7:4","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2913:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":804,"id":812,"nodeType":"Return","src":"2906:31:4"}]},"id":814,"implemented":true,"kind":"function","modifiers":[],"name":"unpackLow128","nameLocation":"2835:12:4","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"packed","nameLocation":"2856:6:4","nodeType":"VariableDeclaration","scope":814,"src":"2848:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":799,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2848:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2847:16:4"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"2887:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"2887:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2886:9:4"},"scope":975,"src":"2826:118:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":827,"nodeType":"Block","src":"3059:53:4","statements":[{"expression":{"arguments":[{"expression":{"id":823,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"3090:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3097:7:4","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"3090:14:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":822,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"3076:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3076:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":821,"id":826,"nodeType":"Return","src":"3069:36:4"}]},"id":828,"implemented":true,"kind":"function","modifiers":[],"name":"unpackMaxPriorityFeePerGas","nameLocation":"2959:26:4","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"userOp","nameLocation":"3015:6:4","nodeType":"VariableDeclaration","scope":828,"src":"2986:35:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":816,"nodeType":"UserDefinedTypeName","pathNode":{"id":815,"name":"PackedUserOperation","nameLocations":["2986:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"2986:19:4"},"referencedDeclaration":1395,"src":"2986:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"2985:37:4"},"returnParameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":828,"src":"3050:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:4"},"scope":975,"src":"2950:162:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":841,"nodeType":"Block","src":"3219:52:4","statements":[{"expression":{"arguments":[{"expression":{"id":837,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"3249:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:7:4","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"3249:14:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":836,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3236:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":835,"id":840,"nodeType":"Return","src":"3229:35:4"}]},"id":842,"implemented":true,"kind":"function","modifiers":[],"name":"unpackMaxFeePerGas","nameLocation":"3127:18:4","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"userOp","nameLocation":"3175:6:4","nodeType":"VariableDeclaration","scope":842,"src":"3146:35:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":830,"nodeType":"UserDefinedTypeName","pathNode":{"id":829,"name":"PackedUserOperation","nameLocations":["3146:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"3146:19:4"},"referencedDeclaration":1395,"src":"3146:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3145:37:4"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":842,"src":"3210:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:4"},"scope":975,"src":"3118:153:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":855,"nodeType":"Block","src":"3386:62:4","statements":[{"expression":{"arguments":[{"expression":{"id":851,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"3417:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3424:16:4","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":1386,"src":"3417:23:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":850,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"3403:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3403:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":849,"id":854,"nodeType":"Return","src":"3396:45:4"}]},"id":856,"implemented":true,"kind":"function","modifiers":[],"name":"unpackVerificationGasLimit","nameLocation":"3286:26:4","nodeType":"FunctionDefinition","parameters":{"id":846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"userOp","nameLocation":"3342:6:4","nodeType":"VariableDeclaration","scope":856,"src":"3313:35:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":844,"nodeType":"UserDefinedTypeName","pathNode":{"id":843,"name":"PackedUserOperation","nameLocations":["3313:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"3313:19:4"},"referencedDeclaration":1395,"src":"3313:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3312:37:4"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":856,"src":"3377:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"3377:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3376:9:4"},"scope":975,"src":"3277:171:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":869,"nodeType":"Block","src":"3555:61:4","statements":[{"expression":{"arguments":[{"expression":{"id":865,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"3585:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3592:16:4","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":1386,"src":"3585:23:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":864,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3572:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":863,"id":868,"nodeType":"Return","src":"3565:44:4"}]},"id":870,"implemented":true,"kind":"function","modifiers":[],"name":"unpackCallGasLimit","nameLocation":"3463:18:4","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"userOp","nameLocation":"3511:6:4","nodeType":"VariableDeclaration","scope":870,"src":"3482:35:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":858,"nodeType":"UserDefinedTypeName","pathNode":{"id":857,"name":"PackedUserOperation","nameLocations":["3482:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"3482:19:4"},"referencedDeclaration":1395,"src":"3482:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3481:37:4"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":870,"src":"3546:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"3546:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3545:9:4"},"scope":975,"src":"3454:162:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":890,"nodeType":"Block","src":"3740:128:4","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":882,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"3773:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3780:16:4","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1392,"src":"3773:23:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":885,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"3831:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3773:86:4","startExpression":{"id":884,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"3797:31:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3765:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":880,"name":"bytes16","nodeType":"ElementaryTypeName","src":"3765:7:4","typeDescriptions":{}}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3765:95:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3757:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":878,"name":"uint128","nodeType":"ElementaryTypeName","src":"3757:7:4","typeDescriptions":{}}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3757:104:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":877,"id":889,"nodeType":"Return","src":"3750:111:4"}]},"id":891,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPaymasterVerificationGasLimit","nameLocation":"3631:35:4","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"userOp","nameLocation":"3696:6:4","nodeType":"VariableDeclaration","scope":891,"src":"3667:35:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":872,"nodeType":"UserDefinedTypeName","pathNode":{"id":871,"name":"PackedUserOperation","nameLocations":["3667:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"3667:19:4"},"referencedDeclaration":1395,"src":"3667:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3666:37:4"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":891,"src":"3731:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"3731:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3730:9:4"},"scope":975,"src":"3622:246:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"3977:118:4","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":903,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"4010:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4017:16:4","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1392,"src":"4010:23:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":906,"name":"PAYMASTER_DATA_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"4064:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4010:76:4","startExpression":{"id":905,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4034:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4002:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":901,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4002:7:4","typeDescriptions":{}}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4002:85:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":899,"name":"uint128","nodeType":"ElementaryTypeName","src":"3994:7:4","typeDescriptions":{}}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:94:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":898,"id":910,"nodeType":"Return","src":"3987:101:4"}]},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPostOpGasLimit","nameLocation":"3883:20:4","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"userOp","nameLocation":"3933:6:4","nodeType":"VariableDeclaration","scope":912,"src":"3904:35:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":893,"nodeType":"UserDefinedTypeName","pathNode":{"id":892,"name":"PackedUserOperation","nameLocations":["3904:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"3904:19:4"},"referencedDeclaration":1395,"src":"3904:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3903:37:4"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":912,"src":"3968:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"3968:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3967:9:4"},"scope":975,"src":"3874:221:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":954,"nodeType":"Block","src":"4279:329:4","statements":[{"expression":{"components":[{"arguments":[{"arguments":[{"baseExpression":{"id":927,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"4326:16:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":928,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"4345:31:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4326:51:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4318:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":925,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4318:7:4","typeDescriptions":{}}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4310:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:4","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4310:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"baseExpression":{"id":936,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"4409:16:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":938,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4460:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4409:79:4","startExpression":{"id":937,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"4426:31:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4401:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":934,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4401:7:4","typeDescriptions":{}}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4401:88:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4393:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":932,"name":"uint128","nodeType":"ElementaryTypeName","src":"4393:7:4","typeDescriptions":{}}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4393:97:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"baseExpression":{"id":946,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"4520:16:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":948,"name":"PAYMASTER_DATA_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"4567:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4520:69:4","startExpression":{"id":947,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4537:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4512:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":944,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4512:7:4","typeDescriptions":{}}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4512:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":942,"name":"uint128","nodeType":"ElementaryTypeName","src":"4504:7:4","typeDescriptions":{}}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4296:305:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint128_$_t_uint128_$","typeString":"tuple(address,uint128,uint128)"}},"functionReturnParameters":922,"id":953,"nodeType":"Return","src":"4289:312:4"}]},"id":955,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPaymasterStaticFields","nameLocation":"4110:27:4","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"paymasterAndData","nameLocation":"4162:16:4","nodeType":"VariableDeclaration","scope":955,"src":"4147:31:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4147:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4137:47:4"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"paymaster","nameLocation":"4216:9:4","nodeType":"VariableDeclaration","scope":955,"src":"4208:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"4208:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"validationGasLimit","nameLocation":"4235:18:4","nodeType":"VariableDeclaration","scope":955,"src":"4227:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"4227:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"postOpGasLimit","nameLocation":"4263:14:4","nodeType":"VariableDeclaration","scope":955,"src":"4255:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"4255:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4207:71:4"},"scope":975,"src":"4101:507:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":973,"nodeType":"Block","src":"4971:71:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":968,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"5005:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":969,"name":"overrideInitCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"5013:20:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":967,"name":"encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"4998:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PackedUserOperation_$1395_calldata_ptr_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct PackedUserOperation calldata,bytes32) pure returns (bytes memory)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4998:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":966,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4988:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4988:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":965,"id":972,"nodeType":"Return","src":"4981:54:4"}]},"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"4614:217:4","text":" Hash the user operation data.\n @param userOp - The user operation data.\n @param overrideInitCodeHash - If set, the initCode hash will be replaced with this value just for UserOp hashing."},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"4845:4:4","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"userOp","nameLocation":"4888:6:4","nodeType":"VariableDeclaration","scope":974,"src":"4859:35:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":958,"nodeType":"UserDefinedTypeName","pathNode":{"id":957,"name":"PackedUserOperation","nameLocations":["4859:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"4859:19:4"},"referencedDeclaration":1395,"src":"4859:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"overrideInitCodeHash","nameLocation":"4912:20:4","nodeType":"VariableDeclaration","scope":974,"src":"4904:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4904:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4849:89:4"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":974,"src":"4962:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4962:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4961:9:4"},"scope":975,"src":"4836:206:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":976,"src":"278:4766:4","usedErrors":[],"usedEvents":[]}],"src":"32:5013:4"},"id":4},"contracts/lib/interfaces/IAggregator.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[1009],"PackedUserOperation":[1395]},"id":1010,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":977,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:5"},{"absolutePath":"contracts/lib/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":978,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1010,"sourceUnit":1396,"src":"61:35:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"100:45:5","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":1009,"linearizedBaseContracts":[1009],"name":"IAggregator","nameLocation":"157:11:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"176:281:5","text":" Validate an aggregated signature.\n Reverts if the aggregated signature does not match the given list of operations.\n @param userOps   - An array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."},"functionSelector":"2dd81133","id":989,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"472:18:5","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"userOps","nameLocation":"532:7:5","nodeType":"VariableDeclaration","scope":989,"src":"501:38:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1395_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":982,"nodeType":"UserDefinedTypeName","pathNode":{"id":981,"name":"PackedUserOperation","nameLocations":["501:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"501:19:5"},"referencedDeclaration":1395,"src":"501:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"id":983,"nodeType":"ArrayTypeName","src":"501:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1395_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"signature","nameLocation":"565:9:5","nodeType":"VariableDeclaration","scope":989,"src":"550:24:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":985,"name":"bytes","nodeType":"ElementaryTypeName","src":"550:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"490:91:5"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"590:0:5"},"scope":1009,"src":"463:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":990,"nodeType":"StructuredDocumentation","src":"599:622:5","text":" Validate the signature of a single userOp.\n This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n the aggregator this account uses.\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."},"functionSelector":"062a422b","id":998,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1236:23:5","nodeType":"FunctionDefinition","parameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"userOp","nameLocation":"1299:6:5","nodeType":"VariableDeclaration","scope":998,"src":"1270:35:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":992,"nodeType":"UserDefinedTypeName","pathNode":{"id":991,"name":"PackedUserOperation","nameLocations":["1270:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"1270:19:5"},"referencedDeclaration":1395,"src":"1270:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1259:53:5"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1349:12:5","nodeType":"VariableDeclaration","scope":998,"src":"1336:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":995,"name":"bytes","nodeType":"ElementaryTypeName","src":"1336:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1335:27:5"},"scope":1009,"src":"1227:136:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"1371:399:5","text":" Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code to perform this aggregation.\n @param userOps              - An array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."},"functionSelector":"ae574a43","id":1008,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1785:19:5","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"userOps","nameLocation":"1846:7:5","nodeType":"VariableDeclaration","scope":1008,"src":"1815:38:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1395_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":1001,"nodeType":"UserDefinedTypeName","pathNode":{"id":1000,"name":"PackedUserOperation","nameLocations":["1815:19:5"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"1815:19:5"},"referencedDeclaration":1395,"src":"1815:19:5","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"id":1002,"nodeType":"ArrayTypeName","src":"1815:21:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1395_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"}],"src":"1804:56:5"},"returnParameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1897:19:5","nodeType":"VariableDeclaration","scope":1008,"src":"1884:32:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1005,"name":"bytes","nodeType":"ElementaryTypeName","src":"1884:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1883:34:5"},"scope":1009,"src":"1776:142:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1010,"src":"147:1774:5","usedErrors":[],"usedEvents":[]}],"src":"33:1890:5"},"id":5},"contracts/lib/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[1009],"IEntryPoint":[1194],"INonceManager":[1213],"ISenderCreator":[1269],"IStakeManager":[1373],"PackedUserOperation":[1395]},"id":1195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1011,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"164:24:6"},{"absolutePath":"contracts/lib/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":1012,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1195,"sourceUnit":1396,"src":"318:35:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":1013,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1195,"sourceUnit":1374,"src":"355:29:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":1014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1195,"sourceUnit":1010,"src":"386:27:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":1015,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1195,"sourceUnit":1214,"src":"415:29:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/interfaces/ISenderCreator.sol","file":"./ISenderCreator.sol","id":1016,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1195,"sourceUnit":1270,"src":"446:30:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1017,"name":"IStakeManager","nameLocations":["505:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1373,"src":"505:13:6"},"id":1018,"nodeType":"InheritanceSpecifier","src":"505:13:6"},{"baseName":{"id":1019,"name":"INonceManager","nameLocations":["520:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"520:13:6"},"id":1020,"nodeType":"InheritanceSpecifier","src":"520:13:6"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1194,"linearizedBaseContracts":[1194,1213,1373],"name":"IEntryPoint","nameLocation":"490:11:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":1036,"name":"UserOperationEvent","nameLocation":"1311:18:6","nodeType":"EventDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1356:10:6","nodeType":"VariableDeclaration","scope":1036,"src":"1340:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1340:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1024,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1393:6:6","nodeType":"VariableDeclaration","scope":1036,"src":"1377:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"1377:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1026,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1426:9:6","nodeType":"VariableDeclaration","scope":1036,"src":"1410:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"1410:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1028,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1454:5:6","nodeType":"VariableDeclaration","scope":1036,"src":"1446:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1030,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1475:7:6","nodeType":"VariableDeclaration","scope":1036,"src":"1470:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1029,"name":"bool","nodeType":"ElementaryTypeName","src":"1470:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1032,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1501:13:6","nodeType":"VariableDeclaration","scope":1036,"src":"1493:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1034,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1533:13:6","nodeType":"VariableDeclaration","scope":1036,"src":"1525:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1329:224:6"},"src":"1305:249:6"},{"anonymous":false,"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"1562:355:6","text":" Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":1047,"name":"AccountDeployed","nameLocation":"1929:15:6","nodeType":"EventDefinition","parameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1971:10:6","nodeType":"VariableDeclaration","scope":1047,"src":"1955:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1955:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1041,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2008:6:6","nodeType":"VariableDeclaration","scope":1047,"src":"1992:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"1992:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1043,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"2033:7:6","nodeType":"VariableDeclaration","scope":1047,"src":"2025:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1045,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"2059:9:6","nodeType":"VariableDeclaration","scope":1047,"src":"2051:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"2051:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1944:131:6"},"src":"1923:153:6"},{"anonymous":false,"documentation":{"id":1048,"nodeType":"StructuredDocumentation","src":"2084:362:6","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the reverted \"callData\" call."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":1058,"name":"UserOperationRevertReason","nameLocation":"2458:25:6","nodeType":"EventDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2510:10:6","nodeType":"VariableDeclaration","scope":1058,"src":"2494:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2494:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1052,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2547:6:6","nodeType":"VariableDeclaration","scope":1058,"src":"2531:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"2531:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1054,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2572:5:6","nodeType":"VariableDeclaration","scope":1058,"src":"2564:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"2564:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1056,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2594:12:6","nodeType":"VariableDeclaration","scope":1058,"src":"2588:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1055,"name":"bytes","nodeType":"ElementaryTypeName","src":"2588:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2483:130:6"},"src":"2452:162:6"},{"anonymous":false,"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"2622:378:6","text":" An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the reverted call to \"postOp\"."},"eventSelector":"f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792","id":1069,"name":"PostOpRevertReason","nameLocation":"3012:18:6","nodeType":"EventDefinition","parameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3057:10:6","nodeType":"VariableDeclaration","scope":1069,"src":"3041:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3041:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1063,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3094:6:6","nodeType":"VariableDeclaration","scope":1069,"src":"3078:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"3078:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3119:5:6","nodeType":"VariableDeclaration","scope":1069,"src":"3111:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1064,"name":"uint256","nodeType":"ElementaryTypeName","src":"3111:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1067,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"3141:12:6","nodeType":"VariableDeclaration","scope":1069,"src":"3135:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1066,"name":"bytes","nodeType":"ElementaryTypeName","src":"3135:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3030:130:6"},"src":"3006:155:6"},{"anonymous":false,"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"3169:289:6","text":" UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request."},"eventSelector":"67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e","id":1078,"name":"UserOperationPrefundTooLow","nameLocation":"3470:26:6","nodeType":"EventDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3523:10:6","nodeType":"VariableDeclaration","scope":1078,"src":"3507:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3507:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1074,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3560:6:6","nodeType":"VariableDeclaration","scope":1078,"src":"3544:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"3544:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1076,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3585:5:6","nodeType":"VariableDeclaration","scope":1078,"src":"3577:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1075,"name":"uint256","nodeType":"ElementaryTypeName","src":"3577:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3496:101:6"},"src":"3464:134:6"},{"anonymous":false,"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"3606:187:6","text":" An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":1081,"name":"BeforeExecution","nameLocation":"3805:15:6","nodeType":"EventDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"3820:2:6"},"src":"3799:24:6"},{"anonymous":false,"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"3831:190:6","text":" Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":1086,"name":"SignatureAggregatorChanged","nameLocation":"4033:26:6","nodeType":"EventDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"4076:10:6","nodeType":"VariableDeclaration","scope":1086,"src":"4060:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"4060:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4059:28:6"},"src":"4027:61:6"},{"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"4096:828:6","text":" A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op.\n Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."},"errorSelector":"220266b6","id":1093,"name":"FailedOp","nameLocation":"4936:8:6","nodeType":"ErrorDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"opIndex","nameLocation":"4953:7:6","nodeType":"VariableDeclaration","scope":1093,"src":"4945:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"4945:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"reason","nameLocation":"4969:6:6","nodeType":"VariableDeclaration","scope":1093,"src":"4962:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1090,"name":"string","nodeType":"ElementaryTypeName","src":"4962:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4944:32:6"},"src":"4930:47:6"},{"documentation":{"id":1094,"nodeType":"StructuredDocumentation","src":"4985:435:6","text":" A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. see FailedOp(uint256,string), above\n @param inner   - data from inner cought revert reason\n @dev note that inner is truncated to 2048 bytes"},"errorSelector":"65c8fd4d","id":1102,"name":"FailedOpWithRevert","nameLocation":"5432:18:6","nodeType":"ErrorDefinition","parameters":{"id":1101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"opIndex","nameLocation":"5459:7:6","nodeType":"VariableDeclaration","scope":1102,"src":"5451:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"5451:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"reason","nameLocation":"5475:6:6","nodeType":"VariableDeclaration","scope":1102,"src":"5468:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1097,"name":"string","nodeType":"ElementaryTypeName","src":"5468:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"inner","nameLocation":"5489:5:6","nodeType":"VariableDeclaration","scope":1102,"src":"5483:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1099,"name":"bytes","nodeType":"ElementaryTypeName","src":"5483:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5450:45:6"},"src":"5426:70:6"},{"errorSelector":"ad7954bc","id":1106,"name":"PostOpReverted","nameLocation":"5510:14:6","nodeType":"ErrorDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"returnData","nameLocation":"5531:10:6","nodeType":"VariableDeclaration","scope":1106,"src":"5525:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1103,"name":"bytes","nodeType":"ElementaryTypeName","src":"5525:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5524:18:6"},"src":"5504:39:6"},{"documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"5551:193:6","text":" Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"},"errorSelector":"86a9f750","id":1111,"name":"SignatureValidationFailed","nameLocation":"5756:25:6","nodeType":"ErrorDefinition","parameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1109,"mutability":"mutable","name":"aggregator","nameLocation":"5790:10:6","nodeType":"VariableDeclaration","scope":1111,"src":"5782:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"5782:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5781:20:6"},"src":"5750:52:6"},{"errorSelector":"6ca7b806","id":1115,"name":"SenderAddressResult","nameLocation":"5858:19:6","nodeType":"ErrorDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"sender","nameLocation":"5886:6:6","nodeType":"VariableDeclaration","scope":1115,"src":"5878:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"5878:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5877:16:6"},"src":"5852:42:6"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":1125,"members":[{"constant":false,"id":1119,"mutability":"mutable","name":"userOps","nameLocation":"6004:7:6","nodeType":"VariableDeclaration","scope":1125,"src":"5982:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1395_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":1117,"nodeType":"UserDefinedTypeName","pathNode":{"id":1116,"name":"PackedUserOperation","nameLocations":["5982:19:6"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"5982:19:6"},"referencedDeclaration":1395,"src":"5982:19:6","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"id":1118,"nodeType":"ArrayTypeName","src":"5982:21:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1395_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"aggregator","nameLocation":"6065:10:6","nodeType":"VariableDeclaration","scope":1125,"src":"6053:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$1009","typeString":"contract IAggregator"},"typeName":{"id":1121,"nodeType":"UserDefinedTypeName","pathNode":{"id":1120,"name":"IAggregator","nameLocations":["6053:11:6"],"nodeType":"IdentifierPath","referencedDeclaration":1009,"src":"6053:11:6"},"referencedDeclaration":1009,"src":"6053:11:6","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$1009","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"signature","nameLocation":"6125:9:6","nodeType":"VariableDeclaration","scope":1125,"src":"6119:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1123,"name":"bytes","nodeType":"ElementaryTypeName","src":"6119:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5950:20:6","nodeType":"StructDefinition","scope":1194,"src":"5943:199:6","visibility":"public"},{"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"6150:390:6","text":" Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."},"functionSelector":"765e827f","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"6555:9:6","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"ops","nameLocation":"6606:3:6","nodeType":"VariableDeclaration","scope":1135,"src":"6575:34:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1395_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":1128,"nodeType":"UserDefinedTypeName","pathNode":{"id":1127,"name":"PackedUserOperation","nameLocations":["6575:19:6"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"6575:19:6"},"referencedDeclaration":1395,"src":"6575:19:6","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"id":1129,"nodeType":"ArrayTypeName","src":"6575:21:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1395_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"beneficiary","nameLocation":"6636:11:6","nodeType":"VariableDeclaration","scope":1135,"src":"6620:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"6620:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6564:90:6"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[],"src":"6663:0:6"},"scope":1194,"src":"6546:118:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"6672:264:6","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."},"functionSelector":"dbed18e0","id":1145,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"6951:19:6","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"7013:16:6","nodeType":"VariableDeclaration","scope":1145,"src":"6981:48:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$1125_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":1138,"nodeType":"UserDefinedTypeName","pathNode":{"id":1137,"name":"UserOpsPerAggregator","nameLocations":["6981:20:6"],"nodeType":"IdentifierPath","referencedDeclaration":1125,"src":"6981:20:6"},"referencedDeclaration":1125,"src":"6981:20:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$1125_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":1139,"nodeType":"ArrayTypeName","src":"6981:22:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$1125_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"beneficiary","nameLocation":"7056:11:6","nodeType":"VariableDeclaration","scope":1145,"src":"7040:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"7040:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6970:104:6"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"7083:0:6"},"scope":1194,"src":"6942:142:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"7092:362:6","text":" Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\n @param userOp - The user operation to generate the request ID for.\n @return hash the hash of this UserOperation"},"functionSelector":"22cdde4c","id":1154,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"7469:13:6","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"userOp","nameLocation":"7522:6:6","nodeType":"VariableDeclaration","scope":1154,"src":"7493:35:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":1148,"nodeType":"UserDefinedTypeName","pathNode":{"id":1147,"name":"PackedUserOperation","nameLocations":["7493:19:6"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"7493:19:6"},"referencedDeclaration":1395,"src":"7493:19:6","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"7482:53:6"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1154,"src":"7559:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7559:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7558:9:6"},"scope":1194,"src":"7460:108:6","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"7576:481:6","text":" Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param accountValidationData   - returned validationData from account.\n @param paymasterValidationData - return validationData from paymaster.\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"},"id":1166,"members":[{"constant":false,"id":1157,"mutability":"mutable","name":"preOpGas","nameLocation":"8100:8:6","nodeType":"VariableDeclaration","scope":1166,"src":"8092:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"8092:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"prefund","nameLocation":"8127:7:6","nodeType":"VariableDeclaration","scope":1166,"src":"8119:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"8119:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"accountValidationData","nameLocation":"8153:21:6","nodeType":"VariableDeclaration","scope":1166,"src":"8145:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"8145:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"8193:23:6","nodeType":"VariableDeclaration","scope":1166,"src":"8185:31:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"8185:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"paymasterContext","nameLocation":"8233:16:6","nodeType":"VariableDeclaration","scope":1166,"src":"8227:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1164,"name":"bytes","nodeType":"ElementaryTypeName","src":"8227:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"8070:10:6","nodeType":"StructDefinition","scope":1194,"src":"8063:194:6","visibility":"public"},{"documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"8265:427:6","text":" Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error.\n @notice this method cannot be used for EIP-7702 derived contracts.\n @param initCode - The constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":1172,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8707:16:6","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"initCode","nameLocation":"8737:8:6","nodeType":"VariableDeclaration","scope":1172,"src":"8724:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1168,"name":"bytes","nodeType":"ElementaryTypeName","src":"8724:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8723:23:6"},"returnParameters":{"id":1171,"nodeType":"ParameterList","parameters":[],"src":"8755:0:6"},"scope":1194,"src":"8698:58:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"errorSelector":"99410554","id":1178,"name":"DelegateAndRevert","nameLocation":"8770:17:6","nodeType":"ErrorDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"success","nameLocation":"8793:7:6","nodeType":"VariableDeclaration","scope":1178,"src":"8788:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1173,"name":"bool","nodeType":"ElementaryTypeName","src":"8788:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"ret","nameLocation":"8808:3:6","nodeType":"VariableDeclaration","scope":1178,"src":"8802:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1175,"name":"bytes","nodeType":"ElementaryTypeName","src":"8802:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8787:25:6"},"src":"8764:49:6"},{"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"8821:499:6","text":" Helper method for dry-run testing.\n @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n  actual EntryPoint code is less convenient.\n @param target a target contract to make a delegatecall from entrypoint\n @param data data to pass to target in a delegatecall"},"functionSelector":"850aaf62","id":1186,"implemented":false,"kind":"function","modifiers":[],"name":"delegateAndRevert","nameLocation":"9335:17:6","nodeType":"FunctionDefinition","parameters":{"id":1184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"target","nameLocation":"9361:6:6","nodeType":"VariableDeclaration","scope":1186,"src":"9353:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"9353:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"data","nameLocation":"9384:4:6","nodeType":"VariableDeclaration","scope":1186,"src":"9369:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1182,"name":"bytes","nodeType":"ElementaryTypeName","src":"9369:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9352:37:6"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[],"src":"9398:0:6"},"scope":1194,"src":"9326:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"9407:132:6","text":" @notice Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts."},"functionSelector":"09ccb880","id":1193,"implemented":false,"kind":"function","modifiers":[],"name":"senderCreator","nameLocation":"9554:13:6","nodeType":"FunctionDefinition","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[],"src":"9567:2:6"},"returnParameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1193,"src":"9593:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISenderCreator_$1269","typeString":"contract ISenderCreator"},"typeName":{"id":1190,"nodeType":"UserDefinedTypeName","pathNode":{"id":1189,"name":"ISenderCreator","nameLocations":["9593:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":1269,"src":"9593:14:6"},"referencedDeclaration":1269,"src":"9593:14:6","typeDescriptions":{"typeIdentifier":"t_contract$_ISenderCreator_$1269","typeString":"contract ISenderCreator"}},"visibility":"internal"}],"src":"9592:16:6"},"scope":1194,"src":"9545:64:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1195,"src":"480:9132:6","usedErrors":[1093,1102,1106,1111,1115,1178],"usedEvents":[1036,1047,1058,1069,1078,1081,1086,1278,1286,1294,1300,1308]}],"src":"164:9450:6"},"id":6},"contracts/lib/interfaces/INonceManager.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[1213]},"id":1214,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1196,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1213,"linearizedBaseContracts":[1213],"name":"INonceManager","nameLocation":"71:13:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1197,"nodeType":"StructuredDocumentation","src":"94:424:7","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":1206,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"533:8:7","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"sender","nameLocation":"550:6:7","nodeType":"VariableDeclaration","scope":1206,"src":"542:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"key","nameLocation":"566:3:7","nodeType":"VariableDeclaration","scope":1206,"src":"558:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1200,"name":"uint192","nodeType":"ElementaryTypeName","src":"558:7:7","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"541:29:7"},"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"nonce","nameLocation":"607:5:7","nodeType":"VariableDeclaration","scope":1206,"src":"599:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"598:15:7"},"scope":1213,"src":"524:90:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"622:540:7","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key.\n @param key - the \"nonce key\" to increment the \"nonce sequence\" for."},"functionSelector":"0bd28e3b","id":1212,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1177:14:7","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"key","nameLocation":"1200:3:7","nodeType":"VariableDeclaration","scope":1212,"src":"1192:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1208,"name":"uint192","nodeType":"ElementaryTypeName","src":"1192:7:7","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1191:13:7"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[],"src":"1213:0:7"},"scope":1213,"src":"1168:46:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1214,"src":"61:1156:7","usedErrors":[],"usedEvents":[]}],"src":"33:1186:7"},"id":7},"contracts/lib/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[1250],"PackedUserOperation":[1395]},"id":1251,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1215,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:8"},{"absolutePath":"contracts/lib/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":1216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1251,"sourceUnit":1396,"src":"61:35:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"100:219:8","text":" The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":1250,"linearizedBaseContracts":[1250],"name":"IPaymaster","nameLocation":"331:10:8","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":1221,"members":[{"id":1218,"name":"opSucceeded","nameLocation":"407:11:8","nodeType":"EnumValue","src":"407:11:8"},{"id":1219,"name":"opReverted","nameLocation":"485:10:8","nodeType":"EnumValue","src":"485:10:8"},{"id":1220,"name":"postOpReverted","nameLocation":"629:14:8","nodeType":"EnumValue","src":"629:14:8"}],"name":"PostOpMode","nameLocation":"354:10:8","nodeType":"EnumDefinition","src":"349:301:8"},{"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"658:1461:8","text":" Payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp          - The user operation.\n @param userOpHash      - Hash of the user's request data.\n @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n @return validationData - Signature and time-range of this operation, encoded the same as the return\n                          value of validateUserOperation.\n                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n                                                    other values are invalid for paymaster.\n                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"52b7512c","id":1236,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"2134:23:8","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"userOp","nameLocation":"2197:6:8","nodeType":"VariableDeclaration","scope":1236,"src":"2168:35:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":1224,"nodeType":"UserDefinedTypeName","pathNode":{"id":1223,"name":"PackedUserOperation","nameLocations":["2168:19:8"],"nodeType":"IdentifierPath","referencedDeclaration":1395,"src":"2168:19:8"},"referencedDeclaration":1395,"src":"2168:19:8","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1395_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"userOpHash","nameLocation":"2222:10:8","nodeType":"VariableDeclaration","scope":1236,"src":"2214:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"maxCost","nameLocation":"2251:7:8","nodeType":"VariableDeclaration","scope":1236,"src":"2243:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"2243:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2157:108:8"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"context","nameLocation":"2297:7:8","nodeType":"VariableDeclaration","scope":1236,"src":"2284:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1231,"name":"bytes","nodeType":"ElementaryTypeName","src":"2284:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1234,"mutability":"mutable","name":"validationData","nameLocation":"2314:14:8","nodeType":"VariableDeclaration","scope":1236,"src":"2306:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"2306:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2283:46:8"},"scope":1250,"src":"2125:205:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"2338:869:8","text":" Post-operation handler.\n Must verify sender is the entryPoint.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n                        postOpReverted - never passed in a call to postOp().\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual cost of gas used so far (without this postOp call).\n @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n                        and maxPriorityFee (and basefee)\n                        It is not the same as tx.gasprice, which is what the bundler pays."},"functionSelector":"7c627b21","id":1249,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3222:6:8","nodeType":"FunctionDefinition","parameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"mode","nameLocation":"3250:4:8","nodeType":"VariableDeclaration","scope":1249,"src":"3239:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1221","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":1239,"nodeType":"UserDefinedTypeName","pathNode":{"id":1238,"name":"PostOpMode","nameLocations":["3239:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1221,"src":"3239:10:8"},"referencedDeclaration":1221,"src":"3239:10:8","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1221","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"context","nameLocation":"3280:7:8","nodeType":"VariableDeclaration","scope":1249,"src":"3265:22:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1241,"name":"bytes","nodeType":"ElementaryTypeName","src":"3265:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"actualGasCost","nameLocation":"3306:13:8","nodeType":"VariableDeclaration","scope":1249,"src":"3298:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"3298:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1246,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"3338:21:8","nodeType":"VariableDeclaration","scope":1249,"src":"3330:29:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"3330:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3228:138:8"},"returnParameters":{"id":1248,"nodeType":"ParameterList","parameters":[],"src":"3375:0:8"},"scope":1250,"src":"3213:163:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1251,"src":"321:3058:8","usedErrors":[],"usedEvents":[]}],"src":"33:3348:8"},"id":8},"contracts/lib/interfaces/ISenderCreator.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/ISenderCreator.sol","exportedSymbols":{"ISenderCreator":[1269]},"id":1270,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1252,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"35:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"ISenderCreator","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1269,"linearizedBaseContracts":[1269],"name":"ISenderCreator","nameLocation":"73:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"95:125:9","text":" @dev Creates a new sender contract.\n @return sender Address of the newly created sender contract."},"functionSelector":"570e1a36","id":1260,"implemented":false,"kind":"function","modifiers":[],"name":"createSender","nameLocation":"235:12:9","nodeType":"FunctionDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"initCode","nameLocation":"263:8:9","nodeType":"VariableDeclaration","scope":1260,"src":"248:23:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1254,"name":"bytes","nodeType":"ElementaryTypeName","src":"248:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"247:25:9"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"sender","nameLocation":"299:6:9","nodeType":"VariableDeclaration","scope":1260,"src":"291:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:16:9"},"scope":1269,"src":"226:81:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1261,"nodeType":"StructuredDocumentation","src":"315:428:9","text":" Use initCallData to initialize an EIP-7702 account.\n The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account.\n Note: Can be called multiple times as long as an appropriate initCode is supplied\n @param sender - the 'sender' EIP-7702 account to be initialized.\n @param initCallData - the call data to be passed to the sender account call."},"functionSelector":"c09ad0d9","id":1268,"implemented":false,"kind":"function","modifiers":[],"name":"initEip7702Sender","nameLocation":"758:17:9","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"sender","nameLocation":"784:6:9","nodeType":"VariableDeclaration","scope":1268,"src":"776:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1262,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"initCallData","nameLocation":"807:12:9","nodeType":"VariableDeclaration","scope":1268,"src":"792:27:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1264,"name":"bytes","nodeType":"ElementaryTypeName","src":"792:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"775:45:9"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"829:0:9"},"scope":1269,"src":"749:81:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1270,"src":"63:770:9","usedErrors":[],"usedEvents":[]}],"src":"35:800:9"},"id":9},"contracts/lib/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[1373]},"id":1374,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1271,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":1272,"nodeType":"StructuredDocumentation","src":"61:216:10","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":1373,"linearizedBaseContracts":[1373],"name":"IStakeManager","nameLocation":"289:13:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":1278,"name":"Deposited","nameLocation":"316:9:10","nodeType":"EventDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"342:7:10","nodeType":"VariableDeclaration","scope":1278,"src":"326:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"326:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1276,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"359:12:10","nodeType":"VariableDeclaration","scope":1278,"src":"351:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"325:47:10"},"src":"310:63:10"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":1286,"name":"Withdrawn","nameLocation":"387:9:10","nodeType":"EventDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"423:7:10","nodeType":"VariableDeclaration","scope":1286,"src":"407:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"407:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1282,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"449:15:10","nodeType":"VariableDeclaration","scope":1286,"src":"441:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"441:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1284,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"483:6:10","nodeType":"VariableDeclaration","scope":1286,"src":"475:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"475:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"396:100:10"},"src":"381:116:10"},{"anonymous":false,"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":1294,"name":"StakeLocked","nameLocation":"569:11:10","nodeType":"EventDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"607:7:10","nodeType":"VariableDeclaration","scope":1294,"src":"591:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"591:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1290,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"633:11:10","nodeType":"VariableDeclaration","scope":1294,"src":"625:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1289,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1292,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"663:15:10","nodeType":"VariableDeclaration","scope":1294,"src":"655:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"580:105:10"},"src":"563:123:10"},{"anonymous":false,"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":1300,"name":"StakeUnlocked","nameLocation":"758:13:10","nodeType":"EventDefinition","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"788:7:10","nodeType":"VariableDeclaration","scope":1300,"src":"772:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"772:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"805:12:10","nodeType":"VariableDeclaration","scope":1300,"src":"797:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"771:47:10"},"src":"752:67:10"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":1308,"name":"StakeWithdrawn","nameLocation":"833:14:10","nodeType":"EventDefinition","parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"874:7:10","nodeType":"VariableDeclaration","scope":1308,"src":"858:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1301,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1304,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"900:15:10","nodeType":"VariableDeclaration","scope":1308,"src":"892:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1303,"name":"address","nodeType":"ElementaryTypeName","src":"892:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1306,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"934:6:10","nodeType":"VariableDeclaration","scope":1308,"src":"926:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"847:100:10"},"src":"827:121:10"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"956:708:10","text":" @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n      and the rest fit into a 2nd cell (used during stake/unstake)\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"},"id":1320,"members":[{"constant":false,"id":1311,"mutability":"mutable","name":"deposit","nameLocation":"1708:7:10","nodeType":"VariableDeclaration","scope":1320,"src":"1700:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1700:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1313,"mutability":"mutable","name":"staked","nameLocation":"1731:6:10","nodeType":"VariableDeclaration","scope":1320,"src":"1726:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1312,"name":"bool","nodeType":"ElementaryTypeName","src":"1726:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"stake","nameLocation":"1756:5:10","nodeType":"VariableDeclaration","scope":1320,"src":"1748:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1314,"name":"uint112","nodeType":"ElementaryTypeName","src":"1748:7:10","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1779:15:10","nodeType":"VariableDeclaration","scope":1320,"src":"1772:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1316,"name":"uint32","nodeType":"ElementaryTypeName","src":"1772:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"withdrawTime","nameLocation":"1812:12:10","nodeType":"VariableDeclaration","scope":1320,"src":"1805:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1318,"name":"uint48","nodeType":"ElementaryTypeName","src":"1805:6:10","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1677:11:10","nodeType":"StructDefinition","scope":1373,"src":"1670:162:10","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":1325,"members":[{"constant":false,"id":1322,"mutability":"mutable","name":"stake","nameLocation":"1940:5:10","nodeType":"VariableDeclaration","scope":1325,"src":"1932:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1324,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1964:15:10","nodeType":"VariableDeclaration","scope":1325,"src":"1956:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1911:9:10","nodeType":"StructDefinition","scope":1373,"src":"1904:83:10","visibility":"public"},{"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"1995:153:10","text":" Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."},"functionSelector":"5287ce12","id":1334,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"2163:14:10","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"account","nameLocation":"2196:7:10","nodeType":"VariableDeclaration","scope":1334,"src":"2188:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"2188:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2177:33:10"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"info","nameLocation":"2253:4:10","nodeType":"VariableDeclaration","scope":1334,"src":"2234:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$1320_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":1331,"nodeType":"UserDefinedTypeName","pathNode":{"id":1330,"name":"DepositInfo","nameLocations":["2234:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":1320,"src":"2234:11:10"},"referencedDeclaration":1320,"src":"2234:11:10","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$1320_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2233:25:10"},"scope":1373,"src":"2154:105:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"2267:159:10","text":" Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."},"functionSelector":"70a08231","id":1342,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2441:9:10","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"account","nameLocation":"2459:7:10","nodeType":"VariableDeclaration","scope":1342,"src":"2451:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"2451:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2450:17:10"},"returnParameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1342,"src":"2491:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"2491:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2490:9:10"},"scope":1373,"src":"2432:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"2508:109:10","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":1348,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2632:9:10","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"account","nameLocation":"2650:7:10","nodeType":"VariableDeclaration","scope":1348,"src":"2642:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"2642:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2641:17:10"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[],"src":"2675:0:10"},"scope":1373,"src":"2623:53:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1349,"nodeType":"StructuredDocumentation","src":"2684:206:10","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param unstakeDelaySec - The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":1354,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2905:8:10","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1351,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"2921:15:10","nodeType":"VariableDeclaration","scope":1354,"src":"2914:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1350,"name":"uint32","nodeType":"ElementaryTypeName","src":"2914:6:10","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2913:24:10"},"returnParameters":{"id":1353,"nodeType":"ParameterList","parameters":[],"src":"2954:0:10"},"scope":1373,"src":"2896:59:10","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"2963:131:10","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":1358,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3109:11:10","nodeType":"FunctionDefinition","parameters":{"id":1356,"nodeType":"ParameterList","parameters":[],"src":"3120:2:10"},"returnParameters":{"id":1357,"nodeType":"ParameterList","parameters":[],"src":"3131:0:10"},"scope":1373,"src":"3100:32:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"3140:201:10","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":1364,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3356:13:10","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3386:15:10","nodeType":"VariableDeclaration","scope":1364,"src":"3370:31:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"3370:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3369:33:10"},"returnParameters":{"id":1363,"nodeType":"ParameterList","parameters":[],"src":"3411:0:10"},"scope":1373,"src":"3347:65:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"3420:174:10","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":1372,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3609:10:10","nodeType":"FunctionDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3646:15:10","nodeType":"VariableDeclaration","scope":1372,"src":"3630:31:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"3630:15:10","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3680:14:10","nodeType":"VariableDeclaration","scope":1372,"src":"3672:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"3672:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3619:82:10"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[],"src":"3710:0:10"},"scope":1373,"src":"3600:111:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1374,"src":"279:3435:10","usedErrors":[],"usedEvents":[1278,1286,1294,1300,1308]}],"src":"33:3683:10"},"id":10},"contracts/lib/interfaces/PackedUserOperation.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/PackedUserOperation.sol","exportedSymbols":{"PackedUserOperation":[1395]},"id":1396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1375,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:11"},{"canonicalName":"PackedUserOperation","documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"61:1176:11","text":" User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor\n @param callData              - The method call to execute on this account.\n @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":1395,"members":[{"constant":false,"id":1378,"mutability":"mutable","name":"sender","nameLocation":"1281:6:11","nodeType":"VariableDeclaration","scope":1395,"src":"1273:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"nonce","nameLocation":"1302:5:11","nodeType":"VariableDeclaration","scope":1395,"src":"1294:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"1294:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1382,"mutability":"mutable","name":"initCode","nameLocation":"1320:8:11","nodeType":"VariableDeclaration","scope":1395,"src":"1314:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1381,"name":"bytes","nodeType":"ElementaryTypeName","src":"1314:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"callData","nameLocation":"1341:8:11","nodeType":"VariableDeclaration","scope":1395,"src":"1335:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1383,"name":"bytes","nodeType":"ElementaryTypeName","src":"1335:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"accountGasLimits","nameLocation":"1364:16:11","nodeType":"VariableDeclaration","scope":1395,"src":"1356:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1385,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1356:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1395:18:11","nodeType":"VariableDeclaration","scope":1395,"src":"1387:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1387:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"gasFees","nameLocation":"1428:7:11","nodeType":"VariableDeclaration","scope":1395,"src":"1420:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1420:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1392,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1448:16:11","nodeType":"VariableDeclaration","scope":1395,"src":"1442:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1391,"name":"bytes","nodeType":"ElementaryTypeName","src":"1442:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"signature","nameLocation":"1477:9:11","nodeType":"VariableDeclaration","scope":1395,"src":"1471:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1393,"name":"bytes","nodeType":"ElementaryTypeName","src":"1471:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PackedUserOperation","nameLocation":"1246:19:11","nodeType":"StructDefinition","scope":1396,"src":"1239:251:11","visibility":"public"}],"src":"33:1459:11"},"id":11}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"contracts/Paymaster.sol":{"Paymaster":{"abi":[{"inputs":[{"internalType":"address","name":"_entryPoint","type":"address"},{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UnsupportedTarget","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"bool","name":"supported","type":"bool"}],"name":"TargetSupportChanged","type":"event"},{"inputs":[],"name":"depositToEntryPoint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"","type":"uint8"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"supported","type":"bool"}],"name":"setSupportedTarget","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"supportedTargets","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"packedUserOp","type":"tuple"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_250":{"entryPoint":null,"id":250,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":120,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":199,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":226,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:699:12","nodeType":"YulBlock","src":"0:699:12","statements":[{"nativeSrc":"6:3:12","nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nativeSrc":"74:117:12","nodeType":"YulBlock","src":"74:117:12","statements":[{"nativeSrc":"84:22:12","nodeType":"YulAssignment","src":"84:22:12","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:12","nodeType":"YulIdentifier","src":"99:6:12"}],"functionName":{"name":"mload","nativeSrc":"93:5:12","nodeType":"YulIdentifier","src":"93:5:12"},"nativeSrc":"93:13:12","nodeType":"YulFunctionCall","src":"93:13:12"},"variableNames":[{"name":"value","nativeSrc":"84:5:12","nodeType":"YulIdentifier","src":"84:5:12"}]},{"body":{"nativeSrc":"169:16:12","nodeType":"YulBlock","src":"169:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:12","nodeType":"YulLiteral","src":"178:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:12","nodeType":"YulLiteral","src":"181:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:12","nodeType":"YulIdentifier","src":"171:6:12"},"nativeSrc":"171:12:12","nodeType":"YulFunctionCall","src":"171:12:12"},"nativeSrc":"171:12:12","nodeType":"YulExpressionStatement","src":"171:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:12","nodeType":"YulIdentifier","src":"128:5:12"},{"arguments":[{"name":"value","nativeSrc":"139:5:12","nodeType":"YulIdentifier","src":"139:5:12"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:12","nodeType":"YulLiteral","src":"154:3:12","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:12","nodeType":"YulLiteral","src":"159:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:12","nodeType":"YulIdentifier","src":"150:3:12"},"nativeSrc":"150:11:12","nodeType":"YulFunctionCall","src":"150:11:12"},{"kind":"number","nativeSrc":"163:1:12","nodeType":"YulLiteral","src":"163:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:12","nodeType":"YulIdentifier","src":"146:3:12"},"nativeSrc":"146:19:12","nodeType":"YulFunctionCall","src":"146:19:12"}],"functionName":{"name":"and","nativeSrc":"135:3:12","nodeType":"YulIdentifier","src":"135:3:12"},"nativeSrc":"135:31:12","nodeType":"YulFunctionCall","src":"135:31:12"}],"functionName":{"name":"eq","nativeSrc":"125:2:12","nodeType":"YulIdentifier","src":"125:2:12"},"nativeSrc":"125:42:12","nodeType":"YulFunctionCall","src":"125:42:12"}],"functionName":{"name":"iszero","nativeSrc":"118:6:12","nodeType":"YulIdentifier","src":"118:6:12"},"nativeSrc":"118:50:12","nodeType":"YulFunctionCall","src":"118:50:12"},"nativeSrc":"115:70:12","nodeType":"YulIf","src":"115:70:12"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:12","nodeType":"YulTypedName","src":"53:6:12","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:12","nodeType":"YulTypedName","src":"64:5:12","type":""}],"src":"14:177:12"},{"body":{"nativeSrc":"294:195:12","nodeType":"YulBlock","src":"294:195:12","statements":[{"body":{"nativeSrc":"340:16:12","nodeType":"YulBlock","src":"340:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"349:1:12","nodeType":"YulLiteral","src":"349:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"352:1:12","nodeType":"YulLiteral","src":"352:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"342:6:12","nodeType":"YulIdentifier","src":"342:6:12"},"nativeSrc":"342:12:12","nodeType":"YulFunctionCall","src":"342:12:12"},"nativeSrc":"342:12:12","nodeType":"YulExpressionStatement","src":"342:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"315:7:12","nodeType":"YulIdentifier","src":"315:7:12"},{"name":"headStart","nativeSrc":"324:9:12","nodeType":"YulIdentifier","src":"324:9:12"}],"functionName":{"name":"sub","nativeSrc":"311:3:12","nodeType":"YulIdentifier","src":"311:3:12"},"nativeSrc":"311:23:12","nodeType":"YulFunctionCall","src":"311:23:12"},{"kind":"number","nativeSrc":"336:2:12","nodeType":"YulLiteral","src":"336:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"307:3:12","nodeType":"YulIdentifier","src":"307:3:12"},"nativeSrc":"307:32:12","nodeType":"YulFunctionCall","src":"307:32:12"},"nativeSrc":"304:52:12","nodeType":"YulIf","src":"304:52:12"},{"nativeSrc":"365:50:12","nodeType":"YulAssignment","src":"365:50:12","value":{"arguments":[{"name":"headStart","nativeSrc":"405:9:12","nodeType":"YulIdentifier","src":"405:9:12"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"375:29:12","nodeType":"YulIdentifier","src":"375:29:12"},"nativeSrc":"375:40:12","nodeType":"YulFunctionCall","src":"375:40:12"},"variableNames":[{"name":"value0","nativeSrc":"365:6:12","nodeType":"YulIdentifier","src":"365:6:12"}]},{"nativeSrc":"424:59:12","nodeType":"YulAssignment","src":"424:59:12","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"468:9:12","nodeType":"YulIdentifier","src":"468:9:12"},{"kind":"number","nativeSrc":"479:2:12","nodeType":"YulLiteral","src":"479:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"464:3:12","nodeType":"YulIdentifier","src":"464:3:12"},"nativeSrc":"464:18:12","nodeType":"YulFunctionCall","src":"464:18:12"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"434:29:12","nodeType":"YulIdentifier","src":"434:29:12"},"nativeSrc":"434:49:12","nodeType":"YulFunctionCall","src":"434:49:12"},"variableNames":[{"name":"value1","nativeSrc":"424:6:12","nodeType":"YulIdentifier","src":"424:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"196:293:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"252:9:12","nodeType":"YulTypedName","src":"252:9:12","type":""},{"name":"dataEnd","nativeSrc":"263:7:12","nodeType":"YulTypedName","src":"263:7:12","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"275:6:12","nodeType":"YulTypedName","src":"275:6:12","type":""},{"name":"value1","nativeSrc":"283:6:12","nodeType":"YulTypedName","src":"283:6:12","type":""}],"src":"196:293:12"},{"body":{"nativeSrc":"595:102:12","nodeType":"YulBlock","src":"595:102:12","statements":[{"nativeSrc":"605:26:12","nodeType":"YulAssignment","src":"605:26:12","value":{"arguments":[{"name":"headStart","nativeSrc":"617:9:12","nodeType":"YulIdentifier","src":"617:9:12"},{"kind":"number","nativeSrc":"628:2:12","nodeType":"YulLiteral","src":"628:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"613:3:12","nodeType":"YulIdentifier","src":"613:3:12"},"nativeSrc":"613:18:12","nodeType":"YulFunctionCall","src":"613:18:12"},"variableNames":[{"name":"tail","nativeSrc":"605:4:12","nodeType":"YulIdentifier","src":"605:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"647:9:12","nodeType":"YulIdentifier","src":"647:9:12"},{"arguments":[{"name":"value0","nativeSrc":"662:6:12","nodeType":"YulIdentifier","src":"662:6:12"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"678:3:12","nodeType":"YulLiteral","src":"678:3:12","type":"","value":"160"},{"kind":"number","nativeSrc":"683:1:12","nodeType":"YulLiteral","src":"683:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"674:3:12","nodeType":"YulIdentifier","src":"674:3:12"},"nativeSrc":"674:11:12","nodeType":"YulFunctionCall","src":"674:11:12"},{"kind":"number","nativeSrc":"687:1:12","nodeType":"YulLiteral","src":"687:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"670:3:12","nodeType":"YulIdentifier","src":"670:3:12"},"nativeSrc":"670:19:12","nodeType":"YulFunctionCall","src":"670:19:12"}],"functionName":{"name":"and","nativeSrc":"658:3:12","nodeType":"YulIdentifier","src":"658:3:12"},"nativeSrc":"658:32:12","nodeType":"YulFunctionCall","src":"658:32:12"}],"functionName":{"name":"mstore","nativeSrc":"640:6:12","nodeType":"YulIdentifier","src":"640:6:12"},"nativeSrc":"640:51:12","nodeType":"YulFunctionCall","src":"640:51:12"},"nativeSrc":"640:51:12","nodeType":"YulExpressionStatement","src":"640:51:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"494:203:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"564:9:12","nodeType":"YulTypedName","src":"564:9:12","type":""},{"name":"value0","nativeSrc":"575:6:12","nodeType":"YulTypedName","src":"575:6:12","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"586:4:12","nodeType":"YulTypedName","src":"586:4:12","type":""}],"src":"494:203:12"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561000f575f5ffd5b50604051610ab5380380610ab583398101604081905261002e916100e2565b806001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61006581610078565b50506001600160a01b0316608052610113565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100dd575f5ffd5b919050565b5f5f604083850312156100f3575f5ffd5b6100fc836100c7565b915061010a602084016100c7565b90509250929050565b60805161097c6101395f395f818161015b015281816101ef015261051a015261097c5ff3fe608060405260043610610084575f3560e01c80638da5cb5b116100575780638da5cb5b146100fb578063a19f212f1461012b578063b0d691fe1461014a578063dc69c06f1461017d578063f2fde38b146101bb575f5ffd5b80631b3ba1011461008857806352b7512c14610092578063715018a6146100c85780637c627b21146100dc575b5f5ffd5b6100906101da565b005b34801561009d575f5ffd5b506100b16100ac3660046106de565b610289565b6040516100bf92919061072d565b60405180910390f35b3480156100d3575f5ffd5b506100906104f2565b3480156100e7575f5ffd5b506100906100f6366004610769565b610505565b348015610106575f5ffd5b505f546001600160a01b03165b6040516001600160a01b0390911681526020016100bf565b348015610136575f5ffd5b50610090610145366004610818565b610593565b348015610155575f5ffd5b506101137f000000000000000000000000000000000000000000000000000000000000000081565b348015610188575f5ffd5b506101ab610197366004610851565b60016020525f908152604090205460ff1681565b60405190151581526020016100bf565b3480156101c6575f5ffd5b506100906101d5366004610851565b6105f9565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024015f604051808303818588803b15801561023a575f5ffd5b505af115801561024c573d5f5f3e3d5ffd5b50506040513481523393507f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d4749250602001905060405180910390a2565b60605f6102fa6040518061018001604052805f6001600160a01b031681526020015f815260200160608152602001606081526020015f81526020015f81526020015f81526020015f81526020015f815260200160608152602001606081526020015f6001600160a01b031681525090565b6103076020870187610851565b6001600160a01b03168152602080870135908201526103296040870187610871565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250505050604082015261036e6060870187610871565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050505060608201526103b3608087013561063b565b608083015260a08083019190915286013560c0808301919091526103d99087013561063b565b60e0808401919091526101008301919091526103f790870187610871565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050505061012082015261043e610100870187610871565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050506101408201526104846060870187610871565b610493916018916004916108bb565b61049c916108e2565b60601c61016082018190525f9081526001602052604090205460ff166104d557604051633bc5944560e11b815260040160405180910390fd5b60405180602001604052805f8152505f9250925050935093915050565b6104fa610663565b6105035f61068f565b565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610567573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061058b919061092f565b505050505050565b61059b610663565b6001600160a01b0382165f81815260016020908152604091829020805460ff191685151590811790915591519182527fe5239967f86bdfebd2052a7d2539a8359f2cdefacfbdeb04bdd72e854c994553910160405180910390a25050565b610601610663565b6001600160a01b03811661062f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6106388161068f565b50565b5f5f6106478360801c90565b6fffffffffffffffffffffffffffffffff841691509150915091565b5f546001600160a01b031633146105035760405163118cdaa760e01b8152336004820152602401610626565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5f5f606084860312156106f0575f5ffd5b833567ffffffffffffffff811115610706575f5ffd5b84016101208187031215610718575f5ffd5b95602085013595506040909401359392505050565b604081525f83518060408401528060208601606085015e5f606082850101526060601f19601f8301168401019150508260208301529392505050565b5f5f5f5f5f6080868803121561077d575f5ffd5b85356003811061078b575f5ffd5b9450602086013567ffffffffffffffff8111156107a6575f5ffd5b8601601f810188136107b6575f5ffd5b803567ffffffffffffffff8111156107cc575f5ffd5b8860208284010111156107dd575f5ffd5b959860209190910197509495604081013595606090910135945092505050565b80356001600160a01b0381168114610813575f5ffd5b919050565b5f5f60408385031215610829575f5ffd5b610832836107fd565b915060208301358015158114610846575f5ffd5b809150509250929050565b5f60208284031215610861575f5ffd5b61086a826107fd565b9392505050565b5f5f8335601e19843603018112610886575f5ffd5b83018035915067ffffffffffffffff8211156108a0575f5ffd5b6020019150368190038213156108b4575f5ffd5b9250929050565b5f5f858511156108c9575f5ffd5b838611156108d5575f5ffd5b5050820193919092039150565b80356bffffffffffffffffffffffff198116906014841015610928576bffffffffffffffffffffffff196bffffffffffffffffffffffff198560140360031b1b82161691505b5092915050565b5f6020828403121561093f575f5ffd5b505191905056fea2646970667358221220419d1303b682e14a07c1f419656126b2ab582d2f1ba3870b1a956cff30b3347c64736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAB5 CODESIZE SUB DUP1 PUSH2 0xAB5 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xE2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65 DUP2 PUSH2 0x78 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x113 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDD JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFC DUP4 PUSH2 0xC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A PUSH1 0x20 DUP5 ADD PUSH2 0xC7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x97C PUSH2 0x139 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x15B ADD MSTORE DUP2 DUP2 PUSH2 0x1EF ADD MSTORE PUSH2 0x51A ADD MSTORE PUSH2 0x97C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x84 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x57 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xA19F212F EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xDC69C06F EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1B3BA101 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x52B7512C EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x7C627B21 EQ PUSH2 0xDC JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x90 PUSH2 0x1DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP3 SWAP2 SWAP1 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x4F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x113 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1AB PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x851 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB760FAF9 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP4 POP PUSH32 0x543BA50A5EEC5E6178218E364B1D0F396157B3C8FA278522C2CB7FD99407D474 SWAP3 POP PUSH1 0x20 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x2FA PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x307 PUSH1 0x20 DUP8 ADD DUP8 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP8 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x329 PUSH1 0x40 DUP8 ADD DUP8 PUSH2 0x871 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x36E PUSH1 0x60 DUP8 ADD DUP8 PUSH2 0x871 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x3B3 PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x63B JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 ADD CALLDATALOAD PUSH1 0xC0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x3D9 SWAP1 DUP8 ADD CALLDATALOAD PUSH2 0x63B JUMP JUMPDEST PUSH1 0xE0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x3F7 SWAP1 DUP8 ADD DUP8 PUSH2 0x871 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x43E PUSH2 0x100 DUP8 ADD DUP8 PUSH2 0x871 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x484 PUSH1 0x60 DUP8 ADD DUP8 PUSH2 0x871 JUMP JUMPDEST PUSH2 0x493 SWAP2 PUSH1 0x18 SWAP2 PUSH1 0x4 SWAP2 PUSH2 0x8BB JUMP JUMPDEST PUSH2 0x49C SWAP2 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x60 SHR PUSH2 0x160 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3BC59445 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH0 SWAP3 POP SWAP3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4FA PUSH2 0x663 JUMP JUMPDEST PUSH2 0x503 PUSH0 PUSH2 0x68F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x567 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x59B PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xE5239967F86BDFEBD2052A7D2539A8359F2CDEFACFBDEB04BDD72E854C994553 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x601 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x638 DUP2 PUSH2 0x68F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x647 DUP4 PUSH1 0x80 SHR SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x706 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x718 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP7 ADD PUSH1 0x60 DUP6 ADD MCOPY PUSH0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x77D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x78B JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x7B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x7DD JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP6 SWAP9 PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP8 POP SWAP5 SWAP6 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP6 PUSH1 0x60 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x813 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x829 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x832 DUP4 PUSH2 0x7FD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x846 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x861 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x86A DUP3 PUSH2 0x7FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x886 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8A0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x8B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP6 DUP6 GT ISZERO PUSH2 0x8C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x8D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND SWAP1 PUSH1 0x14 DUP5 LT ISZERO PUSH2 0x928 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP6 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP3 AND AND SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE SWAP14 SGT SUB 0xB6 DUP3 0xE1 BLOBBASEFEE SMOD 0xC1 DELEGATECALL NOT PUSH6 0x6126B2AB582D 0x2F SHL LOG3 DUP8 SIGNEXTEND BYTE SWAP6 PUSH13 0xFF30B3347C64736F6C63430008 SHR STOP CALLER ","sourceMap":"572:3037:2:-:0;;;995:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1052:6;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:12;613:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;;1070:37:2::1;;::::0;572:3037;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:12:-;93:13;;-1:-1:-1;;;;;135:31:12;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;572:3037:2;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":1635,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_159":{"entryPoint":null,"id":159,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1679,"id":146,"parameterSlots":1,"returnSlots":0},"@depositToEntryPoint_296":{"entryPoint":474,"id":296,"parameterSlots":0,"returnSlots":0},"@entryPoint_215":{"entryPoint":null,"id":215,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@postOp_449":{"entryPoint":1285,"id":449,"parameterSlots":5,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1266,"id":98,"parameterSlots":0,"returnSlots":0},"@setSupportedTarget_272":{"entryPoint":1427,"id":272,"parameterSlots":2,"returnSlots":0},"@supportedTargets_219":{"entryPoint":null,"id":219,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1529,"id":126,"parameterSlots":1,"returnSlots":0},"@unpackHigh128_798":{"entryPoint":null,"id":798,"parameterSlots":1,"returnSlots":1},"@unpackLow128_814":{"entryPoint":null,"id":814,"parameterSlots":1,"returnSlots":1},"@unpackUints_783":{"entryPoint":1595,"id":783,"parameterSlots":1,"returnSlots":2},"@validatePaymasterUserOp_425":{"entryPoint":649,"id":425,"parameterSlots":3,"returnSlots":2},"abi_decode_address":{"entryPoint":2045,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2129,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bool":{"entryPoint":2072,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_enum$_PostOpMode_$1221t_bytes_calldata_ptrt_uint256t_uint256":{"entryPoint":1897,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_struct$_PackedUserOperation_$1395_calldata_ptrt_bytes32t_uint256":{"entryPoint":1758,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2351,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":1837,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$1194__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":2161,"id":null,"parameterSlots":2,"returnSlots":2},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":2235,"id":null,"parameterSlots":4,"returnSlots":2},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20":{"entryPoint":2274,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:5045:12","nodeType":"YulBlock","src":"0:5045:12","statements":[{"nativeSrc":"6:3:12","nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nativeSrc":"157:438:12","nodeType":"YulBlock","src":"157:438:12","statements":[{"body":{"nativeSrc":"203:16:12","nodeType":"YulBlock","src":"203:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"212:1:12","nodeType":"YulLiteral","src":"212:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"215:1:12","nodeType":"YulLiteral","src":"215:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"205:6:12","nodeType":"YulIdentifier","src":"205:6:12"},"nativeSrc":"205:12:12","nodeType":"YulFunctionCall","src":"205:12:12"},"nativeSrc":"205:12:12","nodeType":"YulExpressionStatement","src":"205:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"178:7:12","nodeType":"YulIdentifier","src":"178:7:12"},{"name":"headStart","nativeSrc":"187:9:12","nodeType":"YulIdentifier","src":"187:9:12"}],"functionName":{"name":"sub","nativeSrc":"174:3:12","nodeType":"YulIdentifier","src":"174:3:12"},"nativeSrc":"174:23:12","nodeType":"YulFunctionCall","src":"174:23:12"},{"kind":"number","nativeSrc":"199:2:12","nodeType":"YulLiteral","src":"199:2:12","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"170:3:12","nodeType":"YulIdentifier","src":"170:3:12"},"nativeSrc":"170:32:12","nodeType":"YulFunctionCall","src":"170:32:12"},"nativeSrc":"167:52:12","nodeType":"YulIf","src":"167:52:12"},{"nativeSrc":"228:37:12","nodeType":"YulVariableDeclaration","src":"228:37:12","value":{"arguments":[{"name":"headStart","nativeSrc":"255:9:12","nodeType":"YulIdentifier","src":"255:9:12"}],"functionName":{"name":"calldataload","nativeSrc":"242:12:12","nodeType":"YulIdentifier","src":"242:12:12"},"nativeSrc":"242:23:12","nodeType":"YulFunctionCall","src":"242:23:12"},"variables":[{"name":"offset","nativeSrc":"232:6:12","nodeType":"YulTypedName","src":"232:6:12","type":""}]},{"body":{"nativeSrc":"308:16:12","nodeType":"YulBlock","src":"308:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:12","nodeType":"YulLiteral","src":"317:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:12","nodeType":"YulLiteral","src":"320:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:12","nodeType":"YulIdentifier","src":"310:6:12"},"nativeSrc":"310:12:12","nodeType":"YulFunctionCall","src":"310:12:12"},"nativeSrc":"310:12:12","nodeType":"YulExpressionStatement","src":"310:12:12"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"280:6:12","nodeType":"YulIdentifier","src":"280:6:12"},{"kind":"number","nativeSrc":"288:18:12","nodeType":"YulLiteral","src":"288:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"277:2:12","nodeType":"YulIdentifier","src":"277:2:12"},"nativeSrc":"277:30:12","nodeType":"YulFunctionCall","src":"277:30:12"},"nativeSrc":"274:50:12","nodeType":"YulIf","src":"274:50:12"},{"nativeSrc":"333:32:12","nodeType":"YulVariableDeclaration","src":"333:32:12","value":{"arguments":[{"name":"headStart","nativeSrc":"347:9:12","nodeType":"YulIdentifier","src":"347:9:12"},{"name":"offset","nativeSrc":"358:6:12","nodeType":"YulIdentifier","src":"358:6:12"}],"functionName":{"name":"add","nativeSrc":"343:3:12","nodeType":"YulIdentifier","src":"343:3:12"},"nativeSrc":"343:22:12","nodeType":"YulFunctionCall","src":"343:22:12"},"variables":[{"name":"_1","nativeSrc":"337:2:12","nodeType":"YulTypedName","src":"337:2:12","type":""}]},{"body":{"nativeSrc":"404:16:12","nodeType":"YulBlock","src":"404:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"413:1:12","nodeType":"YulLiteral","src":"413:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"416:1:12","nodeType":"YulLiteral","src":"416:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"406:6:12","nodeType":"YulIdentifier","src":"406:6:12"},"nativeSrc":"406:12:12","nodeType":"YulFunctionCall","src":"406:12:12"},"nativeSrc":"406:12:12","nodeType":"YulExpressionStatement","src":"406:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"385:7:12","nodeType":"YulIdentifier","src":"385:7:12"},{"name":"_1","nativeSrc":"394:2:12","nodeType":"YulIdentifier","src":"394:2:12"}],"functionName":{"name":"sub","nativeSrc":"381:3:12","nodeType":"YulIdentifier","src":"381:3:12"},"nativeSrc":"381:16:12","nodeType":"YulFunctionCall","src":"381:16:12"},{"kind":"number","nativeSrc":"399:3:12","nodeType":"YulLiteral","src":"399:3:12","type":"","value":"288"}],"functionName":{"name":"slt","nativeSrc":"377:3:12","nodeType":"YulIdentifier","src":"377:3:12"},"nativeSrc":"377:26:12","nodeType":"YulFunctionCall","src":"377:26:12"},"nativeSrc":"374:46:12","nodeType":"YulIf","src":"374:46:12"},{"nativeSrc":"429:12:12","nodeType":"YulAssignment","src":"429:12:12","value":{"name":"_1","nativeSrc":"439:2:12","nodeType":"YulIdentifier","src":"439:2:12"},"variableNames":[{"name":"value0","nativeSrc":"429:6:12","nodeType":"YulIdentifier","src":"429:6:12"}]},{"nativeSrc":"450:42:12","nodeType":"YulAssignment","src":"450:42:12","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"477:9:12","nodeType":"YulIdentifier","src":"477:9:12"},{"kind":"number","nativeSrc":"488:2:12","nodeType":"YulLiteral","src":"488:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"473:3:12","nodeType":"YulIdentifier","src":"473:3:12"},"nativeSrc":"473:18:12","nodeType":"YulFunctionCall","src":"473:18:12"}],"functionName":{"name":"calldataload","nativeSrc":"460:12:12","nodeType":"YulIdentifier","src":"460:12:12"},"nativeSrc":"460:32:12","nodeType":"YulFunctionCall","src":"460:32:12"},"variableNames":[{"name":"value1","nativeSrc":"450:6:12","nodeType":"YulIdentifier","src":"450:6:12"}]},{"nativeSrc":"501:14:12","nodeType":"YulVariableDeclaration","src":"501:14:12","value":{"kind":"number","nativeSrc":"514:1:12","nodeType":"YulLiteral","src":"514:1:12","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"505:5:12","nodeType":"YulTypedName","src":"505:5:12","type":""}]},{"nativeSrc":"524:41:12","nodeType":"YulAssignment","src":"524:41:12","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"550:9:12","nodeType":"YulIdentifier","src":"550:9:12"},{"kind":"number","nativeSrc":"561:2:12","nodeType":"YulLiteral","src":"561:2:12","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"546:3:12","nodeType":"YulIdentifier","src":"546:3:12"},"nativeSrc":"546:18:12","nodeType":"YulFunctionCall","src":"546:18:12"}],"functionName":{"name":"calldataload","nativeSrc":"533:12:12","nodeType":"YulIdentifier","src":"533:12:12"},"nativeSrc":"533:32:12","nodeType":"YulFunctionCall","src":"533:32:12"},"variableNames":[{"name":"value","nativeSrc":"524:5:12","nodeType":"YulIdentifier","src":"524:5:12"}]},{"nativeSrc":"574:15:12","nodeType":"YulAssignment","src":"574:15:12","value":{"name":"value","nativeSrc":"584:5:12","nodeType":"YulIdentifier","src":"584:5:12"},"variableNames":[{"name":"value2","nativeSrc":"574:6:12","nodeType":"YulIdentifier","src":"574:6:12"}]}]},"name":"abi_decode_tuple_t_struct$_PackedUserOperation_$1395_calldata_ptrt_bytes32t_uint256","nativeSrc":"14:581:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"107:9:12","nodeType":"YulTypedName","src":"107:9:12","type":""},{"name":"dataEnd","nativeSrc":"118:7:12","nodeType":"YulTypedName","src":"118:7:12","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"130:6:12","nodeType":"YulTypedName","src":"130:6:12","type":""},{"name":"value1","nativeSrc":"138:6:12","nodeType":"YulTypedName","src":"138:6:12","type":""},{"name":"value2","nativeSrc":"146:6:12","nodeType":"YulTypedName","src":"146:6:12","type":""}],"src":"14:581:12"},{"body":{"nativeSrc":"747:344:12","nodeType":"YulBlock","src":"747:344:12","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"764:9:12","nodeType":"YulIdentifier","src":"764:9:12"},{"kind":"number","nativeSrc":"775:2:12","nodeType":"YulLiteral","src":"775:2:12","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"757:6:12","nodeType":"YulIdentifier","src":"757:6:12"},"nativeSrc":"757:21:12","nodeType":"YulFunctionCall","src":"757:21:12"},"nativeSrc":"757:21:12","nodeType":"YulExpressionStatement","src":"757:21:12"},{"nativeSrc":"787:27:12","nodeType":"YulVariableDeclaration","src":"787:27:12","value":{"arguments":[{"name":"value0","nativeSrc":"807:6:12","nodeType":"YulIdentifier","src":"807:6:12"}],"functionName":{"name":"mload","nativeSrc":"801:5:12","nodeType":"YulIdentifier","src":"801:5:12"},"nativeSrc":"801:13:12","nodeType":"YulFunctionCall","src":"801:13:12"},"variables":[{"name":"length","nativeSrc":"791:6:12","nodeType":"YulTypedName","src":"791:6:12","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"834:9:12","nodeType":"YulIdentifier","src":"834:9:12"},{"kind":"number","nativeSrc":"845:2:12","nodeType":"YulLiteral","src":"845:2:12","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"830:3:12","nodeType":"YulIdentifier","src":"830:3:12"},"nativeSrc":"830:18:12","nodeType":"YulFunctionCall","src":"830:18:12"},{"name":"length","nativeSrc":"850:6:12","nodeType":"YulIdentifier","src":"850:6:12"}],"functionName":{"name":"mstore","nativeSrc":"823:6:12","nodeType":"YulIdentifier","src":"823:6:12"},"nativeSrc":"823:34:12","nodeType":"YulFunctionCall","src":"823:34:12"},"nativeSrc":"823:34:12","nodeType":"YulExpressionStatement","src":"823:34:12"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"876:9:12","nodeType":"YulIdentifier","src":"876:9:12"},{"kind":"number","nativeSrc":"887:2:12","nodeType":"YulLiteral","src":"887:2:12","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"872:3:12","nodeType":"YulIdentifier","src":"872:3:12"},"nativeSrc":"872:18:12","nodeType":"YulFunctionCall","src":"872:18:12"},{"arguments":[{"name":"value0","nativeSrc":"896:6:12","nodeType":"YulIdentifier","src":"896:6:12"},{"kind":"number","nativeSrc":"904:4:12","nodeType":"YulLiteral","src":"904:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"892:3:12","nodeType":"YulIdentifier","src":"892:3:12"},"nativeSrc":"892:17:12","nodeType":"YulFunctionCall","src":"892:17:12"},{"name":"length","nativeSrc":"911:6:12","nodeType":"YulIdentifier","src":"911:6:12"}],"functionName":{"name":"mcopy","nativeSrc":"866:5:12","nodeType":"YulIdentifier","src":"866:5:12"},"nativeSrc":"866:52:12","nodeType":"YulFunctionCall","src":"866:52:12"},"nativeSrc":"866:52:12","nodeType":"YulExpressionStatement","src":"866:52:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"942:9:12","nodeType":"YulIdentifier","src":"942:9:12"},{"name":"length","nativeSrc":"953:6:12","nodeType":"YulIdentifier","src":"953:6:12"}],"functionName":{"name":"add","nativeSrc":"938:3:12","nodeType":"YulIdentifier","src":"938:3:12"},"nativeSrc":"938:22:12","nodeType":"YulFunctionCall","src":"938:22:12"},{"kind":"number","nativeSrc":"962:2:12","nodeType":"YulLiteral","src":"962:2:12","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"934:3:12","nodeType":"YulIdentifier","src":"934:3:12"},"nativeSrc":"934:31:12","nodeType":"YulFunctionCall","src":"934:31:12"},{"kind":"number","nativeSrc":"967:1:12","nodeType":"YulLiteral","src":"967:1:12","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"927:6:12","nodeType":"YulIdentifier","src":"927:6:12"},"nativeSrc":"927:42:12","nodeType":"YulFunctionCall","src":"927:42:12"},"nativeSrc":"927:42:12","nodeType":"YulExpressionStatement","src":"927:42:12"},{"nativeSrc":"978:62:12","nodeType":"YulAssignment","src":"978:62:12","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"994:9:12","nodeType":"YulIdentifier","src":"994:9:12"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1013:6:12","nodeType":"YulIdentifier","src":"1013:6:12"},{"kind":"number","nativeSrc":"1021:2:12","nodeType":"YulLiteral","src":"1021:2:12","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1009:3:12","nodeType":"YulIdentifier","src":"1009:3:12"},"nativeSrc":"1009:15:12","nodeType":"YulFunctionCall","src":"1009:15:12"},{"arguments":[{"kind":"number","nativeSrc":"1030:2:12","nodeType":"YulLiteral","src":"1030:2:12","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1026:3:12","nodeType":"YulIdentifier","src":"1026:3:12"},"nativeSrc":"1026:7:12","nodeType":"YulFunctionCall","src":"1026:7:12"}],"functionName":{"name":"and","nativeSrc":"1005:3:12","nodeType":"YulIdentifier","src":"1005:3:12"},"nativeSrc":"1005:29:12","nodeType":"YulFunctionCall","src":"1005:29:12"}],"functionName":{"name":"add","nativeSrc":"990:3:12","nodeType":"YulIdentifier","src":"990:3:12"},"nativeSrc":"990:45:12","nodeType":"YulFunctionCall","src":"990:45:12"},{"kind":"number","nativeSrc":"1037:2:12","nodeType":"YulLiteral","src":"1037:2:12","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"986:3:12","nodeType":"YulIdentifier","src":"986:3:12"},"nativeSrc":"986:54:12","nodeType":"YulFunctionCall","src":"986:54:12"},"variableNames":[{"name":"tail","nativeSrc":"978:4:12","nodeType":"YulIdentifier","src":"978:4:12"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1060:9:12","nodeType":"YulIdentifier","src":"1060:9:12"},{"kind":"number","nativeSrc":"1071:4:12","nodeType":"YulLiteral","src":"1071:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1056:3:12","nodeType":"YulIdentifier","src":"1056:3:12"},"nativeSrc":"1056:20:12","nodeType":"YulFunctionCall","src":"1056:20:12"},{"name":"value1","nativeSrc":"1078:6:12","nodeType":"YulIdentifier","src":"1078:6:12"}],"functionName":{"name":"mstore","nativeSrc":"1049:6:12","nodeType":"YulIdentifier","src":"1049:6:12"},"nativeSrc":"1049:36:12","nodeType":"YulFunctionCall","src":"1049:36:12"},"nativeSrc":"1049:36:12","nodeType":"YulExpressionStatement","src":"1049:36:12"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"600:491:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"708:9:12","nodeType":"YulTypedName","src":"708:9:12","type":""},{"name":"value1","nativeSrc":"719:6:12","nodeType":"YulTypedName","src":"719:6:12","type":""},{"name":"value0","nativeSrc":"727:6:12","nodeType":"YulTypedName","src":"727:6:12","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"738:4:12","nodeType":"YulTypedName","src":"738:4:12","type":""}],"src":"600:491:12"},{"body":{"nativeSrc":"1251:831:12","nodeType":"YulBlock","src":"1251:831:12","statements":[{"body":{"nativeSrc":"1298:16:12","nodeType":"YulBlock","src":"1298:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1307:1:12","nodeType":"YulLiteral","src":"1307:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"1310:1:12","nodeType":"YulLiteral","src":"1310:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1300:6:12","nodeType":"YulIdentifier","src":"1300:6:12"},"nativeSrc":"1300:12:12","nodeType":"YulFunctionCall","src":"1300:12:12"},"nativeSrc":"1300:12:12","nodeType":"YulExpressionStatement","src":"1300:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1272:7:12","nodeType":"YulIdentifier","src":"1272:7:12"},{"name":"headStart","nativeSrc":"1281:9:12","nodeType":"YulIdentifier","src":"1281:9:12"}],"functionName":{"name":"sub","nativeSrc":"1268:3:12","nodeType":"YulIdentifier","src":"1268:3:12"},"nativeSrc":"1268:23:12","nodeType":"YulFunctionCall","src":"1268:23:12"},{"kind":"number","nativeSrc":"1293:3:12","nodeType":"YulLiteral","src":"1293:3:12","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1264:3:12","nodeType":"YulIdentifier","src":"1264:3:12"},"nativeSrc":"1264:33:12","nodeType":"YulFunctionCall","src":"1264:33:12"},"nativeSrc":"1261:53:12","nodeType":"YulIf","src":"1261:53:12"},{"nativeSrc":"1323:36:12","nodeType":"YulVariableDeclaration","src":"1323:36:12","value":{"arguments":[{"name":"headStart","nativeSrc":"1349:9:12","nodeType":"YulIdentifier","src":"1349:9:12"}],"functionName":{"name":"calldataload","nativeSrc":"1336:12:12","nodeType":"YulIdentifier","src":"1336:12:12"},"nativeSrc":"1336:23:12","nodeType":"YulFunctionCall","src":"1336:23:12"},"variables":[{"name":"value","nativeSrc":"1327:5:12","nodeType":"YulTypedName","src":"1327:5:12","type":""}]},{"body":{"nativeSrc":"1392:16:12","nodeType":"YulBlock","src":"1392:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1401:1:12","nodeType":"YulLiteral","src":"1401:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"1404:1:12","nodeType":"YulLiteral","src":"1404:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1394:6:12","nodeType":"YulIdentifier","src":"1394:6:12"},"nativeSrc":"1394:12:12","nodeType":"YulFunctionCall","src":"1394:12:12"},"nativeSrc":"1394:12:12","nodeType":"YulExpressionStatement","src":"1394:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1381:5:12","nodeType":"YulIdentifier","src":"1381:5:12"},{"kind":"number","nativeSrc":"1388:1:12","nodeType":"YulLiteral","src":"1388:1:12","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"1378:2:12","nodeType":"YulIdentifier","src":"1378:2:12"},"nativeSrc":"1378:12:12","nodeType":"YulFunctionCall","src":"1378:12:12"}],"functionName":{"name":"iszero","nativeSrc":"1371:6:12","nodeType":"YulIdentifier","src":"1371:6:12"},"nativeSrc":"1371:20:12","nodeType":"YulFunctionCall","src":"1371:20:12"},"nativeSrc":"1368:40:12","nodeType":"YulIf","src":"1368:40:12"},{"nativeSrc":"1417:15:12","nodeType":"YulAssignment","src":"1417:15:12","value":{"name":"value","nativeSrc":"1427:5:12","nodeType":"YulIdentifier","src":"1427:5:12"},"variableNames":[{"name":"value0","nativeSrc":"1417:6:12","nodeType":"YulIdentifier","src":"1417:6:12"}]},{"nativeSrc":"1441:46:12","nodeType":"YulVariableDeclaration","src":"1441:46:12","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1472:9:12","nodeType":"YulIdentifier","src":"1472:9:12"},{"kind":"number","nativeSrc":"1483:2:12","nodeType":"YulLiteral","src":"1483:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1468:3:12","nodeType":"YulIdentifier","src":"1468:3:12"},"nativeSrc":"1468:18:12","nodeType":"YulFunctionCall","src":"1468:18:12"}],"functionName":{"name":"calldataload","nativeSrc":"1455:12:12","nodeType":"YulIdentifier","src":"1455:12:12"},"nativeSrc":"1455:32:12","nodeType":"YulFunctionCall","src":"1455:32:12"},"variables":[{"name":"offset","nativeSrc":"1445:6:12","nodeType":"YulTypedName","src":"1445:6:12","type":""}]},{"body":{"nativeSrc":"1530:16:12","nodeType":"YulBlock","src":"1530:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1539:1:12","nodeType":"YulLiteral","src":"1539:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"1542:1:12","nodeType":"YulLiteral","src":"1542:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1532:6:12","nodeType":"YulIdentifier","src":"1532:6:12"},"nativeSrc":"1532:12:12","nodeType":"YulFunctionCall","src":"1532:12:12"},"nativeSrc":"1532:12:12","nodeType":"YulExpressionStatement","src":"1532:12:12"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1502:6:12","nodeType":"YulIdentifier","src":"1502:6:12"},{"kind":"number","nativeSrc":"1510:18:12","nodeType":"YulLiteral","src":"1510:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1499:2:12","nodeType":"YulIdentifier","src":"1499:2:12"},"nativeSrc":"1499:30:12","nodeType":"YulFunctionCall","src":"1499:30:12"},"nativeSrc":"1496:50:12","nodeType":"YulIf","src":"1496:50:12"},{"nativeSrc":"1555:32:12","nodeType":"YulVariableDeclaration","src":"1555:32:12","value":{"arguments":[{"name":"headStart","nativeSrc":"1569:9:12","nodeType":"YulIdentifier","src":"1569:9:12"},{"name":"offset","nativeSrc":"1580:6:12","nodeType":"YulIdentifier","src":"1580:6:12"}],"functionName":{"name":"add","nativeSrc":"1565:3:12","nodeType":"YulIdentifier","src":"1565:3:12"},"nativeSrc":"1565:22:12","nodeType":"YulFunctionCall","src":"1565:22:12"},"variables":[{"name":"_1","nativeSrc":"1559:2:12","nodeType":"YulTypedName","src":"1559:2:12","type":""}]},{"body":{"nativeSrc":"1635:16:12","nodeType":"YulBlock","src":"1635:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1644:1:12","nodeType":"YulLiteral","src":"1644:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"1647:1:12","nodeType":"YulLiteral","src":"1647:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1637:6:12","nodeType":"YulIdentifier","src":"1637:6:12"},"nativeSrc":"1637:12:12","nodeType":"YulFunctionCall","src":"1637:12:12"},"nativeSrc":"1637:12:12","nodeType":"YulExpressionStatement","src":"1637:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1614:2:12","nodeType":"YulIdentifier","src":"1614:2:12"},{"kind":"number","nativeSrc":"1618:4:12","nodeType":"YulLiteral","src":"1618:4:12","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1610:3:12","nodeType":"YulIdentifier","src":"1610:3:12"},"nativeSrc":"1610:13:12","nodeType":"YulFunctionCall","src":"1610:13:12"},{"name":"dataEnd","nativeSrc":"1625:7:12","nodeType":"YulIdentifier","src":"1625:7:12"}],"functionName":{"name":"slt","nativeSrc":"1606:3:12","nodeType":"YulIdentifier","src":"1606:3:12"},"nativeSrc":"1606:27:12","nodeType":"YulFunctionCall","src":"1606:27:12"}],"functionName":{"name":"iszero","nativeSrc":"1599:6:12","nodeType":"YulIdentifier","src":"1599:6:12"},"nativeSrc":"1599:35:12","nodeType":"YulFunctionCall","src":"1599:35:12"},"nativeSrc":"1596:55:12","nodeType":"YulIf","src":"1596:55:12"},{"nativeSrc":"1660:30:12","nodeType":"YulVariableDeclaration","src":"1660:30:12","value":{"arguments":[{"name":"_1","nativeSrc":"1687:2:12","nodeType":"YulIdentifier","src":"1687:2:12"}],"functionName":{"name":"calldataload","nativeSrc":"1674:12:12","nodeType":"YulIdentifier","src":"1674:12:12"},"nativeSrc":"1674:16:12","nodeType":"YulFunctionCall","src":"1674:16:12"},"variables":[{"name":"length","nativeSrc":"1664:6:12","nodeType":"YulTypedName","src":"1664:6:12","type":""}]},{"body":{"nativeSrc":"1733:16:12","nodeType":"YulBlock","src":"1733:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1742:1:12","nodeType":"YulLiteral","src":"1742:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"1745:1:12","nodeType":"YulLiteral","src":"1745:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1735:6:12","nodeType":"YulIdentifier","src":"1735:6:12"},"nativeSrc":"1735:12:12","nodeType":"YulFunctionCall","src":"1735:12:12"},"nativeSrc":"1735:12:12","nodeType":"YulExpressionStatement","src":"1735:12:12"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1705:6:12","nodeType":"YulIdentifier","src":"1705:6:12"},{"kind":"number","nativeSrc":"1713:18:12","nodeType":"YulLiteral","src":"1713:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1702:2:12","nodeType":"YulIdentifier","src":"1702:2:12"},"nativeSrc":"1702:30:12","nodeType":"YulFunctionCall","src":"1702:30:12"},"nativeSrc":"1699:50:12","nodeType":"YulIf","src":"1699:50:12"},{"body":{"nativeSrc":"1799:16:12","nodeType":"YulBlock","src":"1799:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1808:1:12","nodeType":"YulLiteral","src":"1808:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"1811:1:12","nodeType":"YulLiteral","src":"1811:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1801:6:12","nodeType":"YulIdentifier","src":"1801:6:12"},"nativeSrc":"1801:12:12","nodeType":"YulFunctionCall","src":"1801:12:12"},"nativeSrc":"1801:12:12","nodeType":"YulExpressionStatement","src":"1801:12:12"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1772:2:12","nodeType":"YulIdentifier","src":"1772:2:12"},{"name":"length","nativeSrc":"1776:6:12","nodeType":"YulIdentifier","src":"1776:6:12"}],"functionName":{"name":"add","nativeSrc":"1768:3:12","nodeType":"YulIdentifier","src":"1768:3:12"},"nativeSrc":"1768:15:12","nodeType":"YulFunctionCall","src":"1768:15:12"},{"kind":"number","nativeSrc":"1785:2:12","nodeType":"YulLiteral","src":"1785:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1764:3:12","nodeType":"YulIdentifier","src":"1764:3:12"},"nativeSrc":"1764:24:12","nodeType":"YulFunctionCall","src":"1764:24:12"},{"name":"dataEnd","nativeSrc":"1790:7:12","nodeType":"YulIdentifier","src":"1790:7:12"}],"functionName":{"name":"gt","nativeSrc":"1761:2:12","nodeType":"YulIdentifier","src":"1761:2:12"},"nativeSrc":"1761:37:12","nodeType":"YulFunctionCall","src":"1761:37:12"},"nativeSrc":"1758:57:12","nodeType":"YulIf","src":"1758:57:12"},{"nativeSrc":"1824:21:12","nodeType":"YulAssignment","src":"1824:21:12","value":{"arguments":[{"name":"_1","nativeSrc":"1838:2:12","nodeType":"YulIdentifier","src":"1838:2:12"},{"kind":"number","nativeSrc":"1842:2:12","nodeType":"YulLiteral","src":"1842:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1834:3:12","nodeType":"YulIdentifier","src":"1834:3:12"},"nativeSrc":"1834:11:12","nodeType":"YulFunctionCall","src":"1834:11:12"},"variableNames":[{"name":"value1","nativeSrc":"1824:6:12","nodeType":"YulIdentifier","src":"1824:6:12"}]},{"nativeSrc":"1854:16:12","nodeType":"YulAssignment","src":"1854:16:12","value":{"name":"length","nativeSrc":"1864:6:12","nodeType":"YulIdentifier","src":"1864:6:12"},"variableNames":[{"name":"value2","nativeSrc":"1854:6:12","nodeType":"YulIdentifier","src":"1854:6:12"}]},{"nativeSrc":"1879:16:12","nodeType":"YulVariableDeclaration","src":"1879:16:12","value":{"kind":"number","nativeSrc":"1894:1:12","nodeType":"YulLiteral","src":"1894:1:12","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"1883:7:12","nodeType":"YulTypedName","src":"1883:7:12","type":""}]},{"nativeSrc":"1904:43:12","nodeType":"YulAssignment","src":"1904:43:12","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1932:9:12","nodeType":"YulIdentifier","src":"1932:9:12"},{"kind":"number","nativeSrc":"1943:2:12","nodeType":"YulLiteral","src":"1943:2:12","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1928:3:12","nodeType":"YulIdentifier","src":"1928:3:12"},"nativeSrc":"1928:18:12","nodeType":"YulFunctionCall","src":"1928:18:12"}],"functionName":{"name":"calldataload","nativeSrc":"1915:12:12","nodeType":"YulIdentifier","src":"1915:12:12"},"nativeSrc":"1915:32:12","nodeType":"YulFunctionCall","src":"1915:32:12"},"variableNames":[{"name":"value_1","nativeSrc":"1904:7:12","nodeType":"YulIdentifier","src":"1904:7:12"}]},{"nativeSrc":"1956:17:12","nodeType":"YulAssignment","src":"1956:17:12","value":{"name":"value_1","nativeSrc":"1966:7:12","nodeType":"YulIdentifier","src":"1966:7:12"},"variableNames":[{"name":"value3","nativeSrc":"1956:6:12","nodeType":"YulIdentifier","src":"1956:6:12"}]},{"nativeSrc":"1982:16:12","nodeType":"YulVariableDeclaration","src":"1982:16:12","value":{"kind":"number","nativeSrc":"1997:1:12","nodeType":"YulLiteral","src":"1997:1:12","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"1986:7:12","nodeType":"YulTypedName","src":"1986:7:12","type":""}]},{"nativeSrc":"2007:43:12","nodeType":"YulAssignment","src":"2007:43:12","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2035:9:12","nodeType":"YulIdentifier","src":"2035:9:12"},{"kind":"number","nativeSrc":"2046:2:12","nodeType":"YulLiteral","src":"2046:2:12","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2031:3:12","nodeType":"YulIdentifier","src":"2031:3:12"},"nativeSrc":"2031:18:12","nodeType":"YulFunctionCall","src":"2031:18:12"}],"functionName":{"name":"calldataload","nativeSrc":"2018:12:12","nodeType":"YulIdentifier","src":"2018:12:12"},"nativeSrc":"2018:32:12","nodeType":"YulFunctionCall","src":"2018:32:12"},"variableNames":[{"name":"value_2","nativeSrc":"2007:7:12","nodeType":"YulIdentifier","src":"2007:7:12"}]},{"nativeSrc":"2059:17:12","nodeType":"YulAssignment","src":"2059:17:12","value":{"name":"value_2","nativeSrc":"2069:7:12","nodeType":"YulIdentifier","src":"2069:7:12"},"variableNames":[{"name":"value4","nativeSrc":"2059:6:12","nodeType":"YulIdentifier","src":"2059:6:12"}]}]},"name":"abi_decode_tuple_t_enum$_PostOpMode_$1221t_bytes_calldata_ptrt_uint256t_uint256","nativeSrc":"1096:986:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1185:9:12","nodeType":"YulTypedName","src":"1185:9:12","type":""},{"name":"dataEnd","nativeSrc":"1196:7:12","nodeType":"YulTypedName","src":"1196:7:12","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1208:6:12","nodeType":"YulTypedName","src":"1208:6:12","type":""},{"name":"value1","nativeSrc":"1216:6:12","nodeType":"YulTypedName","src":"1216:6:12","type":""},{"name":"value2","nativeSrc":"1224:6:12","nodeType":"YulTypedName","src":"1224:6:12","type":""},{"name":"value3","nativeSrc":"1232:6:12","nodeType":"YulTypedName","src":"1232:6:12","type":""},{"name":"value4","nativeSrc":"1240:6:12","nodeType":"YulTypedName","src":"1240:6:12","type":""}],"src":"1096:986:12"},{"body":{"nativeSrc":"2188:102:12","nodeType":"YulBlock","src":"2188:102:12","statements":[{"nativeSrc":"2198:26:12","nodeType":"YulAssignment","src":"2198:26:12","value":{"arguments":[{"name":"headStart","nativeSrc":"2210:9:12","nodeType":"YulIdentifier","src":"2210:9:12"},{"kind":"number","nativeSrc":"2221:2:12","nodeType":"YulLiteral","src":"2221:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2206:3:12","nodeType":"YulIdentifier","src":"2206:3:12"},"nativeSrc":"2206:18:12","nodeType":"YulFunctionCall","src":"2206:18:12"},"variableNames":[{"name":"tail","nativeSrc":"2198:4:12","nodeType":"YulIdentifier","src":"2198:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2240:9:12","nodeType":"YulIdentifier","src":"2240:9:12"},{"arguments":[{"name":"value0","nativeSrc":"2255:6:12","nodeType":"YulIdentifier","src":"2255:6:12"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2271:3:12","nodeType":"YulLiteral","src":"2271:3:12","type":"","value":"160"},{"kind":"number","nativeSrc":"2276:1:12","nodeType":"YulLiteral","src":"2276:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2267:3:12","nodeType":"YulIdentifier","src":"2267:3:12"},"nativeSrc":"2267:11:12","nodeType":"YulFunctionCall","src":"2267:11:12"},{"kind":"number","nativeSrc":"2280:1:12","nodeType":"YulLiteral","src":"2280:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2263:3:12","nodeType":"YulIdentifier","src":"2263:3:12"},"nativeSrc":"2263:19:12","nodeType":"YulFunctionCall","src":"2263:19:12"}],"functionName":{"name":"and","nativeSrc":"2251:3:12","nodeType":"YulIdentifier","src":"2251:3:12"},"nativeSrc":"2251:32:12","nodeType":"YulFunctionCall","src":"2251:32:12"}],"functionName":{"name":"mstore","nativeSrc":"2233:6:12","nodeType":"YulIdentifier","src":"2233:6:12"},"nativeSrc":"2233:51:12","nodeType":"YulFunctionCall","src":"2233:51:12"},"nativeSrc":"2233:51:12","nodeType":"YulExpressionStatement","src":"2233:51:12"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2087:203:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2157:9:12","nodeType":"YulTypedName","src":"2157:9:12","type":""},{"name":"value0","nativeSrc":"2168:6:12","nodeType":"YulTypedName","src":"2168:6:12","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2179:4:12","nodeType":"YulTypedName","src":"2179:4:12","type":""}],"src":"2087:203:12"},{"body":{"nativeSrc":"2344:124:12","nodeType":"YulBlock","src":"2344:124:12","statements":[{"nativeSrc":"2354:29:12","nodeType":"YulAssignment","src":"2354:29:12","value":{"arguments":[{"name":"offset","nativeSrc":"2376:6:12","nodeType":"YulIdentifier","src":"2376:6:12"}],"functionName":{"name":"calldataload","nativeSrc":"2363:12:12","nodeType":"YulIdentifier","src":"2363:12:12"},"nativeSrc":"2363:20:12","nodeType":"YulFunctionCall","src":"2363:20:12"},"variableNames":[{"name":"value","nativeSrc":"2354:5:12","nodeType":"YulIdentifier","src":"2354:5:12"}]},{"body":{"nativeSrc":"2446:16:12","nodeType":"YulBlock","src":"2446:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2455:1:12","nodeType":"YulLiteral","src":"2455:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"2458:1:12","nodeType":"YulLiteral","src":"2458:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2448:6:12","nodeType":"YulIdentifier","src":"2448:6:12"},"nativeSrc":"2448:12:12","nodeType":"YulFunctionCall","src":"2448:12:12"},"nativeSrc":"2448:12:12","nodeType":"YulExpressionStatement","src":"2448:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2405:5:12","nodeType":"YulIdentifier","src":"2405:5:12"},{"arguments":[{"name":"value","nativeSrc":"2416:5:12","nodeType":"YulIdentifier","src":"2416:5:12"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2431:3:12","nodeType":"YulLiteral","src":"2431:3:12","type":"","value":"160"},{"kind":"number","nativeSrc":"2436:1:12","nodeType":"YulLiteral","src":"2436:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2427:3:12","nodeType":"YulIdentifier","src":"2427:3:12"},"nativeSrc":"2427:11:12","nodeType":"YulFunctionCall","src":"2427:11:12"},{"kind":"number","nativeSrc":"2440:1:12","nodeType":"YulLiteral","src":"2440:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2423:3:12","nodeType":"YulIdentifier","src":"2423:3:12"},"nativeSrc":"2423:19:12","nodeType":"YulFunctionCall","src":"2423:19:12"}],"functionName":{"name":"and","nativeSrc":"2412:3:12","nodeType":"YulIdentifier","src":"2412:3:12"},"nativeSrc":"2412:31:12","nodeType":"YulFunctionCall","src":"2412:31:12"}],"functionName":{"name":"eq","nativeSrc":"2402:2:12","nodeType":"YulIdentifier","src":"2402:2:12"},"nativeSrc":"2402:42:12","nodeType":"YulFunctionCall","src":"2402:42:12"}],"functionName":{"name":"iszero","nativeSrc":"2395:6:12","nodeType":"YulIdentifier","src":"2395:6:12"},"nativeSrc":"2395:50:12","nodeType":"YulFunctionCall","src":"2395:50:12"},"nativeSrc":"2392:70:12","nodeType":"YulIf","src":"2392:70:12"}]},"name":"abi_decode_address","nativeSrc":"2295:173:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2323:6:12","nodeType":"YulTypedName","src":"2323:6:12","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2334:5:12","nodeType":"YulTypedName","src":"2334:5:12","type":""}],"src":"2295:173:12"},{"body":{"nativeSrc":"2557:263:12","nodeType":"YulBlock","src":"2557:263:12","statements":[{"body":{"nativeSrc":"2603:16:12","nodeType":"YulBlock","src":"2603:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2612:1:12","nodeType":"YulLiteral","src":"2612:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"2615:1:12","nodeType":"YulLiteral","src":"2615:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2605:6:12","nodeType":"YulIdentifier","src":"2605:6:12"},"nativeSrc":"2605:12:12","nodeType":"YulFunctionCall","src":"2605:12:12"},"nativeSrc":"2605:12:12","nodeType":"YulExpressionStatement","src":"2605:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2578:7:12","nodeType":"YulIdentifier","src":"2578:7:12"},{"name":"headStart","nativeSrc":"2587:9:12","nodeType":"YulIdentifier","src":"2587:9:12"}],"functionName":{"name":"sub","nativeSrc":"2574:3:12","nodeType":"YulIdentifier","src":"2574:3:12"},"nativeSrc":"2574:23:12","nodeType":"YulFunctionCall","src":"2574:23:12"},{"kind":"number","nativeSrc":"2599:2:12","nodeType":"YulLiteral","src":"2599:2:12","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2570:3:12","nodeType":"YulIdentifier","src":"2570:3:12"},"nativeSrc":"2570:32:12","nodeType":"YulFunctionCall","src":"2570:32:12"},"nativeSrc":"2567:52:12","nodeType":"YulIf","src":"2567:52:12"},{"nativeSrc":"2628:39:12","nodeType":"YulAssignment","src":"2628:39:12","value":{"arguments":[{"name":"headStart","nativeSrc":"2657:9:12","nodeType":"YulIdentifier","src":"2657:9:12"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2638:18:12","nodeType":"YulIdentifier","src":"2638:18:12"},"nativeSrc":"2638:29:12","nodeType":"YulFunctionCall","src":"2638:29:12"},"variableNames":[{"name":"value0","nativeSrc":"2628:6:12","nodeType":"YulIdentifier","src":"2628:6:12"}]},{"nativeSrc":"2676:45:12","nodeType":"YulVariableDeclaration","src":"2676:45:12","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2706:9:12","nodeType":"YulIdentifier","src":"2706:9:12"},{"kind":"number","nativeSrc":"2717:2:12","nodeType":"YulLiteral","src":"2717:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2702:3:12","nodeType":"YulIdentifier","src":"2702:3:12"},"nativeSrc":"2702:18:12","nodeType":"YulFunctionCall","src":"2702:18:12"}],"functionName":{"name":"calldataload","nativeSrc":"2689:12:12","nodeType":"YulIdentifier","src":"2689:12:12"},"nativeSrc":"2689:32:12","nodeType":"YulFunctionCall","src":"2689:32:12"},"variables":[{"name":"value","nativeSrc":"2680:5:12","nodeType":"YulTypedName","src":"2680:5:12","type":""}]},{"body":{"nativeSrc":"2774:16:12","nodeType":"YulBlock","src":"2774:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2783:1:12","nodeType":"YulLiteral","src":"2783:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"2786:1:12","nodeType":"YulLiteral","src":"2786:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2776:6:12","nodeType":"YulIdentifier","src":"2776:6:12"},"nativeSrc":"2776:12:12","nodeType":"YulFunctionCall","src":"2776:12:12"},"nativeSrc":"2776:12:12","nodeType":"YulExpressionStatement","src":"2776:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2743:5:12","nodeType":"YulIdentifier","src":"2743:5:12"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2764:5:12","nodeType":"YulIdentifier","src":"2764:5:12"}],"functionName":{"name":"iszero","nativeSrc":"2757:6:12","nodeType":"YulIdentifier","src":"2757:6:12"},"nativeSrc":"2757:13:12","nodeType":"YulFunctionCall","src":"2757:13:12"}],"functionName":{"name":"iszero","nativeSrc":"2750:6:12","nodeType":"YulIdentifier","src":"2750:6:12"},"nativeSrc":"2750:21:12","nodeType":"YulFunctionCall","src":"2750:21:12"}],"functionName":{"name":"eq","nativeSrc":"2740:2:12","nodeType":"YulIdentifier","src":"2740:2:12"},"nativeSrc":"2740:32:12","nodeType":"YulFunctionCall","src":"2740:32:12"}],"functionName":{"name":"iszero","nativeSrc":"2733:6:12","nodeType":"YulIdentifier","src":"2733:6:12"},"nativeSrc":"2733:40:12","nodeType":"YulFunctionCall","src":"2733:40:12"},"nativeSrc":"2730:60:12","nodeType":"YulIf","src":"2730:60:12"},{"nativeSrc":"2799:15:12","nodeType":"YulAssignment","src":"2799:15:12","value":{"name":"value","nativeSrc":"2809:5:12","nodeType":"YulIdentifier","src":"2809:5:12"},"variableNames":[{"name":"value1","nativeSrc":"2799:6:12","nodeType":"YulIdentifier","src":"2799:6:12"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"2473:347:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2515:9:12","nodeType":"YulTypedName","src":"2515:9:12","type":""},{"name":"dataEnd","nativeSrc":"2526:7:12","nodeType":"YulTypedName","src":"2526:7:12","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2538:6:12","nodeType":"YulTypedName","src":"2538:6:12","type":""},{"name":"value1","nativeSrc":"2546:6:12","nodeType":"YulTypedName","src":"2546:6:12","type":""}],"src":"2473:347:12"},{"body":{"nativeSrc":"2946:102:12","nodeType":"YulBlock","src":"2946:102:12","statements":[{"nativeSrc":"2956:26:12","nodeType":"YulAssignment","src":"2956:26:12","value":{"arguments":[{"name":"headStart","nativeSrc":"2968:9:12","nodeType":"YulIdentifier","src":"2968:9:12"},{"kind":"number","nativeSrc":"2979:2:12","nodeType":"YulLiteral","src":"2979:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2964:3:12","nodeType":"YulIdentifier","src":"2964:3:12"},"nativeSrc":"2964:18:12","nodeType":"YulFunctionCall","src":"2964:18:12"},"variableNames":[{"name":"tail","nativeSrc":"2956:4:12","nodeType":"YulIdentifier","src":"2956:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2998:9:12","nodeType":"YulIdentifier","src":"2998:9:12"},{"arguments":[{"name":"value0","nativeSrc":"3013:6:12","nodeType":"YulIdentifier","src":"3013:6:12"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3029:3:12","nodeType":"YulLiteral","src":"3029:3:12","type":"","value":"160"},{"kind":"number","nativeSrc":"3034:1:12","nodeType":"YulLiteral","src":"3034:1:12","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3025:3:12","nodeType":"YulIdentifier","src":"3025:3:12"},"nativeSrc":"3025:11:12","nodeType":"YulFunctionCall","src":"3025:11:12"},{"kind":"number","nativeSrc":"3038:1:12","nodeType":"YulLiteral","src":"3038:1:12","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3021:3:12","nodeType":"YulIdentifier","src":"3021:3:12"},"nativeSrc":"3021:19:12","nodeType":"YulFunctionCall","src":"3021:19:12"}],"functionName":{"name":"and","nativeSrc":"3009:3:12","nodeType":"YulIdentifier","src":"3009:3:12"},"nativeSrc":"3009:32:12","nodeType":"YulFunctionCall","src":"3009:32:12"}],"functionName":{"name":"mstore","nativeSrc":"2991:6:12","nodeType":"YulIdentifier","src":"2991:6:12"},"nativeSrc":"2991:51:12","nodeType":"YulFunctionCall","src":"2991:51:12"},"nativeSrc":"2991:51:12","nodeType":"YulExpressionStatement","src":"2991:51:12"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$1194__to_t_address__fromStack_reversed","nativeSrc":"2825:223:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2915:9:12","nodeType":"YulTypedName","src":"2915:9:12","type":""},{"name":"value0","nativeSrc":"2926:6:12","nodeType":"YulTypedName","src":"2926:6:12","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2937:4:12","nodeType":"YulTypedName","src":"2937:4:12","type":""}],"src":"2825:223:12"},{"body":{"nativeSrc":"3123:116:12","nodeType":"YulBlock","src":"3123:116:12","statements":[{"body":{"nativeSrc":"3169:16:12","nodeType":"YulBlock","src":"3169:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3178:1:12","nodeType":"YulLiteral","src":"3178:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"3181:1:12","nodeType":"YulLiteral","src":"3181:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3171:6:12","nodeType":"YulIdentifier","src":"3171:6:12"},"nativeSrc":"3171:12:12","nodeType":"YulFunctionCall","src":"3171:12:12"},"nativeSrc":"3171:12:12","nodeType":"YulExpressionStatement","src":"3171:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3144:7:12","nodeType":"YulIdentifier","src":"3144:7:12"},{"name":"headStart","nativeSrc":"3153:9:12","nodeType":"YulIdentifier","src":"3153:9:12"}],"functionName":{"name":"sub","nativeSrc":"3140:3:12","nodeType":"YulIdentifier","src":"3140:3:12"},"nativeSrc":"3140:23:12","nodeType":"YulFunctionCall","src":"3140:23:12"},{"kind":"number","nativeSrc":"3165:2:12","nodeType":"YulLiteral","src":"3165:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3136:3:12","nodeType":"YulIdentifier","src":"3136:3:12"},"nativeSrc":"3136:32:12","nodeType":"YulFunctionCall","src":"3136:32:12"},"nativeSrc":"3133:52:12","nodeType":"YulIf","src":"3133:52:12"},{"nativeSrc":"3194:39:12","nodeType":"YulAssignment","src":"3194:39:12","value":{"arguments":[{"name":"headStart","nativeSrc":"3223:9:12","nodeType":"YulIdentifier","src":"3223:9:12"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3204:18:12","nodeType":"YulIdentifier","src":"3204:18:12"},"nativeSrc":"3204:29:12","nodeType":"YulFunctionCall","src":"3204:29:12"},"variableNames":[{"name":"value0","nativeSrc":"3194:6:12","nodeType":"YulIdentifier","src":"3194:6:12"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3053:186:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3089:9:12","nodeType":"YulTypedName","src":"3089:9:12","type":""},{"name":"dataEnd","nativeSrc":"3100:7:12","nodeType":"YulTypedName","src":"3100:7:12","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3112:6:12","nodeType":"YulTypedName","src":"3112:6:12","type":""}],"src":"3053:186:12"},{"body":{"nativeSrc":"3339:92:12","nodeType":"YulBlock","src":"3339:92:12","statements":[{"nativeSrc":"3349:26:12","nodeType":"YulAssignment","src":"3349:26:12","value":{"arguments":[{"name":"headStart","nativeSrc":"3361:9:12","nodeType":"YulIdentifier","src":"3361:9:12"},{"kind":"number","nativeSrc":"3372:2:12","nodeType":"YulLiteral","src":"3372:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3357:3:12","nodeType":"YulIdentifier","src":"3357:3:12"},"nativeSrc":"3357:18:12","nodeType":"YulFunctionCall","src":"3357:18:12"},"variableNames":[{"name":"tail","nativeSrc":"3349:4:12","nodeType":"YulIdentifier","src":"3349:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3391:9:12","nodeType":"YulIdentifier","src":"3391:9:12"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"3416:6:12","nodeType":"YulIdentifier","src":"3416:6:12"}],"functionName":{"name":"iszero","nativeSrc":"3409:6:12","nodeType":"YulIdentifier","src":"3409:6:12"},"nativeSrc":"3409:14:12","nodeType":"YulFunctionCall","src":"3409:14:12"}],"functionName":{"name":"iszero","nativeSrc":"3402:6:12","nodeType":"YulIdentifier","src":"3402:6:12"},"nativeSrc":"3402:22:12","nodeType":"YulFunctionCall","src":"3402:22:12"}],"functionName":{"name":"mstore","nativeSrc":"3384:6:12","nodeType":"YulIdentifier","src":"3384:6:12"},"nativeSrc":"3384:41:12","nodeType":"YulFunctionCall","src":"3384:41:12"},"nativeSrc":"3384:41:12","nodeType":"YulExpressionStatement","src":"3384:41:12"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3244:187:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3308:9:12","nodeType":"YulTypedName","src":"3308:9:12","type":""},{"name":"value0","nativeSrc":"3319:6:12","nodeType":"YulTypedName","src":"3319:6:12","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3330:4:12","nodeType":"YulTypedName","src":"3330:4:12","type":""}],"src":"3244:187:12"},{"body":{"nativeSrc":"3537:76:12","nodeType":"YulBlock","src":"3537:76:12","statements":[{"nativeSrc":"3547:26:12","nodeType":"YulAssignment","src":"3547:26:12","value":{"arguments":[{"name":"headStart","nativeSrc":"3559:9:12","nodeType":"YulIdentifier","src":"3559:9:12"},{"kind":"number","nativeSrc":"3570:2:12","nodeType":"YulLiteral","src":"3570:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3555:3:12","nodeType":"YulIdentifier","src":"3555:3:12"},"nativeSrc":"3555:18:12","nodeType":"YulFunctionCall","src":"3555:18:12"},"variableNames":[{"name":"tail","nativeSrc":"3547:4:12","nodeType":"YulIdentifier","src":"3547:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3589:9:12","nodeType":"YulIdentifier","src":"3589:9:12"},{"name":"value0","nativeSrc":"3600:6:12","nodeType":"YulIdentifier","src":"3600:6:12"}],"functionName":{"name":"mstore","nativeSrc":"3582:6:12","nodeType":"YulIdentifier","src":"3582:6:12"},"nativeSrc":"3582:25:12","nodeType":"YulFunctionCall","src":"3582:25:12"},"nativeSrc":"3582:25:12","nodeType":"YulExpressionStatement","src":"3582:25:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3436:177:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3506:9:12","nodeType":"YulTypedName","src":"3506:9:12","type":""},{"name":"value0","nativeSrc":"3517:6:12","nodeType":"YulTypedName","src":"3517:6:12","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3528:4:12","nodeType":"YulTypedName","src":"3528:4:12","type":""}],"src":"3436:177:12"},{"body":{"nativeSrc":"3712:427:12","nodeType":"YulBlock","src":"3712:427:12","statements":[{"nativeSrc":"3722:51:12","nodeType":"YulVariableDeclaration","src":"3722:51:12","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"3761:11:12","nodeType":"YulIdentifier","src":"3761:11:12"}],"functionName":{"name":"calldataload","nativeSrc":"3748:12:12","nodeType":"YulIdentifier","src":"3748:12:12"},"nativeSrc":"3748:25:12","nodeType":"YulFunctionCall","src":"3748:25:12"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"3726:18:12","nodeType":"YulTypedName","src":"3726:18:12","type":""}]},{"body":{"nativeSrc":"3862:16:12","nodeType":"YulBlock","src":"3862:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3871:1:12","nodeType":"YulLiteral","src":"3871:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"3874:1:12","nodeType":"YulLiteral","src":"3874:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3864:6:12","nodeType":"YulIdentifier","src":"3864:6:12"},"nativeSrc":"3864:12:12","nodeType":"YulFunctionCall","src":"3864:12:12"},"nativeSrc":"3864:12:12","nodeType":"YulExpressionStatement","src":"3864:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"3796:18:12","nodeType":"YulIdentifier","src":"3796:18:12"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"3824:12:12","nodeType":"YulIdentifier","src":"3824:12:12"},"nativeSrc":"3824:14:12","nodeType":"YulFunctionCall","src":"3824:14:12"},{"name":"base_ref","nativeSrc":"3840:8:12","nodeType":"YulIdentifier","src":"3840:8:12"}],"functionName":{"name":"sub","nativeSrc":"3820:3:12","nodeType":"YulIdentifier","src":"3820:3:12"},"nativeSrc":"3820:29:12","nodeType":"YulFunctionCall","src":"3820:29:12"},{"arguments":[{"kind":"number","nativeSrc":"3855:2:12","nodeType":"YulLiteral","src":"3855:2:12","type":"","value":"30"}],"functionName":{"name":"not","nativeSrc":"3851:3:12","nodeType":"YulIdentifier","src":"3851:3:12"},"nativeSrc":"3851:7:12","nodeType":"YulFunctionCall","src":"3851:7:12"}],"functionName":{"name":"add","nativeSrc":"3816:3:12","nodeType":"YulIdentifier","src":"3816:3:12"},"nativeSrc":"3816:43:12","nodeType":"YulFunctionCall","src":"3816:43:12"}],"functionName":{"name":"slt","nativeSrc":"3792:3:12","nodeType":"YulIdentifier","src":"3792:3:12"},"nativeSrc":"3792:68:12","nodeType":"YulFunctionCall","src":"3792:68:12"}],"functionName":{"name":"iszero","nativeSrc":"3785:6:12","nodeType":"YulIdentifier","src":"3785:6:12"},"nativeSrc":"3785:76:12","nodeType":"YulFunctionCall","src":"3785:76:12"},"nativeSrc":"3782:96:12","nodeType":"YulIf","src":"3782:96:12"},{"nativeSrc":"3887:47:12","nodeType":"YulVariableDeclaration","src":"3887:47:12","value":{"arguments":[{"name":"base_ref","nativeSrc":"3905:8:12","nodeType":"YulIdentifier","src":"3905:8:12"},{"name":"rel_offset_of_tail","nativeSrc":"3915:18:12","nodeType":"YulIdentifier","src":"3915:18:12"}],"functionName":{"name":"add","nativeSrc":"3901:3:12","nodeType":"YulIdentifier","src":"3901:3:12"},"nativeSrc":"3901:33:12","nodeType":"YulFunctionCall","src":"3901:33:12"},"variables":[{"name":"addr_1","nativeSrc":"3891:6:12","nodeType":"YulTypedName","src":"3891:6:12","type":""}]},{"nativeSrc":"3943:30:12","nodeType":"YulAssignment","src":"3943:30:12","value":{"arguments":[{"name":"addr_1","nativeSrc":"3966:6:12","nodeType":"YulIdentifier","src":"3966:6:12"}],"functionName":{"name":"calldataload","nativeSrc":"3953:12:12","nodeType":"YulIdentifier","src":"3953:12:12"},"nativeSrc":"3953:20:12","nodeType":"YulFunctionCall","src":"3953:20:12"},"variableNames":[{"name":"length","nativeSrc":"3943:6:12","nodeType":"YulIdentifier","src":"3943:6:12"}]},{"body":{"nativeSrc":"4016:16:12","nodeType":"YulBlock","src":"4016:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4025:1:12","nodeType":"YulLiteral","src":"4025:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"4028:1:12","nodeType":"YulLiteral","src":"4028:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4018:6:12","nodeType":"YulIdentifier","src":"4018:6:12"},"nativeSrc":"4018:12:12","nodeType":"YulFunctionCall","src":"4018:12:12"},"nativeSrc":"4018:12:12","nodeType":"YulExpressionStatement","src":"4018:12:12"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3988:6:12","nodeType":"YulIdentifier","src":"3988:6:12"},{"kind":"number","nativeSrc":"3996:18:12","nodeType":"YulLiteral","src":"3996:18:12","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3985:2:12","nodeType":"YulIdentifier","src":"3985:2:12"},"nativeSrc":"3985:30:12","nodeType":"YulFunctionCall","src":"3985:30:12"},"nativeSrc":"3982:50:12","nodeType":"YulIf","src":"3982:50:12"},{"nativeSrc":"4041:25:12","nodeType":"YulAssignment","src":"4041:25:12","value":{"arguments":[{"name":"addr_1","nativeSrc":"4053:6:12","nodeType":"YulIdentifier","src":"4053:6:12"},{"kind":"number","nativeSrc":"4061:4:12","nodeType":"YulLiteral","src":"4061:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4049:3:12","nodeType":"YulIdentifier","src":"4049:3:12"},"nativeSrc":"4049:17:12","nodeType":"YulFunctionCall","src":"4049:17:12"},"variableNames":[{"name":"addr","nativeSrc":"4041:4:12","nodeType":"YulIdentifier","src":"4041:4:12"}]},{"body":{"nativeSrc":"4117:16:12","nodeType":"YulBlock","src":"4117:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4126:1:12","nodeType":"YulLiteral","src":"4126:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"4129:1:12","nodeType":"YulLiteral","src":"4129:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4119:6:12","nodeType":"YulIdentifier","src":"4119:6:12"},"nativeSrc":"4119:12:12","nodeType":"YulFunctionCall","src":"4119:12:12"},"nativeSrc":"4119:12:12","nodeType":"YulExpressionStatement","src":"4119:12:12"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"4082:4:12","nodeType":"YulIdentifier","src":"4082:4:12"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"4092:12:12","nodeType":"YulIdentifier","src":"4092:12:12"},"nativeSrc":"4092:14:12","nodeType":"YulFunctionCall","src":"4092:14:12"},{"name":"length","nativeSrc":"4108:6:12","nodeType":"YulIdentifier","src":"4108:6:12"}],"functionName":{"name":"sub","nativeSrc":"4088:3:12","nodeType":"YulIdentifier","src":"4088:3:12"},"nativeSrc":"4088:27:12","nodeType":"YulFunctionCall","src":"4088:27:12"}],"functionName":{"name":"sgt","nativeSrc":"4078:3:12","nodeType":"YulIdentifier","src":"4078:3:12"},"nativeSrc":"4078:38:12","nodeType":"YulFunctionCall","src":"4078:38:12"},"nativeSrc":"4075:58:12","nodeType":"YulIf","src":"4075:58:12"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nativeSrc":"3618:521:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"3669:8:12","nodeType":"YulTypedName","src":"3669:8:12","type":""},{"name":"ptr_to_tail","nativeSrc":"3679:11:12","nodeType":"YulTypedName","src":"3679:11:12","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"3695:4:12","nodeType":"YulTypedName","src":"3695:4:12","type":""},{"name":"length","nativeSrc":"3701:6:12","nodeType":"YulTypedName","src":"3701:6:12","type":""}],"src":"3618:521:12"},{"body":{"nativeSrc":"4274:201:12","nodeType":"YulBlock","src":"4274:201:12","statements":[{"body":{"nativeSrc":"4312:16:12","nodeType":"YulBlock","src":"4312:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4321:1:12","nodeType":"YulLiteral","src":"4321:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"4324:1:12","nodeType":"YulLiteral","src":"4324:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4314:6:12","nodeType":"YulIdentifier","src":"4314:6:12"},"nativeSrc":"4314:12:12","nodeType":"YulFunctionCall","src":"4314:12:12"},"nativeSrc":"4314:12:12","nodeType":"YulExpressionStatement","src":"4314:12:12"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4290:10:12","nodeType":"YulIdentifier","src":"4290:10:12"},{"name":"endIndex","nativeSrc":"4302:8:12","nodeType":"YulIdentifier","src":"4302:8:12"}],"functionName":{"name":"gt","nativeSrc":"4287:2:12","nodeType":"YulIdentifier","src":"4287:2:12"},"nativeSrc":"4287:24:12","nodeType":"YulFunctionCall","src":"4287:24:12"},"nativeSrc":"4284:44:12","nodeType":"YulIf","src":"4284:44:12"},{"body":{"nativeSrc":"4361:16:12","nodeType":"YulBlock","src":"4361:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4370:1:12","nodeType":"YulLiteral","src":"4370:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"4373:1:12","nodeType":"YulLiteral","src":"4373:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4363:6:12","nodeType":"YulIdentifier","src":"4363:6:12"},"nativeSrc":"4363:12:12","nodeType":"YulFunctionCall","src":"4363:12:12"},"nativeSrc":"4363:12:12","nodeType":"YulExpressionStatement","src":"4363:12:12"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"4343:8:12","nodeType":"YulIdentifier","src":"4343:8:12"},{"name":"length","nativeSrc":"4353:6:12","nodeType":"YulIdentifier","src":"4353:6:12"}],"functionName":{"name":"gt","nativeSrc":"4340:2:12","nodeType":"YulIdentifier","src":"4340:2:12"},"nativeSrc":"4340:20:12","nodeType":"YulFunctionCall","src":"4340:20:12"},"nativeSrc":"4337:40:12","nodeType":"YulIf","src":"4337:40:12"},{"nativeSrc":"4386:36:12","nodeType":"YulAssignment","src":"4386:36:12","value":{"arguments":[{"name":"offset","nativeSrc":"4403:6:12","nodeType":"YulIdentifier","src":"4403:6:12"},{"name":"startIndex","nativeSrc":"4411:10:12","nodeType":"YulIdentifier","src":"4411:10:12"}],"functionName":{"name":"add","nativeSrc":"4399:3:12","nodeType":"YulIdentifier","src":"4399:3:12"},"nativeSrc":"4399:23:12","nodeType":"YulFunctionCall","src":"4399:23:12"},"variableNames":[{"name":"offsetOut","nativeSrc":"4386:9:12","nodeType":"YulIdentifier","src":"4386:9:12"}]},{"nativeSrc":"4431:38:12","nodeType":"YulAssignment","src":"4431:38:12","value":{"arguments":[{"name":"endIndex","nativeSrc":"4448:8:12","nodeType":"YulIdentifier","src":"4448:8:12"},{"name":"startIndex","nativeSrc":"4458:10:12","nodeType":"YulIdentifier","src":"4458:10:12"}],"functionName":{"name":"sub","nativeSrc":"4444:3:12","nodeType":"YulIdentifier","src":"4444:3:12"},"nativeSrc":"4444:25:12","nodeType":"YulFunctionCall","src":"4444:25:12"},"variableNames":[{"name":"lengthOut","nativeSrc":"4431:9:12","nodeType":"YulIdentifier","src":"4431:9:12"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"4144:331:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4208:6:12","nodeType":"YulTypedName","src":"4208:6:12","type":""},{"name":"length","nativeSrc":"4216:6:12","nodeType":"YulTypedName","src":"4216:6:12","type":""},{"name":"startIndex","nativeSrc":"4224:10:12","nodeType":"YulTypedName","src":"4224:10:12","type":""},{"name":"endIndex","nativeSrc":"4236:8:12","nodeType":"YulTypedName","src":"4236:8:12","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"4249:9:12","nodeType":"YulTypedName","src":"4249:9:12","type":""},{"name":"lengthOut","nativeSrc":"4260:9:12","nodeType":"YulTypedName","src":"4260:9:12","type":""}],"src":"4144:331:12"},{"body":{"nativeSrc":"4581:273:12","nodeType":"YulBlock","src":"4581:273:12","statements":[{"nativeSrc":"4591:29:12","nodeType":"YulVariableDeclaration","src":"4591:29:12","value":{"arguments":[{"name":"array","nativeSrc":"4614:5:12","nodeType":"YulIdentifier","src":"4614:5:12"}],"functionName":{"name":"calldataload","nativeSrc":"4601:12:12","nodeType":"YulIdentifier","src":"4601:12:12"},"nativeSrc":"4601:19:12","nodeType":"YulFunctionCall","src":"4601:19:12"},"variables":[{"name":"_1","nativeSrc":"4595:2:12","nodeType":"YulTypedName","src":"4595:2:12","type":""}]},{"nativeSrc":"4629:49:12","nodeType":"YulAssignment","src":"4629:49:12","value":{"arguments":[{"name":"_1","nativeSrc":"4642:2:12","nodeType":"YulIdentifier","src":"4642:2:12"},{"arguments":[{"kind":"number","nativeSrc":"4650:26:12","nodeType":"YulLiteral","src":"4650:26:12","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"4646:3:12","nodeType":"YulIdentifier","src":"4646:3:12"},"nativeSrc":"4646:31:12","nodeType":"YulFunctionCall","src":"4646:31:12"}],"functionName":{"name":"and","nativeSrc":"4638:3:12","nodeType":"YulIdentifier","src":"4638:3:12"},"nativeSrc":"4638:40:12","nodeType":"YulFunctionCall","src":"4638:40:12"},"variableNames":[{"name":"value","nativeSrc":"4629:5:12","nodeType":"YulIdentifier","src":"4629:5:12"}]},{"body":{"nativeSrc":"4710:138:12","nodeType":"YulBlock","src":"4710:138:12","statements":[{"nativeSrc":"4724:114:12","nodeType":"YulAssignment","src":"4724:114:12","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"4741:2:12","nodeType":"YulIdentifier","src":"4741:2:12"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4753:1:12","nodeType":"YulLiteral","src":"4753:1:12","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"4760:2:12","nodeType":"YulLiteral","src":"4760:2:12","type":"","value":"20"},{"name":"len","nativeSrc":"4764:3:12","nodeType":"YulIdentifier","src":"4764:3:12"}],"functionName":{"name":"sub","nativeSrc":"4756:3:12","nodeType":"YulIdentifier","src":"4756:3:12"},"nativeSrc":"4756:12:12","nodeType":"YulFunctionCall","src":"4756:12:12"}],"functionName":{"name":"shl","nativeSrc":"4749:3:12","nodeType":"YulIdentifier","src":"4749:3:12"},"nativeSrc":"4749:20:12","nodeType":"YulFunctionCall","src":"4749:20:12"},{"arguments":[{"kind":"number","nativeSrc":"4775:26:12","nodeType":"YulLiteral","src":"4775:26:12","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"4771:3:12","nodeType":"YulIdentifier","src":"4771:3:12"},"nativeSrc":"4771:31:12","nodeType":"YulFunctionCall","src":"4771:31:12"}],"functionName":{"name":"shl","nativeSrc":"4745:3:12","nodeType":"YulIdentifier","src":"4745:3:12"},"nativeSrc":"4745:58:12","nodeType":"YulFunctionCall","src":"4745:58:12"}],"functionName":{"name":"and","nativeSrc":"4737:3:12","nodeType":"YulIdentifier","src":"4737:3:12"},"nativeSrc":"4737:67:12","nodeType":"YulFunctionCall","src":"4737:67:12"},{"arguments":[{"kind":"number","nativeSrc":"4810:26:12","nodeType":"YulLiteral","src":"4810:26:12","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"4806:3:12","nodeType":"YulIdentifier","src":"4806:3:12"},"nativeSrc":"4806:31:12","nodeType":"YulFunctionCall","src":"4806:31:12"}],"functionName":{"name":"and","nativeSrc":"4733:3:12","nodeType":"YulIdentifier","src":"4733:3:12"},"nativeSrc":"4733:105:12","nodeType":"YulFunctionCall","src":"4733:105:12"},"variableNames":[{"name":"value","nativeSrc":"4724:5:12","nodeType":"YulIdentifier","src":"4724:5:12"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"4693:3:12","nodeType":"YulIdentifier","src":"4693:3:12"},{"kind":"number","nativeSrc":"4698:2:12","nodeType":"YulLiteral","src":"4698:2:12","type":"","value":"20"}],"functionName":{"name":"lt","nativeSrc":"4690:2:12","nodeType":"YulIdentifier","src":"4690:2:12"},"nativeSrc":"4690:11:12","nodeType":"YulFunctionCall","src":"4690:11:12"},"nativeSrc":"4687:161:12","nodeType":"YulIf","src":"4687:161:12"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20","nativeSrc":"4480:374:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"4556:5:12","nodeType":"YulTypedName","src":"4556:5:12","type":""},{"name":"len","nativeSrc":"4563:3:12","nodeType":"YulTypedName","src":"4563:3:12","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4571:5:12","nodeType":"YulTypedName","src":"4571:5:12","type":""}],"src":"4480:374:12"},{"body":{"nativeSrc":"4940:103:12","nodeType":"YulBlock","src":"4940:103:12","statements":[{"body":{"nativeSrc":"4986:16:12","nodeType":"YulBlock","src":"4986:16:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4995:1:12","nodeType":"YulLiteral","src":"4995:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"4998:1:12","nodeType":"YulLiteral","src":"4998:1:12","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4988:6:12","nodeType":"YulIdentifier","src":"4988:6:12"},"nativeSrc":"4988:12:12","nodeType":"YulFunctionCall","src":"4988:12:12"},"nativeSrc":"4988:12:12","nodeType":"YulExpressionStatement","src":"4988:12:12"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4961:7:12","nodeType":"YulIdentifier","src":"4961:7:12"},{"name":"headStart","nativeSrc":"4970:9:12","nodeType":"YulIdentifier","src":"4970:9:12"}],"functionName":{"name":"sub","nativeSrc":"4957:3:12","nodeType":"YulIdentifier","src":"4957:3:12"},"nativeSrc":"4957:23:12","nodeType":"YulFunctionCall","src":"4957:23:12"},{"kind":"number","nativeSrc":"4982:2:12","nodeType":"YulLiteral","src":"4982:2:12","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4953:3:12","nodeType":"YulIdentifier","src":"4953:3:12"},"nativeSrc":"4953:32:12","nodeType":"YulFunctionCall","src":"4953:32:12"},"nativeSrc":"4950:52:12","nodeType":"YulIf","src":"4950:52:12"},{"nativeSrc":"5011:26:12","nodeType":"YulAssignment","src":"5011:26:12","value":{"arguments":[{"name":"headStart","nativeSrc":"5027:9:12","nodeType":"YulIdentifier","src":"5027:9:12"}],"functionName":{"name":"mload","nativeSrc":"5021:5:12","nodeType":"YulIdentifier","src":"5021:5:12"},"nativeSrc":"5021:16:12","nodeType":"YulFunctionCall","src":"5021:16:12"},"variableNames":[{"name":"value0","nativeSrc":"5011:6:12","nodeType":"YulIdentifier","src":"5011:6:12"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"4859:184:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4906:9:12","nodeType":"YulTypedName","src":"4906:9:12","type":""},{"name":"dataEnd","nativeSrc":"4917:7:12","nodeType":"YulTypedName","src":"4917:7:12","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4929:6:12","nodeType":"YulTypedName","src":"4929:6:12","type":""}],"src":"4859:184:12"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_struct$_PackedUserOperation_$1395_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 288) { revert(0, 0) }\n        value0 := _1\n        value1 := calldataload(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let length := mload(value0)\n        mstore(add(headStart, 64), length)\n        mcopy(add(headStart, 96), add(value0, 0x20), length)\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n        mstore(add(headStart, 0x20), value1)\n    }\n    function abi_decode_tuple_t_enum$_PostOpMode_$1221t_bytes_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_1, 32)\n        value2 := length\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value3 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 96))\n        value4 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$1194__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20(array, len) -> value\n    {\n        let _1 := calldataload(array)\n        value := and(_1, not(0xffffffffffffffffffffffff))\n        if lt(len, 20)\n        {\n            value := and(and(_1, shl(shl(3, sub(20, len)), not(0xffffffffffffffffffffffff))), not(0xffffffffffffffffffffffff))\n        }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"215":[{"length":32,"start":347},{"length":32,"start":495},{"length":32,"start":1306}]},"linkReferences":{},"object":"608060405260043610610084575f3560e01c80638da5cb5b116100575780638da5cb5b146100fb578063a19f212f1461012b578063b0d691fe1461014a578063dc69c06f1461017d578063f2fde38b146101bb575f5ffd5b80631b3ba1011461008857806352b7512c14610092578063715018a6146100c85780637c627b21146100dc575b5f5ffd5b6100906101da565b005b34801561009d575f5ffd5b506100b16100ac3660046106de565b610289565b6040516100bf92919061072d565b60405180910390f35b3480156100d3575f5ffd5b506100906104f2565b3480156100e7575f5ffd5b506100906100f6366004610769565b610505565b348015610106575f5ffd5b505f546001600160a01b03165b6040516001600160a01b0390911681526020016100bf565b348015610136575f5ffd5b50610090610145366004610818565b610593565b348015610155575f5ffd5b506101137f000000000000000000000000000000000000000000000000000000000000000081565b348015610188575f5ffd5b506101ab610197366004610851565b60016020525f908152604090205460ff1681565b60405190151581526020016100bf565b3480156101c6575f5ffd5b506100906101d5366004610851565b6105f9565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024015f604051808303818588803b15801561023a575f5ffd5b505af115801561024c573d5f5f3e3d5ffd5b50506040513481523393507f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d4749250602001905060405180910390a2565b60605f6102fa6040518061018001604052805f6001600160a01b031681526020015f815260200160608152602001606081526020015f81526020015f81526020015f81526020015f81526020015f815260200160608152602001606081526020015f6001600160a01b031681525090565b6103076020870187610851565b6001600160a01b03168152602080870135908201526103296040870187610871565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250505050604082015261036e6060870187610871565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050505060608201526103b3608087013561063b565b608083015260a08083019190915286013560c0808301919091526103d99087013561063b565b60e0808401919091526101008301919091526103f790870187610871565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050505061012082015261043e610100870187610871565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152505050506101408201526104846060870187610871565b610493916018916004916108bb565b61049c916108e2565b60601c61016082018190525f9081526001602052604090205460ff166104d557604051633bc5944560e11b815260040160405180910390fd5b60405180602001604052805f8152505f9250925050935093915050565b6104fa610663565b6105035f61068f565b565b6040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610567573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061058b919061092f565b505050505050565b61059b610663565b6001600160a01b0382165f81815260016020908152604091829020805460ff191685151590811790915591519182527fe5239967f86bdfebd2052a7d2539a8359f2cdefacfbdeb04bdd72e854c994553910160405180910390a25050565b610601610663565b6001600160a01b03811661062f57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6106388161068f565b50565b5f5f6106478360801c90565b6fffffffffffffffffffffffffffffffff841691509150915091565b5f546001600160a01b031633146105035760405163118cdaa760e01b8152336004820152602401610626565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5f5f606084860312156106f0575f5ffd5b833567ffffffffffffffff811115610706575f5ffd5b84016101208187031215610718575f5ffd5b95602085013595506040909401359392505050565b604081525f83518060408401528060208601606085015e5f606082850101526060601f19601f8301168401019150508260208301529392505050565b5f5f5f5f5f6080868803121561077d575f5ffd5b85356003811061078b575f5ffd5b9450602086013567ffffffffffffffff8111156107a6575f5ffd5b8601601f810188136107b6575f5ffd5b803567ffffffffffffffff8111156107cc575f5ffd5b8860208284010111156107dd575f5ffd5b959860209190910197509495604081013595606090910135945092505050565b80356001600160a01b0381168114610813575f5ffd5b919050565b5f5f60408385031215610829575f5ffd5b610832836107fd565b915060208301358015158114610846575f5ffd5b809150509250929050565b5f60208284031215610861575f5ffd5b61086a826107fd565b9392505050565b5f5f8335601e19843603018112610886575f5ffd5b83018035915067ffffffffffffffff8211156108a0575f5ffd5b6020019150368190038213156108b4575f5ffd5b9250929050565b5f5f858511156108c9575f5ffd5b838611156108d5575f5ffd5b5050820193919092039150565b80356bffffffffffffffffffffffff198116906014841015610928576bffffffffffffffffffffffff196bffffffffffffffffffffffff198560140360031b1b82161691505b5092915050565b5f6020828403121561093f575f5ffd5b505191905056fea2646970667358221220419d1303b682e14a07c1f419656126b2ab582d2f1ba3870b1a956cff30b3347c64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x84 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x57 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xA19F212F EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xDC69C06F EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1B3BA101 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x52B7512C EQ PUSH2 0x92 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x7C627B21 EQ PUSH2 0xDC JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x90 PUSH2 0x1DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP3 SWAP2 SWAP1 PUSH2 0x72D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x4F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x106 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x145 CALLDATASIZE PUSH1 0x4 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x113 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1AB PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x851 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB760FAF9 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP4 POP PUSH32 0x543BA50A5EEC5E6178218E364B1D0F396157B3C8FA278522C2CB7FD99407D474 SWAP3 POP PUSH1 0x20 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x2FA PUSH1 0x40 MLOAD DUP1 PUSH2 0x180 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x307 PUSH1 0x20 DUP8 ADD DUP8 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP8 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH2 0x329 PUSH1 0x40 DUP8 ADD DUP8 PUSH2 0x871 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x36E PUSH1 0x60 DUP8 ADD DUP8 PUSH2 0x871 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x3B3 PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x63B JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 ADD CALLDATALOAD PUSH1 0xC0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x3D9 SWAP1 DUP8 ADD CALLDATALOAD PUSH2 0x63B JUMP JUMPDEST PUSH1 0xE0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x3F7 SWAP1 DUP8 ADD DUP8 PUSH2 0x871 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x43E PUSH2 0x100 DUP8 ADD DUP8 PUSH2 0x871 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP POP PUSH2 0x140 DUP3 ADD MSTORE PUSH2 0x484 PUSH1 0x60 DUP8 ADD DUP8 PUSH2 0x871 JUMP JUMPDEST PUSH2 0x493 SWAP2 PUSH1 0x18 SWAP2 PUSH1 0x4 SWAP2 PUSH2 0x8BB JUMP JUMPDEST PUSH2 0x49C SWAP2 PUSH2 0x8E2 JUMP JUMPDEST PUSH1 0x60 SHR PUSH2 0x160 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3BC59445 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH0 SWAP3 POP SWAP3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4FA PUSH2 0x663 JUMP JUMPDEST PUSH2 0x503 PUSH0 PUSH2 0x68F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x567 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58B SWAP2 SWAP1 PUSH2 0x92F JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x59B PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xE5239967F86BDFEBD2052A7D2539A8359F2CDEFACFBDEB04BDD72E854C994553 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x601 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x638 DUP2 PUSH2 0x68F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x647 DUP4 PUSH1 0x80 SHR SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x706 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x718 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP7 ADD PUSH1 0x60 DUP6 ADD MCOPY PUSH0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x77D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x78B JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x7B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x7DD JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP6 SWAP9 PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP8 POP SWAP5 SWAP6 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP6 PUSH1 0x60 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x813 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x829 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x832 DUP4 PUSH2 0x7FD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x846 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x861 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x86A DUP3 PUSH2 0x7FD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x886 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8A0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x8B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP6 DUP6 GT ISZERO PUSH2 0x8C9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x8D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND SWAP1 PUSH1 0x14 DUP5 LT ISZERO PUSH2 0x928 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP6 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP3 AND AND SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE SWAP14 SGT SUB 0xB6 DUP3 0xE1 BLOBBASEFEE SMOD 0xC1 DELEGATECALL NOT PUSH6 0x6126B2AB582D 0x2F SHL LOG3 DUP8 SIGNEXTEND BYTE SWAP6 PUSH13 0xFF30B3347C64736F6C63430008 SHR STOP CALLER ","sourceMap":"572:3037:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1497:170;;;:::i;:::-;;1767:1261;;;;;;;;;;-1:-1:-1;1767:1261:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;3146:461:2:-;;;;;;;;;;-1:-1:-1;3146:461:2;;;;;:::i;:::-;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;2251:32:12;;;2233:51;;2221:2;2206:18;1638:85:0;2087:203:12;1213:186:2;;;;;;;;;;-1:-1:-1;1213:186:2;;;;;:::i;:::-;;:::i;620:39::-;;;;;;;;;;;;;;;726:48;;;;;;;;;;-1:-1:-1;726:48:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3409:14:12;;3402:22;3384:41;;3372:2;3357:18;726:48:2;3244:187:12;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1497:170:2:-;1555:53;;-1:-1:-1;;;1555:53:2;;1602:4;1555:53;;;2233:51:12;1555:10:2;-1:-1:-1;;;;;1555:20:2;;;;1583:9;;2206:18:12;;1555:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1623:37:2;;1650:9;3582:25:12;;1638:10:2;;-1:-1:-1;1623:37:2;;-1:-1:-1;3570:2:12;3555:18;;-1:-1:-1;1623:37:2;;;;;;;1497:170::o;1767:1261::-;1950:20;1972:22;2006:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2006:27:2;2059:19;;;;:12;:19;:::i;:::-;-1:-1:-1;;;;;2043:35:2;;;2103:18;;;;;2088:12;;;:33;2149:21;;;;2103:12;2149:21;:::i;:::-;2131:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2131:15:2;;;:39;2198:21;;;;:12;:21;:::i;:::-;2180:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2180:15:2;;;:39;2282:59;2311:29;;;;2282:28;:59::i;:::-;2259:19;;;2229:112;2230:27;;;;2229:112;;;;2379:31;;;2351:25;;;;:59;;;;2473:50;;2502:20;;;2473:28;:50::i;:::-;2450:19;;;;2420:103;;;;2421:27;;;2420:103;;;;2559:29;;;;:12;:29;:::i;:::-;2533:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2533:23:2;;;:55;2617:22;;;;:12;:22;:::i;:::-;2598:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2598:16:2;;;:41;2681:21;;;;:12;:21;:::i;:::-;:27;;2705:2;;2703:1;;2681:27;:::i;:::-;2673:36;;;:::i;:::-;2665:45;;2649:13;;;:61;;;2726:31;;;;:16;:31;;;;;;;;2721:89;;2780:19;;-1:-1:-1;;;2780:19:2;;;;;;;;;;;2721:89;3008:9;;;;;;;;;;;;3019:1;3000:21;;;;;1767:1261;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3146:461:2:-;3565:35;;-1:-1:-1;;;3565:35:2;;3594:4;3565:35;;;2233:51:12;3565:10:2;-1:-1:-1;;;;;3565:20:2;;;;2206:18:12;;3565:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3146:461;;;;;:::o;1213:186::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1302:24:2;::::1;;::::0;;;:16:::1;:24;::::0;;;;;;;;:36;;-1:-1:-1;;1302:36:2::1;::::0;::::1;;::::0;;::::1;::::0;;;1353:39;;3384:41:12;;;1353:39:2::1;::::0;3357:18:12;1353:39:2::1;;;;;;;1213:186:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2233:51:12::0;2206:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2408:176:4:-;2482:15;2499:14;2533:21;2547:6;2754:3;2735:22;;2647:117;2533:21;2906:31;;;2525:52;;;;2408:176;;;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;2233:51:12;2206:18;;1901:40:0;2087:203:12;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:581:12:-;130:6;138;146;199:2;187:9;178:7;174:23;170:32;167:52;;;215:1;212;205:12;167:52;255:9;242:23;288:18;280:6;277:30;274:50;;;320:1;317;310:12;274:50;343:22;;399:3;381:16;;;377:26;374:46;;;416:1;413;406:12;374:46;439:2;488;473:18;;460:32;;-1:-1:-1;561:2:12;546:18;;;533:32;;14:581;-1:-1:-1;;;14:581:12:o;600:491::-;775:2;764:9;757:21;738:4;807:6;801:13;850:6;845:2;834:9;830:18;823:34;911:6;904:4;896:6;892:17;887:2;876:9;872:18;866:52;967:1;962:2;953:6;942:9;938:22;934:31;927:42;1037:2;1030;1026:7;1021:2;1013:6;1009:15;1005:29;994:9;990:45;986:54;978:62;;;1078:6;1071:4;1060:9;1056:20;1049:36;600:491;;;;;:::o;1096:986::-;1208:6;1216;1224;1232;1240;1293:3;1281:9;1272:7;1268:23;1264:33;1261:53;;;1310:1;1307;1300:12;1261:53;1349:9;1336:23;1388:1;1381:5;1378:12;1368:40;;1404:1;1401;1394:12;1368:40;1427:5;-1:-1:-1;1483:2:12;1468:18;;1455:32;1510:18;1499:30;;1496:50;;;1542:1;1539;1532:12;1496:50;1565:22;;1618:4;1610:13;;1606:27;-1:-1:-1;1596:55:12;;1647:1;1644;1637:12;1596:55;1687:2;1674:16;1713:18;1705:6;1702:30;1699:50;;;1745:1;1742;1735:12;1699:50;1790:7;1785:2;1776:6;1772:2;1768:15;1764:24;1761:37;1758:57;;;1811:1;1808;1801:12;1758:57;1096:986;;1842:2;1834:11;;;;;-1:-1:-1;1864:6:12;;1943:2;1928:18;;1915:32;;2046:2;2031:18;;;2018:32;;-1:-1:-1;1096:986:12;-1:-1:-1;;;1096:986:12:o;2295:173::-;2363:20;;-1:-1:-1;;;;;2412:31:12;;2402:42;;2392:70;;2458:1;2455;2448:12;2392:70;2295:173;;;:::o;2473:347::-;2538:6;2546;2599:2;2587:9;2578:7;2574:23;2570:32;2567:52;;;2615:1;2612;2605:12;2567:52;2638:29;2657:9;2638:29;:::i;:::-;2628:39;;2717:2;2706:9;2702:18;2689:32;2764:5;2757:13;2750:21;2743:5;2740:32;2730:60;;2786:1;2783;2776:12;2730:60;2809:5;2799:15;;;2473:347;;;;;:::o;3053:186::-;3112:6;3165:2;3153:9;3144:7;3140:23;3136:32;3133:52;;;3181:1;3178;3171:12;3133:52;3204:29;3223:9;3204:29;:::i;:::-;3194:39;3053:186;-1:-1:-1;;;3053:186:12:o;3618:521::-;3695:4;3701:6;3761:11;3748:25;3855:2;3851:7;3840:8;3824:14;3820:29;3816:43;3796:18;3792:68;3782:96;;3874:1;3871;3864:12;3782:96;3901:33;;3953:20;;;-1:-1:-1;3996:18:12;3985:30;;3982:50;;;4028:1;4025;4018:12;3982:50;4061:4;4049:17;;-1:-1:-1;4092:14:12;4088:27;;;4078:38;;4075:58;;;4129:1;4126;4119:12;4075:58;3618:521;;;;;:::o;4144:331::-;4249:9;4260;4302:8;4290:10;4287:24;4284:44;;;4324:1;4321;4314:12;4284:44;4353:6;4343:8;4340:20;4337:40;;;4373:1;4370;4363:12;4337:40;-1:-1:-1;;4399:23:12;;;4444:25;;;;;-1:-1:-1;4144:331:12:o;4480:374::-;4601:19;;-1:-1:-1;;4638:40:12;;;4698:2;4690:11;;4687:161;;;4810:26;4806:31;4775:26;4771:31;4764:3;4760:2;4756:12;4753:1;4749:20;4745:58;4741:2;4737:67;4733:105;4724:114;;4687:161;;4480:374;;;;:::o;4859:184::-;4929:6;4982:2;4970:9;4961:7;4957:23;4953:32;4950:52;;;4998:1;4995;4988:12;4950:52;-1:-1:-1;5021:16:12;;4859:184;-1:-1:-1;4859:184:12:o"},"methodIdentifiers":{"depositToEntryPoint()":"1b3ba101","entryPoint()":"b0d691fe","owner()":"8da5cb5b","postOp(uint8,bytes,uint256,uint256)":"7c627b21","renounceOwnership()":"715018a6","setSupportedTarget(address,bool)":"a19f212f","supportedTargets(address)":"dc69c06f","transferOwnership(address)":"f2fde38b","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedTarget\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"name\":\"TargetSupportChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"depositToEntryPoint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"name\":\"setSupportedTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportedTargets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"packedUserOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"depositToEntryPoint()\":{\"details\":\"Deposits funds into the EntryPoint on behalf of this Paymaster.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"details\":\"The function that the EntryPoint calls after the execution to charge the Paymaster.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setSupportedTarget(address,bool)\":{\"details\":\"Sets whether a target contract is supported for gas sponsorship.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Validates a UserOperation to determine if it should be sponsored.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Paymaster.sol\":\"Paymaster\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Paymaster.sol\":{\"keccak256\":\"0x9b0c94aaf4ca31f74af90f2150040f275e85154b4c01330a8e98c16aa93fb9c7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5e1e51507375fd948b2a64243cc0d8879594dc7ceffb249dd0a90b13af4690f2\",\"dweb:/ipfs/QmXBAJQiHgLKRzXtSTLxeQsh6nhTuWEdAvVZbDfgXneMVm\"]},\"contracts/lib/core/Helpers.sol\":{\"keccak256\":\"0xb310f29da120341cb703a591bc0c94ae2329d391eeb18cf3b9679bbc45da0ece\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://193e652b6cac47388261f61f66f722363b8454c3f884cc2b6d113665f939e0a4\",\"dweb:/ipfs/QmfYJGvTcWGqQipV3cSdxWb5Yuf5UCXMY6QqgLpAsrmQsr\"]},\"contracts/lib/core/UserOperationLib.sol\":{\"keccak256\":\"0x2d3450fa3906422b6fdbbe7f2a2a9e36d6f3751bfa9cd80af88befd6a5be78c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a0ef5295d7f2016e99d2c228958f7f6de94f5bd9652d8696af15af0094a99\",\"dweb:/ipfs/QmVg4fhkZbUB7AopGcaVPmTdvChq7W9ga8fjrc3XaJNTM2\"]},\"contracts/lib/interfaces/IAggregator.sol\":{\"keccak256\":\"0xd59862223f3f946ae2f27aeb21dcefd5871c2033082ab8bee00991bf5adc2ec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2089752bdb69c637606a251d74fdd1f6c86c8004eb20b1017f3aed8817bdbb9\",\"dweb:/ipfs/QmTvCNxn4VFWQGvsKR3jJmEoAkaAnkkBoZUUasqvdQF2pS\"]},\"contracts/lib/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x17386db872e43c625a5b448bba2f8bab23fac44c24d6816d5131c5b6614d4159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b3c7d099969eae9a3f9a9da40d0a253eb322e9c9900ba61e60fb4403b65c3f3\",\"dweb:/ipfs/QmcBxjUmpJocTnWc5ivgvPFACANX651CAz9LjJNcWkCagz\"]},\"contracts/lib/interfaces/INonceManager.sol\":{\"keccak256\":\"0x36d3c27fd64c5ba333ac7ae1f02c4a63411a0413c9073277b135a6e5a29ba88e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://910710c795e905859cbc0a794a6579b53f3de65de034040f084e78cf4c8174f0\",\"dweb:/ipfs/QmcDRaqpMQgpB5APn28xa98Z5wuKHMauwCvbtTxzN7oAJm\"]},\"contracts/lib/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x748fb07cf606d8630853f02b62c52629f11bc38cb4bd2efa7952ff016e2ae9f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4c24e5cae9966f8bede50b1d79f8a8261ad74dc3e5a1bf1f945ff13eb1277d1\",\"dweb:/ipfs/QmeFDsZDganXpQyc39HYtUkdS3XsuxfegteXqMKA6FZ5uL\"]},\"contracts/lib/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0xffc5e46332115ebdada7a8bc8ff9e321ae43ab6258d7e8d7565658b402f32bcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383abd8dc9fcbb1552a3fc8c27474009ecc0a6a890384b1b9da0eb4da7c4cd1a\",\"dweb:/ipfs/QmWR1o5rAqFMXbn1gCUDTa7LB7tEjXjt6HFGK1VrVNU8At\"]},\"contracts/lib/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x9c10ab71a97344d2b8d0469aeac476d69fb2ae50e65c1a548e34ca482c452d6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7d60e99b6f6311a558bf17778dfb8cfa1a287c85fce61c8fdf1b15e3f99939\",\"dweb:/ipfs/QmRX4E2kayv2fYASCGmUAc3MhUsv9hLjM7MQ5LSfaK4hpz\"]},\"contracts/lib/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xe2f47d598c66f1b9e619ff73f768f677bc4244e8a3d3441742a7a5188a3b4053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5159ad9e8ce8642cafd4f3cd77e522036f30478066604eadd11b344f0959029\",\"dweb:/ipfs/QmUXNkJ3bQSCXUqrGKpnnJipywJA1XDgYi6WGrVzznqRzH\"]}},\"version\":1}"}},"contracts/lib/core/UserOperationLib.sol":{"UserOperationLib":{"abi":[{"inputs":[],"name":"PAYMASTER_DATA_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_POSTOP_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_VALIDATION_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a76032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106046575f3560e01c806325093e1b14604a578063b29a8ff4146063578063ede3150214606a575b5f5ffd5b6051602481565b60405190815260200160405180910390f35b6051601481565b605160348156fea26469706673582212201cb2b01fb83ea887fc3fefea87fcaee3e727f048af20ece90e77d2217494dadd64736f6c634300081c0033","opcodes":"PUSH1 0xA7 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x46 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4A JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x63 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x6A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x51 PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x51 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x51 PUSH1 0x34 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xB2 0xB0 0x1F 0xB8 RETURNDATACOPY 0xA8 DUP8 0xFC EXTCODEHASH 0xEF 0xEA DUP8 0xFC 0xAE 0xE3 0xE7 0x27 CREATE BASEFEE 0xAF KECCAK256 0xEC 0xE9 0xE PUSH24 0xD2217494DADD64736F6C634300081C003300000000000000 ","sourceMap":"278:4766:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;278:4766:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PAYMASTER_DATA_OFFSET_655":{"entryPoint":null,"id":655,"parameterSlots":0,"returnSlots":0},"@PAYMASTER_POSTOP_GAS_OFFSET_652":{"entryPoint":null,"id":652,"parameterSlots":0,"returnSlots":0},"@PAYMASTER_VALIDATION_GAS_OFFSET_649":{"entryPoint":null,"id":649,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:201:12","nodeType":"YulBlock","src":"0:201:12","statements":[{"nativeSrc":"6:3:12","nodeType":"YulBlock","src":"6:3:12","statements":[]},{"body":{"nativeSrc":"123:76:12","nodeType":"YulBlock","src":"123:76:12","statements":[{"nativeSrc":"133:26:12","nodeType":"YulAssignment","src":"133:26:12","value":{"arguments":[{"name":"headStart","nativeSrc":"145:9:12","nodeType":"YulIdentifier","src":"145:9:12"},{"kind":"number","nativeSrc":"156:2:12","nodeType":"YulLiteral","src":"156:2:12","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"141:3:12","nodeType":"YulIdentifier","src":"141:3:12"},"nativeSrc":"141:18:12","nodeType":"YulFunctionCall","src":"141:18:12"},"variableNames":[{"name":"tail","nativeSrc":"133:4:12","nodeType":"YulIdentifier","src":"133:4:12"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"175:9:12","nodeType":"YulIdentifier","src":"175:9:12"},{"name":"value0","nativeSrc":"186:6:12","nodeType":"YulIdentifier","src":"186:6:12"}],"functionName":{"name":"mstore","nativeSrc":"168:6:12","nodeType":"YulIdentifier","src":"168:6:12"},"nativeSrc":"168:25:12","nodeType":"YulFunctionCall","src":"168:25:12"},"nativeSrc":"168:25:12","nodeType":"YulExpressionStatement","src":"168:25:12"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nativeSrc":"14:185:12","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"92:9:12","nodeType":"YulTypedName","src":"92:9:12","type":""},{"name":"value0","nativeSrc":"103:6:12","nodeType":"YulTypedName","src":"103:6:12","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"114:4:12","nodeType":"YulTypedName","src":"114:4:12","type":""}],"src":"14:185:12"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":12,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600436106046575f3560e01c806325093e1b14604a578063b29a8ff4146063578063ede3150214606a575b5f5ffd5b6051602481565b60405190815260200160405180910390f35b6051601481565b605160348156fea26469706673582212201cb2b01fb83ea887fc3fefea87fcaee3e727f048af20ece90e77d2217494dadd64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x46 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4A JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x63 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x6A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x51 PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x51 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x51 PUSH1 0x34 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xB2 0xB0 0x1F 0xB8 RETURNDATACOPY 0xA8 DUP8 0xFC EXTCODEHASH 0xEF 0xEA DUP8 0xFC 0xAE 0xE3 0xE7 0x27 CREATE BASEFEE 0xAF KECCAK256 0xEC 0xE9 0xE PUSH24 0xD2217494DADD64736F6C634300081C003300000000000000 ","sourceMap":"278:4766:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;376:56;;430:2;376:56;;;;;168:25:12;;;156:2;141:18;376:56:4;;;;;;;310:60;;368:2;310:60;;438:50;;486:2;438:50;"},"methodIdentifiers":{"PAYMASTER_DATA_OFFSET()":"ede31502","PAYMASTER_POSTOP_GAS_OFFSET()":"25093e1b","PAYMASTER_VALIDATION_GAS_OFFSET()":"b29a8ff4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PAYMASTER_DATA_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_POSTOP_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_VALIDATION_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/core/UserOperationLib.sol\":\"UserOperationLib\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/core/Helpers.sol\":{\"keccak256\":\"0xb310f29da120341cb703a591bc0c94ae2329d391eeb18cf3b9679bbc45da0ece\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://193e652b6cac47388261f61f66f722363b8454c3f884cc2b6d113665f939e0a4\",\"dweb:/ipfs/QmfYJGvTcWGqQipV3cSdxWb5Yuf5UCXMY6QqgLpAsrmQsr\"]},\"contracts/lib/core/UserOperationLib.sol\":{\"keccak256\":\"0x2d3450fa3906422b6fdbbe7f2a2a9e36d6f3751bfa9cd80af88befd6a5be78c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a0ef5295d7f2016e99d2c228958f7f6de94f5bd9652d8696af15af0094a99\",\"dweb:/ipfs/QmVg4fhkZbUB7AopGcaVPmTdvChq7W9ga8fjrc3XaJNTM2\"]},\"contracts/lib/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xe2f47d598c66f1b9e619ff73f768f677bc4244e8a3d3441742a7a5188a3b4053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5159ad9e8ce8642cafd4f3cd77e522036f30478066604eadd11b344f0959029\",\"dweb:/ipfs/QmUXNkJ3bQSCXUqrGKpnnJipywJA1XDgYi6WGrVzznqRzH\"]}},\"version\":1}"}},"contracts/lib/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])":"ae574a43","validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)":"2dd81133","validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"062a422b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- An array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- An array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code to perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"notice\":\"Validate an aggregated signature. Reverts if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Validate the signature of a single userOp. This method should be called by bundler after EntryPointSimulation.simulateValidation() returns the aggregator this account uses. First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/IAggregator.sol\":{\"keccak256\":\"0xd59862223f3f946ae2f27aeb21dcefd5871c2033082ab8bee00991bf5adc2ec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2089752bdb69c637606a251d74fdd1f6c86c8004eb20b1017f3aed8817bdbb9\",\"dweb:/ipfs/QmTvCNxn4VFWQGvsKR3jJmEoAkaAnkkBoZUUasqvdQF2pS\"]},\"contracts/lib/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xe2f47d598c66f1b9e619ff73f768f677bc4244e8a3d3441742a7a5188a3b4053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5159ad9e8ce8642cafd4f3cd77e522036f30478066604eadd11b344f0959029\",\"dweb:/ipfs/QmUXNkJ3bQSCXUqrGKpnnJipywJA1XDgYi6WGrVzznqRzH\"]}},\"version\":1}"}},"contracts/lib/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"ret","type":"bytes"}],"name":"DelegateAndRevert","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"inner","type":"bytes"}],"name":"FailedOpWithRevert","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"UserOperationPrefundTooLow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"delegateAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"senderCreator","outputs":[{"internalType":"contract ISenderCreator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","delegateAndRevert(address,bytes)":"850aaf62","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"22cdde4c","handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)":"dbed18e0","handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)":"765e827f","incrementNonce(uint192)":"0bd28e3b","senderCreator()":"09ccb880","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"name\":\"DelegateAndRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"inner\",\"type\":\"bytes\"}],\"name\":\"FailedOpWithRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"UserOperationPrefundTooLow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderCreator\",\"outputs\":[{\"internalType\":\"contract ISenderCreator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"details\":\"note that inner is truncated to 2048 bytes\",\"params\":{\"inner\":\"- data from inner cought revert reason\",\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. see FailedOp(uint256,string), above\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the reverted call to \\\"postOp\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the reverted \\\"callData\\\" call.\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"delegateAndRevert(address,bytes)\":{\"details\":\"calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace  actual EntryPoint code is less convenient.\",\"params\":{\"data\":\"data to pass to target in a delegatecall\",\"target\":\"a target contract to make a delegatecall from entrypoint\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"},\"returns\":{\"_0\":\"hash the hash of this UserOperation\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"incrementNonce(uint192)\":{\"params\":{\"key\":\"- the \\\"nonce key\\\" to increment the \\\"nonce sequence\\\" for.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op. Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"notice\":\"A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"notice\":\"UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"delegateAndRevert(address,bytes)\":{\"notice\":\"Helper method for dry-run testing.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error.this method cannot be used for EIP-7702 derived contracts.\"},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"senderCreator()\":{\"notice\":\"Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/IAggregator.sol\":{\"keccak256\":\"0xd59862223f3f946ae2f27aeb21dcefd5871c2033082ab8bee00991bf5adc2ec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2089752bdb69c637606a251d74fdd1f6c86c8004eb20b1017f3aed8817bdbb9\",\"dweb:/ipfs/QmTvCNxn4VFWQGvsKR3jJmEoAkaAnkkBoZUUasqvdQF2pS\"]},\"contracts/lib/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x17386db872e43c625a5b448bba2f8bab23fac44c24d6816d5131c5b6614d4159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b3c7d099969eae9a3f9a9da40d0a253eb322e9c9900ba61e60fb4403b65c3f3\",\"dweb:/ipfs/QmcBxjUmpJocTnWc5ivgvPFACANX651CAz9LjJNcWkCagz\"]},\"contracts/lib/interfaces/INonceManager.sol\":{\"keccak256\":\"0x36d3c27fd64c5ba333ac7ae1f02c4a63411a0413c9073277b135a6e5a29ba88e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://910710c795e905859cbc0a794a6579b53f3de65de034040f084e78cf4c8174f0\",\"dweb:/ipfs/QmcDRaqpMQgpB5APn28xa98Z5wuKHMauwCvbtTxzN7oAJm\"]},\"contracts/lib/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0xffc5e46332115ebdada7a8bc8ff9e321ae43ab6258d7e8d7565658b402f32bcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383abd8dc9fcbb1552a3fc8c27474009ecc0a6a890384b1b9da0eb4da7c4cd1a\",\"dweb:/ipfs/QmWR1o5rAqFMXbn1gCUDTa7LB7tEjXjt6HFGK1VrVNU8At\"]},\"contracts/lib/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x9c10ab71a97344d2b8d0469aeac476d69fb2ae50e65c1a548e34ca482c452d6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7d60e99b6f6311a558bf17778dfb8cfa1a287c85fce61c8fdf1b15e3f99939\",\"dweb:/ipfs/QmRX4E2kayv2fYASCGmUAc3MhUsv9hLjM7MQ5LSfaK4hpz\"]},\"contracts/lib/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xe2f47d598c66f1b9e619ff73f768f677bc4244e8a3d3441742a7a5188a3b4053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5159ad9e8ce8642cafd4f3cd77e522036f30478066604eadd11b344f0959029\",\"dweb:/ipfs/QmUXNkJ3bQSCXUqrGKpnnJipywJA1XDgYi6WGrVzznqRzH\"]}},\"version\":1}"}},"contracts/lib/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"incrementNonce(uint192)\":{\"params\":{\"key\":\"- the \\\"nonce key\\\" to increment the \\\"nonce sequence\\\" for.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/INonceManager.sol\":{\"keccak256\":\"0x36d3c27fd64c5ba333ac7ae1f02c4a63411a0413c9073277b135a6e5a29ba88e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://910710c795e905859cbc0a794a6579b53f3de65de034040f084e78cf4c8174f0\",\"dweb:/ipfs/QmcDRaqpMQgpB5APn28xa98Z5wuKHMauwCvbtTxzN7oAJm\"]}},\"version\":1}"}},"contracts/lib/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256,uint256)":"7c627b21","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual cost of gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x748fb07cf606d8630853f02b62c52629f11bc38cb4bd2efa7952ff016e2ae9f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4c24e5cae9966f8bede50b1d79f8a8261ad74dc3e5a1bf1f945ff13eb1277d1\",\"dweb:/ipfs/QmeFDsZDganXpQyc39HYtUkdS3XsuxfegteXqMKA6FZ5uL\"]},\"contracts/lib/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xe2f47d598c66f1b9e619ff73f768f677bc4244e8a3d3441742a7a5188a3b4053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5159ad9e8ce8642cafd4f3cd77e522036f30478066604eadd11b344f0959029\",\"dweb:/ipfs/QmUXNkJ3bQSCXUqrGKpnnJipywJA1XDgYi6WGrVzznqRzH\"]}},\"version\":1}"}},"contracts/lib/interfaces/ISenderCreator.sol":{"ISenderCreator":{"abi":[{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"createSender","outputs":[{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"initCallData","type":"bytes"}],"name":"initEip7702Sender","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"createSender(bytes)":"570e1a36","initEip7702Sender(address,bytes)":"c09ad0d9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"createSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initCallData\",\"type\":\"bytes\"}],\"name\":\"initEip7702Sender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSender(bytes)\":{\"details\":\"Creates a new sender contract.\",\"returns\":{\"sender\":\"Address of the newly created sender contract.\"}},\"initEip7702Sender(address,bytes)\":{\"params\":{\"initCallData\":\"- the call data to be passed to the sender account call.\",\"sender\":\"- the 'sender' EIP-7702 account to be initialized.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initEip7702Sender(address,bytes)\":{\"notice\":\"Use initCallData to initialize an EIP-7702 account. The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account. Note: Can be called multiple times as long as an appropriate initCode is supplied\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/ISenderCreator.sol\":\"ISenderCreator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0xffc5e46332115ebdada7a8bc8ff9e321ae43ab6258d7e8d7565658b402f32bcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383abd8dc9fcbb1552a3fc8c27474009ecc0a6a890384b1b9da0eb4da7c4cd1a\",\"dweb:/ipfs/QmWR1o5rAqFMXbn1gCUDTa7LB7tEjXjt6HFGK1VrVNU8At\"]}},\"version\":1}"}},"contracts/lib/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x9c10ab71a97344d2b8d0469aeac476d69fb2ae50e65c1a548e34ca482c452d6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7d60e99b6f6311a558bf17778dfb8cfa1a287c85fce61c8fdf1b15e3f99939\",\"dweb:/ipfs/QmRX4E2kayv2fYASCGmUAc3MhUsv9hLjM7MQ5LSfaK4hpz\"]}},\"version\":1}"}}}}}