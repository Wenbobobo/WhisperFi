{"id":"4a59d54890b0b30b0de448231d7c713d","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/lib/core/Helpers.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\n/* solhint-disable no-inline-assembly */\r\n\r\n\r\n /*\r\n  * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\r\n  * must return this value in case of signature failure, instead of revert.\r\n  */\r\nuint256 constant SIG_VALIDATION_FAILED = 1;\r\n\r\n\r\n/*\r\n * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\r\n * return this value on success.\r\n */\r\nuint256 constant SIG_VALIDATION_SUCCESS = 0;\r\n\r\n\r\n/**\r\n * Returned data from validateUserOp.\r\n * validateUserOp returns a uint256, which is created by `_packedValidationData` and\r\n * parsed by `_parseValidationData`.\r\n * @param aggregator  - address(0) - The account validated the signature by itself.\r\n *                      address(1) - The account failed to validate the signature.\r\n *                      otherwise - This is an address of a signature aggregator that must\r\n *                                  be used to validate the signature.\r\n * @param validAfter  - This UserOp is valid only after this timestamp.\r\n * @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\r\n */\r\nstruct ValidationData {\r\n    address aggregator;\r\n    uint48 validAfter;\r\n    uint48 validUntil;\r\n}\r\n\r\n/**\r\n * Extract aggregator/sigFailed, validAfter, validUntil.\r\n * Also convert zero validUntil to type(uint48).max.\r\n * @param validationData - The packed validation data.\r\n * @return data - The unpacked in-memory validation data.\r\n */\r\nfunction _parseValidationData(\r\n    uint256 validationData\r\n) pure returns (ValidationData memory data) {\r\n    address aggregator = address(uint160(validationData));\r\n    uint48 validUntil = uint48(validationData >> 160);\r\n    if (validUntil == 0) {\r\n        validUntil = type(uint48).max;\r\n    }\r\n    uint48 validAfter = uint48(validationData >> (48 + 160));\r\n    return ValidationData(aggregator, validAfter, validUntil);\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp.\r\n * @param data - The ValidationData to pack.\r\n * @return the packed validation data.\r\n */\r\nfunction _packValidationData(\r\n    ValidationData memory data\r\n) pure returns (uint256) {\r\n    return\r\n        uint160(data.aggregator) |\r\n        (uint256(data.validUntil) << 160) |\r\n        (uint256(data.validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\r\n * @param sigFailed  - True for signature failure, false for success.\r\n * @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\r\n * @param validAfter - First timestamp this UserOperation is valid.\r\n * @return the packed validation data.\r\n */\r\nfunction _packValidationData(\r\n    bool sigFailed,\r\n    uint48 validUntil,\r\n    uint48 validAfter\r\n) pure returns (uint256) {\r\n    return\r\n        (sigFailed ?  SIG_VALIDATION_FAILED : SIG_VALIDATION_SUCCESS) |\r\n        (uint256(validUntil) << 160) |\r\n        (uint256(validAfter) << (160 + 48));\r\n}\r\n\r\n/**\r\n * keccak function over calldata.\r\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\r\n *\r\n * @param data - the calldata bytes array to perform keccak on.\r\n * @return ret - the keccak hash of the 'data' array.\r\n */\r\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\r\n        assembly (\"memory-safe\") {\r\n            let mem := mload(0x40)\r\n            let len := data.length\r\n            calldatacopy(mem, data.offset, len)\r\n            ret := keccak256(mem, len)\r\n        }\r\n    }\r\n\r\n\r\n/**\r\n * The minimum of two numbers.\r\n * @param a - First number.\r\n * @param b - Second number.\r\n * @return - the minimum value.\r\n */\r\n    function min(uint256 a, uint256 b) pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n/**\r\n * standard solidity memory allocation finalization.\r\n * copied from solidity generated code\r\n * @param memPointer - The current memory pointer\r\n * @param allocationSize - Bytes allocated from memPointer.\r\n */\r\n    function finalizeAllocation(uint256 memPointer, uint256 allocationSize) pure {\r\n\r\n        assembly (\"memory-safe\"){\r\n            finalize_allocation(memPointer, allocationSize)\r\n\r\n            function finalize_allocation(memPtr, size) {\r\n                let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\r\n                mstore(64, newFreePtr)\r\n            }\r\n\r\n            function round_up_to_mul_of_32(value) -> result {\r\n                result := and(add(value, 31), not(31))\r\n            }\r\n        }\r\n    }\r\n"},"contracts/lib/core/UserOperationLib.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/* solhint-disable no-inline-assembly */\n\nimport \"../interfaces/PackedUserOperation.sol\";\nimport {calldataKeccak, min} from \"./Helpers.sol\";\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    uint256 public constant PAYMASTER_VALIDATION_GAS_OFFSET = 20;\n    uint256 public constant PAYMASTER_POSTOP_GAS_OFFSET = 36;\n    uint256 public constant PAYMASTER_DATA_OFFSET = 52;\n\n    /**\n     * Relayer/block builder might submit the TX with higher priorityFee,\n     * but the user should not pay above what he signed for.\n     * @param userOp - The user operation data.\n     */\n    function gasPrice(\n        PackedUserOperation calldata userOp\n    ) internal view returns (uint256) {\n        unchecked {\n            (uint256 maxPriorityFeePerGas, uint256 maxFeePerGas) = unpackUints(userOp.gasFees);\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n        }\n    }\n\n    bytes32 internal constant PACKED_USEROP_TYPEHASH =\n    keccak256(\n        \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\"\n    );\n\n    /**\n     * Pack the user operation data into bytes for hashing.\n     * @param userOp - The user operation data.\n     * @param overrideInitCodeHash - If set, encode this instead of the initCode field in the userOp.\n     */\n    function encode(\n        PackedUserOperation calldata userOp,\n        bytes32 overrideInitCodeHash\n    ) internal pure returns (bytes memory ret) {\n        address sender = userOp.sender;\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = overrideInitCodeHash != 0 ? overrideInitCodeHash : calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        bytes32 accountGasLimits = userOp.accountGasLimits;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        bytes32 gasFees = userOp.gasFees;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            UserOperationLib.PACKED_USEROP_TYPEHASH,\n            sender, nonce,\n            hashInitCode, hashCallData,\n            accountGasLimits, preVerificationGas, gasFees,\n            hashPaymasterAndData\n        );\n    }\n\n    function unpackUints(\n        bytes32 packed\n    ) internal pure returns (uint256 high128, uint256 low128) {\n        return (unpackHigh128(packed), unpackLow128(packed));\n    }\n\n    // Unpack just the high 128-bits from a packed value\n    function unpackHigh128(bytes32 packed) internal pure returns (uint256) {\n        return uint256(packed) >> 128;\n    }\n\n    // Unpack just the low 128-bits from a packed value\n    function unpackLow128(bytes32 packed) internal pure returns (uint256) {\n        return uint128(uint256(packed));\n    }\n\n    function unpackMaxPriorityFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.gasFees);\n    }\n\n    function unpackMaxFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.gasFees);\n    }\n\n    function unpackVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.accountGasLimits);\n    }\n\n    function unpackCallGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.accountGasLimits);\n    }\n\n    function unpackPaymasterVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET]));\n    }\n\n    function unpackPostOpGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]));\n    }\n\n    function unpackPaymasterStaticFields(\n        bytes calldata paymasterAndData\n    ) internal pure returns (address paymaster, uint256 validationGasLimit, uint256 postOpGasLimit) {\n        return (\n            address(bytes20(paymasterAndData[: PAYMASTER_VALIDATION_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]))\n        );\n    }\n\n    /**\n     * Hash the user operation data.\n     * @param userOp - The user operation data.\n     * @param overrideInitCodeHash - If set, the initCode hash will be replaced with this value just for UserOp hashing.\n     */\n    function hash(\n        PackedUserOperation calldata userOp,\n        bytes32 overrideInitCodeHash\n    ) internal pure returns (bytes32) {\n        return keccak256(encode(userOp, overrideInitCodeHash));\n    }\n}\n"},"contracts/lib/interfaces/IAccount.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"./PackedUserOperation.sol\";\r\n\r\ninterface IAccount {\r\n    /**\r\n     * Validate user's signature and nonce\r\n     * the entryPoint will make the call to the recipient only if this validation call returns successfully.\r\n     * signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\r\n     * This allows making a \"simulation call\" without a valid signature\r\n     * Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\r\n     *\r\n     * @dev Must validate caller is the entryPoint.\r\n     *      Must validate the signature and nonce\r\n     * @param userOp              - The operation that is about to be executed.\r\n     * @param userOpHash          - Hash of the user's request data. can be used as the basis for signature.\r\n     * @param missingAccountFunds - Missing funds on the account's deposit in the entrypoint.\r\n     *                              This is the minimum amount to transfer to the sender(entryPoint) to be\r\n     *                              able to make the call. The excess is left as a deposit in the entrypoint\r\n     *                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".\r\n     *                              In case there is a paymaster in the request (or the current deposit is high\r\n     *                              enough), this value will be zero.\r\n     * @return validationData       - Packaged ValidationData structure. use `_packValidationData` and\r\n     *                              `_unpackValidationData` to encode and decode.\r\n     *                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\r\n     *                                 otherwise, an address of an \"aggregator\" contract.\r\n     *                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\r\n     *                              <6-byte> validAfter - First timestamp this operation is valid\r\n     *                                                    If an account doesn't use time-range, it is enough to\r\n     *                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.\r\n     *                              Note that the validation code cannot use block.timestamp (or block.number) directly.\r\n     */\r\n    function validateUserOp(\r\n        PackedUserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 missingAccountFunds\r\n    ) external returns (uint256 validationData);\r\n}\r\n"},"contracts/lib/interfaces/IAccountExecute.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"./PackedUserOperation.sol\";\r\n\r\ninterface IAccountExecute {\r\n    /**\r\n     * Account may implement this execute method.\r\n     * passing this methodSig at the beginning of callData will cause the entryPoint to pass the full UserOp (and hash)\r\n     * to the account.\r\n     * The account should skip the methodSig, and use the callData (and optionally, other UserOp fields)\r\n     *\r\n     * @param userOp              - The operation that was just validated.\r\n     * @param userOpHash          - Hash of the user's request data.\r\n     */\r\n    function executeUserOp(\r\n        PackedUserOperation calldata userOp,\r\n        bytes32 userOpHash\r\n    ) external;\r\n}\r\n"},"contracts/lib/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"./PackedUserOperation.sol\";\r\n\r\n/**\r\n * Aggregated Signatures validator.\r\n */\r\ninterface IAggregator {\r\n    /**\r\n     * Validate an aggregated signature.\r\n     * Reverts if the aggregated signature does not match the given list of operations.\r\n     * @param userOps   - An array of UserOperations to validate the signature for.\r\n     * @param signature - The aggregated signature.\r\n     */\r\n    function validateSignatures(\r\n        PackedUserOperation[] calldata userOps,\r\n        bytes calldata signature\r\n    ) external;\r\n\r\n    /**\r\n     * Validate the signature of a single userOp.\r\n     * This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\r\n     * the aggregator this account uses.\r\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\r\n     * @param userOp        - The userOperation received from the user.\r\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\r\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\r\n     */\r\n    function validateUserOpSignature(\r\n        PackedUserOperation calldata userOp\r\n    ) external view returns (bytes memory sigForUserOp);\r\n\r\n    /**\r\n     * Aggregate multiple signatures into a single value.\r\n     * This method is called off-chain to calculate the signature to pass with handleOps()\r\n     * bundler MAY use optimized custom code to perform this aggregation.\r\n     * @param userOps              - An array of UserOperations to collect the signatures from.\r\n     * @return aggregatedSignature - The aggregated signature.\r\n     */\r\n    function aggregateSignatures(\r\n        PackedUserOperation[] calldata userOps\r\n    ) external view returns (bytes memory aggregatedSignature);\r\n}\r\n"},"contracts/lib/interfaces/IEntryPoint.sol":{"content":"/**\r\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\r\n ** Only one instance required on each chain.\r\n **/\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\n/* solhint-disable avoid-low-level-calls */\r\n/* solhint-disable no-inline-assembly */\r\n/* solhint-disable reason-string */\r\n\r\nimport \"./PackedUserOperation.sol\";\r\nimport \"./IStakeManager.sol\";\r\nimport \"./IAggregator.sol\";\r\nimport \"./INonceManager.sol\";\r\nimport \"./ISenderCreator.sol\";\r\n\r\ninterface IEntryPoint is IStakeManager, INonceManager {\r\n    /***\r\n     * An event emitted after each successful request.\r\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\r\n     * @param sender        - The account that generates this request.\r\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\r\n     * @param nonce         - The nonce value from the request.\r\n     * @param success       - True if the sender transaction succeeded, false if reverted.\r\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\r\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\r\n     *                        validation and execution).\r\n     */\r\n    event UserOperationEvent(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address indexed paymaster,\r\n        uint256 nonce,\r\n        bool success,\r\n        uint256 actualGasCost,\r\n        uint256 actualGasUsed\r\n    );\r\n\r\n    /**\r\n     * Account \"sender\" was deployed.\r\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\r\n     * @param sender     - The account that is deployed\r\n     * @param factory    - The factory used to deploy this account (in the initCode)\r\n     * @param paymaster  - The paymaster used by this UserOp\r\n     */\r\n    event AccountDeployed(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address factory,\r\n        address paymaster\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the reverted \"callData\" call.\r\n     */\r\n    event UserOperationRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     * @param revertReason - The return bytes from the reverted call to \"postOp\".\r\n     */\r\n    event PostOpRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\r\n     * @param userOpHash   - The request unique identifier.\r\n     * @param sender       - The sender of this request.\r\n     * @param nonce        - The nonce used in the request.\r\n     */\r\n    event UserOperationPrefundTooLow(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce\r\n    );\r\n\r\n    /**\r\n     * An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop.\r\n     * Any event emitted before this event, is part of the validation.\r\n     */\r\n    event BeforeExecution();\r\n\r\n    /**\r\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\r\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\r\n     */\r\n    event SignatureAggregatorChanged(address indexed aggregator);\r\n\r\n    /**\r\n     * A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op.\r\n     * Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain.\r\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\r\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\r\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\r\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\r\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\r\n     *                  so a failure can be attributed to the correct entity.\r\n     */\r\n    error FailedOp(uint256 opIndex, string reason);\r\n\r\n    /**\r\n     * A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\r\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\r\n     * @param reason  - Revert reason. see FailedOp(uint256,string), above\r\n     * @param inner   - data from inner cought revert reason\r\n     * @dev note that inner is truncated to 2048 bytes\r\n     */\r\n    error FailedOpWithRevert(uint256 opIndex, string reason, bytes inner);\r\n\r\n    error PostOpReverted(bytes returnData);\r\n\r\n    /**\r\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\r\n     * @param aggregator The aggregator that failed to verify the signature\r\n     */\r\n    error SignatureValidationFailed(address aggregator);\r\n\r\n    // Return value of getSenderAddress.\r\n    error SenderAddressResult(address sender);\r\n\r\n    // UserOps handled, per aggregator.\r\n    struct UserOpsPerAggregator {\r\n        PackedUserOperation[] userOps;\r\n        // Aggregator address\r\n        IAggregator aggregator;\r\n        // Aggregated signature\r\n        bytes signature;\r\n    }\r\n\r\n    /**\r\n     * Execute a batch of UserOperations.\r\n     * No signature aggregator is used.\r\n     * If any account requires an aggregator (that is, it returned an aggregator when\r\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\r\n     * @param ops         - The operations to execute.\r\n     * @param beneficiary - The address to receive the fees.\r\n     */\r\n    function handleOps(\r\n        PackedUserOperation[] calldata ops,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Execute a batch of UserOperation with Aggregators\r\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\r\n     * @param beneficiary      - The address to receive the fees.\r\n     */\r\n    function handleAggregatedOps(\r\n        UserOpsPerAggregator[] calldata opsPerAggregator,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Generate a request Id - unique identifier for this request.\r\n     * The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\r\n     * @param userOp - The user operation to generate the request ID for.\r\n     * @return hash the hash of this UserOperation\r\n     */\r\n    function getUserOpHash(\r\n        PackedUserOperation calldata userOp\r\n    ) external view returns (bytes32);\r\n\r\n    /**\r\n     * Gas and return values during simulation.\r\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\r\n     * @param prefund          - The required prefund for this operation\r\n     * @param accountValidationData   - returned validationData from account.\r\n     * @param paymasterValidationData - return validationData from paymaster.\r\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\r\n     */\r\n    struct ReturnInfo {\r\n        uint256 preOpGas;\r\n        uint256 prefund;\r\n        uint256 accountValidationData;\r\n        uint256 paymasterValidationData;\r\n        bytes paymasterContext;\r\n    }\r\n\r\n    /**\r\n     * Get counterfactual sender address.\r\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\r\n     * This method always revert, and returns the address in SenderAddressResult error.\r\n     * @notice this method cannot be used for EIP-7702 derived contracts.\r\n     *\r\n     * @param initCode - The constructor code to be passed into the UserOperation.\r\n     */\r\n    function getSenderAddress(bytes memory initCode) external;\r\n\r\n    error DelegateAndRevert(bool success, bytes ret);\r\n\r\n    /**\r\n     * Helper method for dry-run testing.\r\n     * @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\r\n     *  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\r\n     *  actual EntryPoint code is less convenient.\r\n     * @param target a target contract to make a delegatecall from entrypoint\r\n     * @param data data to pass to target in a delegatecall\r\n     */\r\n    function delegateAndRevert(address target, bytes calldata data) external;\r\n\r\n    /**\r\n     * @notice Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts.\r\n     */\r\n    function senderCreator() external view returns (ISenderCreator);\r\n}\r\n"},"contracts/lib/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\ninterface INonceManager {\r\n\r\n    /**\r\n     * Return the next nonce for this sender.\r\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\r\n     * But UserOp with different keys can come with arbitrary order.\r\n     *\r\n     * @param sender the account address\r\n     * @param key the high 192 bit of the nonce\r\n     * @return nonce a full nonce to pass for next UserOp with this sender.\r\n     */\r\n    function getNonce(address sender, uint192 key)\r\n    external view returns (uint256 nonce);\r\n\r\n    /**\r\n     * Manually increment the nonce of the sender.\r\n     * This method is exposed just for completeness..\r\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\r\n     * as the EntryPoint will update the nonce regardless.\r\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\r\n     * UserOperations will not pay extra for the first transaction with a given key.\r\n     *\r\n     * @param key - the \"nonce key\" to increment the \"nonce sequence\" for.\r\n     */\r\n    function incrementNonce(uint192 key) external;\r\n}\r\n"},"contracts/lib/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\nimport \"./PackedUserOperation.sol\";\r\n\r\n/**\r\n * The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\r\n * A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\r\n */\r\ninterface IPaymaster {\r\n    enum PostOpMode {\r\n        // User op succeeded.\r\n        opSucceeded,\r\n        // User op reverted. Still has to pay for gas.\r\n        opReverted,\r\n        // Only used internally in the EntryPoint (cleanup after postOp reverts). Never calling paymaster with this value\r\n        postOpReverted\r\n    }\r\n\r\n    /**\r\n     * Payment validation: check if paymaster agrees to pay.\r\n     * Must verify sender is the entryPoint.\r\n     * Revert to reject this request.\r\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\r\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\r\n     * @param userOp          - The user operation.\r\n     * @param userOpHash      - Hash of the user's request data.\r\n     * @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\r\n     * @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\r\n     * @return validationData - Signature and time-range of this operation, encoded the same as the return\r\n     *                          value of validateUserOperation.\r\n     *                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\r\n     *                                                    other values are invalid for paymaster.\r\n     *                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\r\n     *                          <6-byte> validAfter - first timestamp this operation is valid\r\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\r\n     */\r\n    function validatePaymasterUserOp(\r\n        PackedUserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 maxCost\r\n    ) external returns (bytes memory context, uint256 validationData);\r\n\r\n    /**\r\n     * Post-operation handler.\r\n     * Must verify sender is the entryPoint.\r\n     * @param mode          - Enum with the following options:\r\n     *                        opSucceeded - User operation succeeded.\r\n     *                        opReverted  - User op reverted. The paymaster still has to pay for gas.\r\n     *                        postOpReverted - never passed in a call to postOp().\r\n     * @param context       - The context value returned by validatePaymasterUserOp\r\n     * @param actualGasCost - Actual cost of gas used so far (without this postOp call).\r\n     * @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\r\n     *                        and maxPriorityFee (and basefee)\r\n     *                        It is not the same as tx.gasprice, which is what the bundler pays.\r\n     */\r\n    function postOp(\r\n        PostOpMode mode,\r\n        bytes calldata context,\r\n        uint256 actualGasCost,\r\n        uint256 actualUserOpFeePerGas\r\n    ) external;\r\n}\r\n"},"contracts/lib/interfaces/ISenderCreator.sol":{"content":"\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\ninterface ISenderCreator {\r\n    /**\r\n     * @dev Creates a new sender contract.\r\n     * @return sender Address of the newly created sender contract.\r\n     */\r\n    function createSender(bytes calldata initCode) external returns (address sender);\r\n\r\n    /**\r\n     * Use initCallData to initialize an EIP-7702 account.\r\n     * The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account.\r\n     * Note: Can be called multiple times as long as an appropriate initCode is supplied\r\n     *\r\n     * @param sender - the 'sender' EIP-7702 account to be initialized.\r\n     * @param initCallData - the call data to be passed to the sender account call.\r\n     */\r\n    function initEip7702Sender(address sender, bytes calldata initCallData) external;\r\n}\r\n"},"contracts/lib/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\n/**\r\n * Manage deposits and stakes.\r\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\r\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\r\n */\r\ninterface IStakeManager {\r\n    event Deposited(address indexed account, uint256 totalDeposit);\r\n\r\n    event Withdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    // Emitted when stake or unstake delay are modified.\r\n    event StakeLocked(\r\n        address indexed account,\r\n        uint256 totalStaked,\r\n        uint256 unstakeDelaySec\r\n    );\r\n\r\n    // Emitted once a stake is scheduled for withdrawal.\r\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\r\n\r\n    event StakeWithdrawn(\r\n        address indexed account,\r\n        address withdrawAddress,\r\n        uint256 amount\r\n    );\r\n\r\n    /**\r\n     * @param deposit         - The entity's deposit.\r\n     * @param staked          - True if this entity is staked.\r\n     * @param stake           - Actual amount of ether staked for this entity.\r\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\r\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\r\n     * @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\r\n     *      and the rest fit into a 2nd cell (used during stake/unstake)\r\n     *      - 112 bit allows for 10^15 eth\r\n     *      - 48 bit for full timestamp\r\n     *      - 32 bit allows 150 years for unstake delay\r\n     */\r\n    struct DepositInfo {\r\n        uint256 deposit;\r\n        bool staked;\r\n        uint112 stake;\r\n        uint32 unstakeDelaySec;\r\n        uint48 withdrawTime;\r\n    }\r\n\r\n    // API struct used by getStakeInfo and simulateValidation.\r\n    struct StakeInfo {\r\n        uint256 stake;\r\n        uint256 unstakeDelaySec;\r\n    }\r\n\r\n    /**\r\n     * Get deposit info.\r\n     * @param account - The account to query.\r\n     * @return info   - Full deposit information of given account.\r\n     */\r\n    function getDepositInfo(\r\n        address account\r\n    ) external view returns (DepositInfo memory info);\r\n\r\n    /**\r\n     * Get account balance.\r\n     * @param account - The account to query.\r\n     * @return        - The deposit (for gas payment) of the account.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * Add to the deposit of the given account.\r\n     * @param account - The account to add to.\r\n     */\r\n    function depositTo(address account) external payable;\r\n\r\n    /**\r\n     * Add to the account's stake - amount and delay\r\n     * any pending unstake is first cancelled.\r\n     * @param unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\r\n     */\r\n    function addStake(uint32 unstakeDelaySec) external payable;\r\n\r\n    /**\r\n     * Attempt to unlock the stake.\r\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\r\n     */\r\n    function unlockStake() external;\r\n\r\n    /**\r\n     * Withdraw from the (unlocked) stake.\r\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     */\r\n    function withdrawStake(address payable withdrawAddress) external;\r\n\r\n    /**\r\n     * Withdraw from the deposit.\r\n     * @param withdrawAddress - The address to send withdrawn value.\r\n     * @param withdrawAmount  - The amount to withdraw.\r\n     */\r\n    function withdrawTo(\r\n        address payable withdrawAddress,\r\n        uint256 withdrawAmount\r\n    ) external;\r\n}\r\n"},"contracts/lib/interfaces/PackedUserOperation.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.28;\r\n\r\n/**\r\n * User Operation struct\r\n * @param sender                - The sender account of this request.\r\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\r\n * @param initCode              - If set, the account contract will be created by this constructor\r\n * @param callData              - The method call to execute on this account.\r\n * @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\r\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\r\n *                                Covers batch overhead.\r\n * @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\r\n * @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\r\n *                                The paymaster will pay for the transaction instead of the sender.\r\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\r\n */\r\nstruct PackedUserOperation {\r\n    address sender;\r\n    uint256 nonce;\r\n    bytes initCode;\r\n    bytes callData;\r\n    bytes32 accountGasLimits;\r\n    uint256 preVerificationGas;\r\n    bytes32 gasFees;\r\n    bytes paymasterAndData;\r\n    bytes signature;\r\n}\r\n"},"contracts/Paymaster.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.24;\n\nimport \"./lib/interfaces/IPaymaster.sol\";\nimport \"./lib/interfaces/IEntryPoint.sol\";\nimport \"./lib/core/UserOperationLib.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Paymaster is IPaymaster, Ownable {\n    using UserOperationLib for PackedUserOperation;\n\n    IEntryPoint public immutable entryPoint;\n    \n    // A mapping to whitelist specific target contracts\n    mapping(address => bool) public supportedTargets;\n\n    // Custom errors for gas efficiency\n    error UnsupportedTarget();\n    error InvalidPaymasterAndDataLength();\n    error InvalidTimestamp();\n\n    event TargetSupportChanged(address indexed target, bool supported);\n    event FundsDeposited(address indexed depositor, uint256 amount);\n\n    constructor(address _entryPoint, address _owner) Ownable(_owner) {\n        entryPoint = IEntryPoint(_entryPoint);\n    }\n\n    /**\n     * @dev Sets whether a target contract is supported for gas sponsorship.\n     */\n    function setSupportedTarget(address target, bool supported) external onlyOwner {\n        supportedTargets[target] = supported;\n        emit TargetSupportChanged(target, supported);\n    }\n\n    /**\n     * @dev Deposits funds into the EntryPoint on behalf of this Paymaster.\n     */\n    function depositToEntryPoint() external payable {\n        entryPoint.depositTo{value: msg.value}(address(this));\n        emit FundsDeposited(msg.sender, msg.value);\n    }\n\n    /**\n     * @dev Validates a UserOperation to determine if it should be sponsored.\n     */\n    function validatePaymasterUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 /* userOpHash */,\n        uint256 /* maxCost */\n    ) external view override returns (bytes memory context, uint256 validationData) {\n        // Extract paymaster fields from paymasterAndData\n        (address paymaster, uint256 validationGasLimit, uint256 postOpGasLimit) = \n            UserOperationLib.unpackPaymasterStaticFields(userOp.paymasterAndData);\n\n        // Ensure the paymaster in the data is this contract\n        require(paymaster == address(this), \"AA93 invalid paymasterAndData\");\n\n        // Extract target from callData (assuming it's encoded as target + data)\n        address target = _extractTargetFromCallData(userOp.callData);\n        \n        // Check if target is supported\n        require(supportedTargets[target], \"Paymaster: target not supported\");\n\n        // Extract time validation data from paymasterAndData\n        (uint48 validUntil, uint48 validAfter) = _extractTimeValidation(userOp.paymasterAndData);\n\n        // Validate time range\n        require(block.timestamp >= validAfter, \"Paymaster: too early\");\n        require(block.timestamp <= validUntil, \"Paymaster: too late\");\n        \n        // Pack validation data\n        validationData = _packValidationData(false, validUntil, validAfter);\n\n        // Return empty context for this simple paymaster\n        return (\"\", validationData);\n    }\n\n    /**\n     * @dev The function that the EntryPoint calls after the execution to charge the Paymaster.\n     */\n    function postOp(\n        PostOpMode /* mode */,\n        bytes calldata /* context */,\n        uint256 /* actualGasCost */,\n        uint256 /* actualUserOpFeePerGas */\n    ) external override {\n        // For this simple paymaster, we don't need to do anything in postOp\n        // The EntryPoint has already deducted the gas cost from our deposit\n    }\n\n    /**\n     * @dev Helper function to extract target address from callData.\n     * Assumes callData format: target(20 bytes) + function call data\n     */\n    function _extractTargetFromCallData(bytes calldata callData) internal pure returns (address) {\n        require(callData.length >= 20, \"Paymaster: invalid callData length\");\n        return address(bytes20(callData[0:20]));\n    }\n\n    /**\n     * @dev Extract time validation data from paymasterAndData.\n     * Format after static fields: validUntil(6 bytes) + validAfter(6 bytes)\n     */\n    function _extractTimeValidation(bytes calldata paymasterAndData) internal pure returns (uint48 validUntil, uint48 validAfter) {\n        require(paymasterAndData.length >= UserOperationLib.PAYMASTER_DATA_OFFSET + 12, \"Paymaster: invalid time data\");\n        \n        validUntil = uint48(bytes6(paymasterAndData[UserOperationLib.PAYMASTER_DATA_OFFSET:UserOperationLib.PAYMASTER_DATA_OFFSET + 6]));\n        validAfter = uint48(bytes6(paymasterAndData[UserOperationLib.PAYMASTER_DATA_OFFSET + 6:UserOperationLib.PAYMASTER_DATA_OFFSET + 12]));\n    }\n\n    /**\n     * @dev Pack validation data according to ERC-4337 standard.\n     */\n    function _packValidationData(bool sigFailed, uint48 validUntil, uint48 validAfter) internal pure returns (uint256) {\n        return uint256(validUntil) << 48 | uint256(validAfter) << 96 | (sigFailed ? 1 : 0) << 144;\n    }\n\n    /**\n     * @dev Create paymasterAndData for a UserOperation.\n     */\n    function createPaymasterAndData(\n        uint256 verificationGasLimit,\n        uint256 postOpGasLimit,\n        uint48 validUntil,\n        uint48 validAfter\n    ) external view returns (bytes memory) {\n        return abi.encodePacked(\n            address(this),                    // paymaster address (20 bytes)\n            uint128(verificationGasLimit),    // verification gas limit (16 bytes)\n            uint128(postOpGasLimit),          // post-op gas limit (16 bytes)\n            validUntil,                       // valid until (6 bytes)\n            validAfter                        // valid after (6 bytes)\n        );\n    }\n}"},"contracts/TestAccount.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.24;\r\n\r\nimport \"./lib/interfaces/IAccount.sol\";\r\nimport \"./lib/interfaces/IAccountExecute.sol\";\r\nimport \"./lib/interfaces/IEntryPoint.sol\";\r\nimport \"./lib/core/UserOperationLib.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\r\n\r\ncontract TestAccount is IAccount, IAccountExecute {\r\n    using ECDSA for bytes32;\r\n    using MessageHashUtils for bytes32;\r\n\r\n    IEntryPoint public immutable entryPoint;\r\n    address public owner;\r\n\r\n    event AccountInitialized(IEntryPoint indexed entryPoint, address indexed owner);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"account: not Owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyEntryPoint() {\r\n        require(msg.sender == address(entryPoint), \"account: not EntryPoint\");\r\n        _;\r\n    }\r\n\r\n    constructor(IEntryPoint _entryPoint, address _owner) {\r\n        entryPoint = _entryPoint;\r\n        owner = _owner;\r\n        emit AccountInitialized(_entryPoint, _owner);\r\n    }\r\n\r\n    /// @inheritdoc IAccount\r\n    function validateUserOp(\r\n        PackedUserOperation calldata userOp,\r\n        bytes32 userOpHash,\r\n        uint256 missingAccountFunds\r\n    ) external override onlyEntryPoint returns (uint256 validationData) {\r\n        validationData = _validateSignature(userOp, userOpHash);\r\n        if (missingAccountFunds > 0) {\r\n            (bool success,) = payable(msg.sender).call{value: missingAccountFunds}(\"\");\r\n            require(success, \"account: failed to fund EntryPoint\");\r\n        }\r\n    }\r\n\r\n    /// @inheritdoc IAccountExecute\r\n    function executeUserOp(\r\n        PackedUserOperation calldata userOp,\r\n        bytes32 userOpHash\r\n    ) external override onlyEntryPoint {\r\n        _executeUserOp(userOp.callData);\r\n    }\r\n\r\n    function _validateSignature(\r\n        PackedUserOperation calldata userOp,\r\n        bytes32 userOpHash\r\n    ) internal view returns (uint256 validationData) {\r\n        bytes32 hash = userOpHash.toEthSignedMessageHash();\r\n        address recovered = hash.recover(userOp.signature);\r\n        if (recovered != owner) {\r\n            return 1; // Invalid signature\r\n        }\r\n        return 0; // Valid signature\r\n    }\r\n\r\n    function _executeUserOp(bytes calldata callData) internal {\r\n        if (callData.length == 0) {\r\n            return;\r\n        }\r\n\r\n        // Extract target address and call data\r\n        address target = address(bytes20(callData[0:20]));\r\n        bytes calldata data = callData[20:];\r\n\r\n        (bool success, bytes memory result) = target.call(data);\r\n        if (!success) {\r\n            if (result.length == 0) {\r\n                revert(\"account: call reverted\");\r\n            }\r\n            assembly {\r\n                revert(add(result, 32), mload(result))\r\n            }\r\n        }\r\n    }\r\n\r\n    // Allow the account to receive ETH\r\n    receive() external payable {}\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/Paymaster.sol:54:29:\n   |\n54 |         (address paymaster, uint256 validationGasLimit, uint256 postOpGasLimit) = \n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":1908,"file":"contracts/Paymaster.sol","start":1882},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n  --> contracts/Paymaster.sol:54:57:\n   |\n54 |         (address paymaster, uint256 validationGasLimit, uint256 postOpGasLimit) = \n   |                                                         ^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":1932,"file":"contracts/Paymaster.sol","start":1910},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/TestAccount.sol:52:9:\n   |\n52 |         bytes32 userOpHash\n   |         ^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":1771,"file":"contracts/TestAccount.sol","start":1753},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[177],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":178,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,177],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"127:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"718:34:1","statements":[{"expression":{"expression":{"id":155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:1","memberName":"sender","nodeType":"MemberAccess","src":"735:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":157,"nodeType":"Return","src":"728:17:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"675:2:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"709:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:1"},"scope":177,"src":"656:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"825:32:1","statements":[{"expression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:1","memberName":"data","nodeType":"MemberAccess","src":"842:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":163,"id":166,"nodeType":"Return","src":"835:15:1"}]},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"775:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"809:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:1"},"scope":177,"src":"758:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"935:25:1","statements":[{"expression":{"hexValue":"30","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":172,"id":174,"nodeType":"Return","src":"945:8:1"}]},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"892:2:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:1"},"scope":177,"src":"863:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":178,"src":"624:338:1","usedErrors":[],"usedEvents":[]}],"src":"101:862:1"},"id":1},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[229]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"125:489:2","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":229,"linearizedBaseContracts":[229],"name":"Panic","nameLocation":"665:5:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"677:36:2","text":"@dev generic / unspecified error"},"id":184,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:2","nodeType":"VariableDeclaration","scope":229,"src":"718:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"764:37:2","text":"@dev used by the assert() builtin"},"id":188,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:2","nodeType":"VariableDeclaration","scope":229,"src":"806:39:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"851:41:2","text":"@dev arithmetic underflow or overflow"},"id":192,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:2","nodeType":"VariableDeclaration","scope":229,"src":"897:47:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:2","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"950:35:2","text":"@dev division or modulo by zero"},"id":196,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:2","nodeType":"VariableDeclaration","scope":229,"src":"990:49:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"1045:30:2","text":"@dev enum conversion error"},"id":200,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:2","nodeType":"VariableDeclaration","scope":229,"src":"1080:54:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:2","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"1140:36:2","text":"@dev invalid encoding in storage"},"id":204,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:2","nodeType":"VariableDeclaration","scope":229,"src":"1181:55:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:2","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"1242:24:2","text":"@dev empty array pop"},"id":208,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:2","nodeType":"VariableDeclaration","scope":229,"src":"1271:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:2","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1325:35:2","text":"@dev array out of bounds access"},"id":212,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:2","nodeType":"VariableDeclaration","scope":229,"src":"1365:52:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:2","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"1423:65:2","text":"@dev resource error (too large allocation or too large array)"},"id":216,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:2","nodeType":"VariableDeclaration","scope":229,"src":"1493:47:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:2","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"1546:42:2","text":"@dev calling invalid internal function"},"id":220,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:2","nodeType":"VariableDeclaration","scope":229,"src":"1593:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:2","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":227,"nodeType":"Block","src":"1819:151:2","statements":[{"AST":{"nativeSrc":"1854:110:2","nodeType":"YulBlock","src":"1854:110:2","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:2","nodeType":"YulLiteral","src":"1875:4:2","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:2","nodeType":"YulLiteral","src":"1881:10:2","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:2","nodeType":"YulIdentifier","src":"1868:6:2"},"nativeSrc":"1868:24:2","nodeType":"YulFunctionCall","src":"1868:24:2"},"nativeSrc":"1868:24:2","nodeType":"YulExpressionStatement","src":"1868:24:2"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:2","nodeType":"YulLiteral","src":"1912:4:2","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:2","nodeType":"YulIdentifier","src":"1918:4:2"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:2","nodeType":"YulIdentifier","src":"1905:6:2"},"nativeSrc":"1905:18:2","nodeType":"YulFunctionCall","src":"1905:18:2"},"nativeSrc":"1905:18:2","nodeType":"YulExpressionStatement","src":"1905:18:2"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:2","nodeType":"YulLiteral","src":"1943:4:2","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:2","nodeType":"YulLiteral","src":"1949:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:2","nodeType":"YulIdentifier","src":"1936:6:2"},"nativeSrc":"1936:18:2","nodeType":"YulFunctionCall","src":"1936:18:2"},"nativeSrc":"1936:18:2","nodeType":"YulExpressionStatement","src":"1936:18:2"}]},"evmVersion":"cancun","externalReferences":[{"declaration":223,"isOffset":false,"isSlot":false,"src":"1918:4:2","valueSize":1}],"flags":["memory-safe"],"id":226,"nodeType":"InlineAssembly","src":"1829:135:2"}]},"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"1658:113:2","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":228,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:2","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"code","nameLocation":"1799:4:2","nodeType":"VariableDeclaration","scope":228,"src":"1791:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:2"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[],"src":"1819:0:2"},"scope":229,"src":"1776:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":230,"src":"657:1315:2","usedErrors":[],"usedEvents":[]}],"src":"99:1874:2"},"id":2},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3686],"SafeCast":[5451],"SignedMath":[5595],"Strings":[1631]},"id":1632,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1632,"sourceUnit":3687,"src":"127:37:3","symbolAliases":[{"foreign":{"id":232,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"135:4:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":235,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1632,"sourceUnit":5452,"src":"165:45:3","symbolAliases":[{"foreign":{"id":234,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"173:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1632,"sourceUnit":5596,"src":"211:49:3","symbolAliases":[{"foreign":{"id":236,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"219:10:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"262:34:3","text":" @dev String operations."},"fullyImplemented":true,"id":1631,"linearizedBaseContracts":[1631],"name":"Strings","nameLocation":"305:7:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":240,"libraryName":{"id":239,"name":"SafeCast","nameLocations":["325:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":5451,"src":"325:8:3"},"nodeType":"UsingForDirective","src":"319:21:3"},{"constant":true,"id":243,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:3","nodeType":"VariableDeclaration","scope":1631,"src":"346:56:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":241,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:3","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":246,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:3","nodeType":"VariableDeclaration","scope":1631,"src":"408:42:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":244,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":282,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:3","nodeType":"VariableDeclaration","scope":1631,"src":"456:302:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:3","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:3","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:3","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:3","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:3","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:3","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:3","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:3","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:3","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:3","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:3","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:3","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:3","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:3","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:3","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:3","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:3","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:3","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:3","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:3","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:3","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:3","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:3","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:3","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:3","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:3","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"778:81:3","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":289,"name":"StringsInsufficientHexLength","nameLocation":"870:28:3","nodeType":"ErrorDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"value","nameLocation":"907:5:3","nodeType":"VariableDeclaration","scope":289,"src":"899:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"length","nameLocation":"922:6:3","nodeType":"VariableDeclaration","scope":289,"src":"914:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":286,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:3"},"src":"864:66:3"},{"documentation":{"id":290,"nodeType":"StructuredDocumentation","src":"936:108:3","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":292,"name":"StringsInvalidChar","nameLocation":"1055:18:3","nodeType":"ErrorDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[],"src":"1073:2:3"},"src":"1049:27:3"},{"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"1082:84:3","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":295,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:3","nodeType":"ErrorDefinition","parameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"1204:2:3"},"src":"1171:36:3"},{"body":{"id":342,"nodeType":"Block","src":"1379:561:3","statements":[{"id":341,"nodeType":"UncheckedBlock","src":"1389:545:3","statements":[{"assignments":[304],"declarations":[{"constant":false,"id":304,"mutability":"mutable","name":"length","nameLocation":"1421:6:3","nodeType":"VariableDeclaration","scope":341,"src":"1413:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":311,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"1441:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":305,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"1430:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3686_$","typeString":"type(library Math)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:3","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3518,"src":"1430:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:3"},{"assignments":[313],"declarations":[{"constant":false,"id":313,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:3","nodeType":"VariableDeclaration","scope":341,"src":"1465:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":312,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[{"id":316,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"1499:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":314,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:3"},{"assignments":[320],"declarations":[{"constant":false,"id":320,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:3","nodeType":"VariableDeclaration","scope":341,"src":"1520:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":321,"nodeType":"VariableDeclarationStatement","src":"1520:11:3"},{"AST":{"nativeSrc":"1570:67:3","nodeType":"YulBlock","src":"1570:67:3","statements":[{"nativeSrc":"1588:35:3","nodeType":"YulAssignment","src":"1588:35:3","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:3","nodeType":"YulIdentifier","src":"1599:6:3"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:3","nodeType":"YulLiteral","src":"1611:2:3","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:3","nodeType":"YulIdentifier","src":"1615:6:3"}],"functionName":{"name":"add","nativeSrc":"1607:3:3","nodeType":"YulIdentifier","src":"1607:3:3"},"nativeSrc":"1607:15:3","nodeType":"YulFunctionCall","src":"1607:15:3"}],"functionName":{"name":"add","nativeSrc":"1595:3:3","nodeType":"YulIdentifier","src":"1595:3:3"},"nativeSrc":"1595:28:3","nodeType":"YulFunctionCall","src":"1595:28:3"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:3","nodeType":"YulIdentifier","src":"1588:3:3"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":313,"isOffset":false,"isSlot":false,"src":"1599:6:3","valueSize":1},{"declaration":304,"isOffset":false,"isSlot":false,"src":"1615:6:3","valueSize":1},{"declaration":320,"isOffset":false,"isSlot":false,"src":"1588:3:3","valueSize":1}],"flags":["memory-safe"],"id":322,"nodeType":"InlineAssembly","src":"1545:92:3"},{"body":{"id":337,"nodeType":"Block","src":"1663:234:3","statements":[{"expression":{"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:3","subExpression":{"id":324,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"1681:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":326,"nodeType":"ExpressionStatement","src":"1681:5:3"},{"AST":{"nativeSrc":"1729:86:3","nodeType":"YulBlock","src":"1729:86:3","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:3","nodeType":"YulIdentifier","src":"1759:3:3"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:3","nodeType":"YulIdentifier","src":"1773:5:3"},{"kind":"number","nativeSrc":"1780:2:3","nodeType":"YulLiteral","src":"1780:2:3","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:3","nodeType":"YulIdentifier","src":"1769:3:3"},"nativeSrc":"1769:14:3","nodeType":"YulFunctionCall","src":"1769:14:3"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:3","nodeType":"YulIdentifier","src":"1785:10:3"}],"functionName":{"name":"byte","nativeSrc":"1764:4:3","nodeType":"YulIdentifier","src":"1764:4:3"},"nativeSrc":"1764:32:3","nodeType":"YulFunctionCall","src":"1764:32:3"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:3","nodeType":"YulIdentifier","src":"1751:7:3"},"nativeSrc":"1751:46:3","nodeType":"YulFunctionCall","src":"1751:46:3"},"nativeSrc":"1751:46:3","nodeType":"YulExpressionStatement","src":"1751:46:3"}]},"evmVersion":"cancun","externalReferences":[{"declaration":243,"isOffset":false,"isSlot":false,"src":"1785:10:3","valueSize":1},{"declaration":320,"isOffset":false,"isSlot":false,"src":"1759:3:3","valueSize":1},{"declaration":298,"isOffset":false,"isSlot":false,"src":"1773:5:3","valueSize":1}],"flags":["memory-safe"],"id":327,"nodeType":"InlineAssembly","src":"1704:111:3"},{"expression":{"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"1832:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":331,"nodeType":"ExpressionStatement","src":"1832:11:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"1865:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"IfStatement","src":"1861:21:3","trueBody":{"id":335,"nodeType":"Break","src":"1877:5:3"}}]},"condition":{"hexValue":"74727565","id":323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":338,"nodeType":"WhileStatement","src":"1650:247:3"},{"expression":{"id":339,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"1917:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":302,"id":340,"nodeType":"Return","src":"1910:13:3"}]}]},"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"1213:90:3","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":343,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:3","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"value","nameLocation":"1334:5:3","nodeType":"VariableDeclaration","scope":343,"src":"1326:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:3"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":343,"src":"1364:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":300,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:3"},"scope":1631,"src":"1308:632:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":368,"nodeType":"Block","src":"2116:92:3","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"2147:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:3","trueExpression":{"hexValue":"2d","id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"2193:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":361,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"2178:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5595_$","typeString":"type(library SignedMath)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:3","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5594,"src":"2178:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":360,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"2169:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":351,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:3","typeDescriptions":{}}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:3","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":350,"id":367,"nodeType":"Return","src":"2126:75:3"}]},"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"1946:89:3","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":369,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:3","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"value","nameLocation":"2071:5:3","nodeType":"VariableDeclaration","scope":369,"src":"2064:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":345,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:3"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":369,"src":"2101:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:3"},"scope":1631,"src":"2040:168:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":388,"nodeType":"Block","src":"2387:100:3","statements":[{"id":387,"nodeType":"UncheckedBlock","src":"2397:84:3","statements":[{"expression":{"arguments":[{"id":378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2440:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2459:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":379,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"2447:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3686_$","typeString":"type(library Math)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:3","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3629,"src":"2447:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":377,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[389,472,492],"referencedDeclaration":472,"src":"2428:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":376,"id":386,"nodeType":"Return","src":"2421:49:3"}]}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2214:94:3","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":389,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:3","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"value","nameLocation":"2342:5:3","nodeType":"VariableDeclaration","scope":389,"src":"2334:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:3"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":389,"src":"2372:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":374,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:3"},"scope":1631,"src":"2313:174:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":471,"nodeType":"Block","src":"2700:435:3","statements":[{"assignments":[400],"declarations":[{"constant":false,"id":400,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:3","nodeType":"VariableDeclaration","scope":471,"src":"2710:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":402,"initialValue":{"id":401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2731:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:3"},{"assignments":[404],"declarations":[{"constant":false,"id":404,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:3","nodeType":"VariableDeclaration","scope":471,"src":"2746:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":403,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":413,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":408,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2782:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":405,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:3"},{"expression":{"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":414,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2803:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":416,"indexExpression":{"hexValue":"30","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":419,"nodeType":"ExpressionStatement","src":"2803:15:3"},{"expression":{"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":420,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2828:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":422,"indexExpression":{"hexValue":"31","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":425,"nodeType":"ExpressionStatement","src":"2828:15:3"},{"body":{"id":454,"nodeType":"Block","src":"2898:95:3","statements":[{"expression":{"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":440,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2912:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":442,"indexExpression":{"id":441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2919:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":443,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"2924:10:3","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":447,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":444,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2935:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:3","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":449,"nodeType":"ExpressionStatement","src":"2912:40:3"},{"expression":{"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":450,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2966:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":453,"nodeType":"ExpressionStatement","src":"2966:16:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":434,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2886:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":455,"initializationExpression":{"assignments":[427],"declarations":[{"constant":false,"id":427,"mutability":"mutable","name":"i","nameLocation":"2866:1:3","nodeType":"VariableDeclaration","scope":455,"src":"2858:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":433,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":429,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2874:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:3"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:3","subExpression":{"id":437,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2895:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"2893:3:3"},"nodeType":"ForStatement","src":"2853:140:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":456,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3006:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":465,"nodeType":"IfStatement","src":"3002:96:3","trueBody":{"id":464,"nodeType":"Block","src":"3023:75:3","statements":[{"errorCall":{"arguments":[{"id":460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"3073:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":461,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"3080:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":459,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"3044:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":463,"nodeType":"RevertStatement","src":"3037:50:3"}]}},{"expression":{"arguments":[{"id":468,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"3121:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":466,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:3","typeDescriptions":{}}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":398,"id":470,"nodeType":"Return","src":"3107:21:3"}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"2493:112:3","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":472,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:3","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"value","nameLocation":"2639:5:3","nodeType":"VariableDeclaration","scope":472,"src":"2631:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"length","nameLocation":"2654:6:3","nodeType":"VariableDeclaration","scope":472,"src":"2646:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:3"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":472,"src":"2685:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":396,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:3"},"scope":1631,"src":"2610:525:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":491,"nodeType":"Block","src":"3367:75:3","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":485,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"3412:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":483,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:3","typeDescriptions":{}}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:3","typeDescriptions":{}}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":488,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3420:14:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":480,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[389,472,492],"referencedDeclaration":472,"src":"3384:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":479,"id":490,"nodeType":"Return","src":"3377:58:3"}]},"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"3141:148:3","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":492,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:3","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"addr","nameLocation":"3323:4:3","nodeType":"VariableDeclaration","scope":492,"src":"3315:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:3"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":492,"src":"3352:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":477,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:3"},"scope":1631,"src":"3294:148:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":556,"nodeType":"Block","src":"3699:642:3","statements":[{"assignments":[501],"declarations":[{"constant":false,"id":501,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:3","nodeType":"VariableDeclaration","scope":556,"src":"3709:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":500,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":508,"initialValue":{"arguments":[{"arguments":[{"id":505,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3749:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":504,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[389,472,492],"referencedDeclaration":492,"src":"3737:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":502,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:3","typeDescriptions":{}}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:3"},{"assignments":[510],"declarations":[{"constant":false,"id":510,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:3","nodeType":"VariableDeclaration","scope":556,"src":"3840:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":511,"nodeType":"VariableDeclarationStatement","src":"3840:17:3"},{"AST":{"nativeSrc":"3892:78:3","nodeType":"YulBlock","src":"3892:78:3","statements":[{"nativeSrc":"3906:54:3","nodeType":"YulAssignment","src":"3906:54:3","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:3","nodeType":"YulLiteral","src":"3923:2:3","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:3","nodeType":"YulIdentifier","src":"3941:6:3"},{"kind":"number","nativeSrc":"3949:4:3","nodeType":"YulLiteral","src":"3949:4:3","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:3","nodeType":"YulIdentifier","src":"3937:3:3"},"nativeSrc":"3937:17:3","nodeType":"YulFunctionCall","src":"3937:17:3"},{"kind":"number","nativeSrc":"3956:2:3","nodeType":"YulLiteral","src":"3956:2:3","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:3","nodeType":"YulIdentifier","src":"3927:9:3"},"nativeSrc":"3927:32:3","nodeType":"YulFunctionCall","src":"3927:32:3"}],"functionName":{"name":"shr","nativeSrc":"3919:3:3","nodeType":"YulIdentifier","src":"3919:3:3"},"nativeSrc":"3919:41:3","nodeType":"YulFunctionCall","src":"3919:41:3"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:3","nodeType":"YulIdentifier","src":"3906:9:3"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":501,"isOffset":false,"isSlot":false,"src":"3941:6:3","valueSize":1},{"declaration":510,"isOffset":false,"isSlot":false,"src":"3906:9:3","valueSize":1}],"flags":["memory-safe"],"id":512,"nodeType":"InlineAssembly","src":"3867:103:3"},{"body":{"id":549,"nodeType":"Block","src":"4013:291:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":523,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"4119:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:3","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:3","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":530,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"4148:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":532,"indexExpression":{"id":531,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4155:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":528,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:3","typeDescriptions":{}}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:3","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":544,"nodeType":"IfStatement","src":"4115:150:3","trueBody":{"id":543,"nodeType":"Block","src":"4165:100:3","statements":[{"expression":{"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":537,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"4233:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":539,"indexExpression":{"id":538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4240:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:3","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":542,"nodeType":"ExpressionStatement","src":"4233:17:3"}]}},{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"4278:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"4278:15:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":517,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4001:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":550,"initializationExpression":{"assignments":[514],"declarations":[{"constant":false,"id":514,"mutability":"mutable","name":"i","nameLocation":"3993:1:3","nodeType":"VariableDeclaration","scope":550,"src":"3985:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":516,"initialValue":{"hexValue":"3431","id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:3","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:3"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:3","subExpression":{"id":520,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4010:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":522,"nodeType":"ExpressionStatement","src":"4008:3:3"},"nodeType":"ForStatement","src":"3980:324:3"},{"expression":{"arguments":[{"id":553,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"4327:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":551,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:3","typeDescriptions":{}}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":499,"id":555,"nodeType":"Return","src":"4313:21:3"}]},"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"3448:165:3","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":557,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:3","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"addr","nameLocation":"3655:4:3","nodeType":"VariableDeclaration","scope":557,"src":"3647:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:3"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":557,"src":"3684:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":497,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:3"},"scope":1631,"src":"3618:723:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"4496:104:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":569,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4519:1:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":567,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:3","typeDescriptions":{}}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:3","memberName":"length","nodeType":"MemberAccess","src":"4513:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":574,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4538:1:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":572,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:3","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:3","memberName":"length","nodeType":"MemberAccess","src":"4532:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":581,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4567:1:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":579,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:3","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":578,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":587,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4590:1:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":585,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:3","typeDescriptions":{}}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":584,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":566,"id":592,"nodeType":"Return","src":"4506:87:3"}]},"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"4347:66:3","text":" @dev Returns true if the two strings are equal."},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:3","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"a","nameLocation":"4447:1:3","nodeType":"VariableDeclaration","scope":594,"src":"4433:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":559,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"b","nameLocation":"4464:1:3","nodeType":"VariableDeclaration","scope":594,"src":"4450:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":561,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:3"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"4490:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":564,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:3"},"scope":1631,"src":"4418:182:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":612,"nodeType":"Block","src":"4897:64:3","statements":[{"expression":{"arguments":[{"id":603,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4924:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":607,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4940:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":605,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:3","typeDescriptions":{}}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:3","memberName":"length","nodeType":"MemberAccess","src":"4934:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":602,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[613,644],"referencedDeclaration":644,"src":"4914:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":601,"id":611,"nodeType":"Return","src":"4907:47:3"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"4606:214:3","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":613,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:3","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"input","nameLocation":"4858:5:3","nodeType":"VariableDeclaration","scope":613,"src":"4844:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":596,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:3"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"4888:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:3"},"scope":1631,"src":"4825:136:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":643,"nodeType":"Block","src":"5366:153:3","statements":[{"assignments":[626,628],"declarations":[{"constant":false,"id":626,"mutability":"mutable","name":"success","nameLocation":"5382:7:3","nodeType":"VariableDeclaration","scope":643,"src":"5377:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":625,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"value","nameLocation":"5399:5:3","nodeType":"VariableDeclaration","scope":643,"src":"5391:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":634,"initialValue":{"arguments":[{"id":630,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"5421:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":631,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"5428:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5435:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[665,702],"referencedDeclaration":702,"src":"5408:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:3"},{"condition":{"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:3","subExpression":{"id":635,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5454:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":640,"nodeType":"IfStatement","src":"5449:41:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":637,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"5470:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":639,"nodeType":"RevertStatement","src":"5463:27:3"}},{"expression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5507:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":624,"id":642,"nodeType":"Return","src":"5500:12:3"}]},"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"4967:294:3","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:3","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"input","nameLocation":"5299:5:3","nodeType":"VariableDeclaration","scope":644,"src":"5285:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":615,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"begin","nameLocation":"5314:5:3","nodeType":"VariableDeclaration","scope":644,"src":"5306:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":617,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"end","nameLocation":"5329:3:3","nodeType":"VariableDeclaration","scope":644,"src":"5321:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:3"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":644,"src":"5357:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:3"},"scope":1631,"src":"5266:253:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":664,"nodeType":"Block","src":"5840:83:3","statements":[{"expression":{"arguments":[{"id":655,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"5886:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":659,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"5902:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":657,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:3","typeDescriptions":{}}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:3","memberName":"length","nodeType":"MemberAccess","src":"5896:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"5857:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":653,"id":663,"nodeType":"Return","src":"5850:66:3"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"5525:215:3","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":665,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:3","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"input","nameLocation":"5781:5:3","nodeType":"VariableDeclaration","scope":665,"src":"5767:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":646,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"success","nameLocation":"5816:7:3","nodeType":"VariableDeclaration","scope":665,"src":"5811:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":649,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"value","nameLocation":"5833:5:3","nodeType":"VariableDeclaration","scope":665,"src":"5825:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:3"},"scope":1631,"src":"5745:178:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":701,"nodeType":"Block","src":"6325:144:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":679,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"6339:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":682,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6351:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":680,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:3","typeDescriptions":{}}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:3","memberName":"length","nodeType":"MemberAccess","src":"6345:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"6368:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":687,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"6376:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":694,"nodeType":"IfStatement","src":"6335:63:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":692,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":678,"id":693,"nodeType":"Return","src":"6381:17:3"}},{"expression":{"arguments":[{"id":696,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6444:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":697,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"6451:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":698,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"6458:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":695,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"6415:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":678,"id":700,"nodeType":"Return","src":"6408:54:3"}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"5929:238:3","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":702,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:3","nodeType":"FunctionDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"input","nameLocation":"6217:5:3","nodeType":"VariableDeclaration","scope":702,"src":"6203:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":667,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"begin","nameLocation":"6240:5:3","nodeType":"VariableDeclaration","scope":702,"src":"6232:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":672,"mutability":"mutable","name":"end","nameLocation":"6263:3:3","nodeType":"VariableDeclaration","scope":702,"src":"6255:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:3"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"success","nameLocation":"6301:7:3","nodeType":"VariableDeclaration","scope":702,"src":"6296:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":674,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"value","nameLocation":"6318:5:3","nodeType":"VariableDeclaration","scope":702,"src":"6310:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":676,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:3"},"scope":1631,"src":"6172:297:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":771,"nodeType":"Block","src":"6872:347:3","statements":[{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:3","nodeType":"VariableDeclaration","scope":771,"src":"6882:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":716,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[{"id":720,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"6910:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":718,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:3","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:3"},{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"result","nameLocation":"6935:6:3","nodeType":"VariableDeclaration","scope":771,"src":"6927:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":726,"initialValue":{"hexValue":"30","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:3"},{"body":{"id":765,"nodeType":"Block","src":"6993:189:3","statements":[{"assignments":[738],"declarations":[{"constant":false,"id":738,"mutability":"mutable","name":"chr","nameLocation":"7013:3:3","nodeType":"VariableDeclaration","scope":765,"src":"7007:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":737,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":748,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":743,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"7062:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":744,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"7070:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":742,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"7039:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":740,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:3","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":739,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"7019:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"7092:3:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:3","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":756,"nodeType":"IfStatement","src":"7088:30:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":754,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":715,"id":755,"nodeType":"Return","src":"7101:17:3"}},{"expression":{"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7132:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":760,"nodeType":"ExpressionStatement","src":"7132:12:3"},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7158:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":762,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"7168:3:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"7158:13:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6979:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":732,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"6983:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":766,"initializationExpression":{"assignments":[728],"declarations":[{"constant":false,"id":728,"mutability":"mutable","name":"i","nameLocation":"6968:1:3","nodeType":"VariableDeclaration","scope":766,"src":"6960:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":730,"initialValue":{"id":729,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"6972:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:3","subExpression":{"id":734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6990:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":736,"nodeType":"ExpressionStatement","src":"6988:3:3"},"nodeType":"ForStatement","src":"6955:227:3"},{"expression":{"components":[{"hexValue":"74727565","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":768,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7205:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":715,"id":770,"nodeType":"Return","src":"7191:21:3"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"6475:224:3","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":772,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:3","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"input","nameLocation":"6765:5:3","nodeType":"VariableDeclaration","scope":772,"src":"6751:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":704,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"begin","nameLocation":"6788:5:3","nodeType":"VariableDeclaration","scope":772,"src":"6780:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"end","nameLocation":"6811:3:3","nodeType":"VariableDeclaration","scope":772,"src":"6803:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:3"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"success","nameLocation":"6848:7:3","nodeType":"VariableDeclaration","scope":772,"src":"6843:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":711,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"value","nameLocation":"6865:5:3","nodeType":"VariableDeclaration","scope":772,"src":"6857:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:3"},"scope":1631,"src":"6704:515:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":790,"nodeType":"Block","src":"7516:63:3","statements":[{"expression":{"arguments":[{"id":781,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7542:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":785,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7558:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":783,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:3","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:3","memberName":"length","nodeType":"MemberAccess","src":"7552:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":780,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[791,822],"referencedDeclaration":822,"src":"7533:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":779,"id":789,"nodeType":"Return","src":"7526:46:3"}]},"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"7225:216:3","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":791,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:3","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"input","nameLocation":"7478:5:3","nodeType":"VariableDeclaration","scope":791,"src":"7464:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":774,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:3"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":791,"src":"7508:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":777,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:3"},"scope":1631,"src":"7446:133:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":821,"nodeType":"Block","src":"7984:151:3","statements":[{"assignments":[804,806],"declarations":[{"constant":false,"id":804,"mutability":"mutable","name":"success","nameLocation":"8000:7:3","nodeType":"VariableDeclaration","scope":821,"src":"7995:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":803,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"value","nameLocation":"8016:5:3","nodeType":"VariableDeclaration","scope":821,"src":"8009:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":805,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":812,"initialValue":{"arguments":[{"id":808,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"8037:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":809,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"8044:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":810,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"8051:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":807,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[843,885],"referencedDeclaration":885,"src":"8025:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:3"},{"condition":{"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:3","subExpression":{"id":813,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"8070:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":818,"nodeType":"IfStatement","src":"8065:41:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":815,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"8086:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":817,"nodeType":"RevertStatement","src":"8079:27:3"}},{"expression":{"id":819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"8123:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":802,"id":820,"nodeType":"Return","src":"8116:12:3"}]},"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"7585:296:3","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":822,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:3","nodeType":"FunctionDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"input","nameLocation":"7918:5:3","nodeType":"VariableDeclaration","scope":822,"src":"7904:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":793,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"begin","nameLocation":"7933:5:3","nodeType":"VariableDeclaration","scope":822,"src":"7925:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":798,"mutability":"mutable","name":"end","nameLocation":"7948:3:3","nodeType":"VariableDeclaration","scope":822,"src":"7940:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:3"},"returnParameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":822,"src":"7976:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":800,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:3"},"scope":1631,"src":"7886:249:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":842,"nodeType":"Block","src":"8526:82:3","statements":[{"expression":{"arguments":[{"id":833,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"8571:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":837,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"8587:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":835,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:3","typeDescriptions":{}}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:3","memberName":"length","nodeType":"MemberAccess","src":"8581:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":832,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"8543:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":831,"id":841,"nodeType":"Return","src":"8536:65:3"}]},"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"8141:287:3","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":843,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:3","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"input","nameLocation":"8468:5:3","nodeType":"VariableDeclaration","scope":843,"src":"8454:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":824,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:3"},"returnParameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"success","nameLocation":"8503:7:3","nodeType":"VariableDeclaration","scope":843,"src":"8498:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":827,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"value","nameLocation":"8519:5:3","nodeType":"VariableDeclaration","scope":843,"src":"8512:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":829,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:3"},"scope":1631,"src":"8433:175:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":848,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:3","nodeType":"VariableDeclaration","scope":1631,"src":"8614:50:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:3","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:3","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":884,"nodeType":"Block","src":"9130:143:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":862,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"9144:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":865,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"9156:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":863,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:3","typeDescriptions":{}}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:3","memberName":"length","nodeType":"MemberAccess","src":"9150:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":869,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"9173:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":870,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"9181:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":877,"nodeType":"IfStatement","src":"9140:63:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":861,"id":876,"nodeType":"Return","src":"9186:17:3"}},{"expression":{"arguments":[{"id":879,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"9248:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":880,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"9255:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":881,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"9262:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":878,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"9220:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":861,"id":883,"nodeType":"Return","src":"9213:53:3"}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"8671:303:3","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:3","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"input","nameLocation":"9023:5:3","nodeType":"VariableDeclaration","scope":885,"src":"9009:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":850,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"begin","nameLocation":"9046:5:3","nodeType":"VariableDeclaration","scope":885,"src":"9038:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"end","nameLocation":"9069:3:3","nodeType":"VariableDeclaration","scope":885,"src":"9061:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:3"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"success","nameLocation":"9107:7:3","nodeType":"VariableDeclaration","scope":885,"src":"9102:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":857,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"value","nameLocation":"9123:5:3","nodeType":"VariableDeclaration","scope":885,"src":"9116:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":859,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:3"},"scope":1631,"src":"8979:294:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"9673:812:3","statements":[{"assignments":[900],"declarations":[{"constant":false,"id":900,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:3","nodeType":"VariableDeclaration","scope":1005,"src":"9683:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":899,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":905,"initialValue":{"arguments":[{"id":903,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"9711:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":901,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:3","typeDescriptions":{}}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:3"},{"assignments":[907],"declarations":[{"constant":false,"id":907,"mutability":"mutable","name":"sign","nameLocation":"9781:4:3","nodeType":"VariableDeclaration","scope":1005,"src":"9774:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":906,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":923,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":908,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"9788:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":909,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"9797:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":918,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"9845:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":919,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"9853:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":917,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"9822:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":915,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:3","typeDescriptions":{}}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:3","trueExpression":{"arguments":[{"hexValue":"30","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":911,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:3","typeDescriptions":{}}},"id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:3"},{"assignments":[925],"declarations":[{"constant":false,"id":925,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:3","nodeType":"VariableDeclaration","scope":1005,"src":"9941:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":924,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":932,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":926,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9961:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":927,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:3","typeDescriptions":{}}},"id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:3"},{"assignments":[934],"declarations":[{"constant":false,"id":934,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:3","nodeType":"VariableDeclaration","scope":1005,"src":"9990:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":933,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":941,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":935,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"10010:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":936,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:3","typeDescriptions":{}}},"id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:3"},{"assignments":[943],"declarations":[{"constant":false,"id":943,"mutability":"mutable","name":"offset","nameLocation":"10047:6:3","nodeType":"VariableDeclaration","scope":1005,"src":"10039:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":950,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":944,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"10057:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":945,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"10073:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:3","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"10056:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:3"},{"assignments":[952,954],"declarations":[{"constant":false,"id":952,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:3","nodeType":"VariableDeclaration","scope":1005,"src":"10107:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":951,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:3","nodeType":"VariableDeclaration","scope":1005,"src":"10124:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":962,"initialValue":{"arguments":[{"id":956,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"10157:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":957,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"10164:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":958,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"10172:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":960,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"10180:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":955,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[665,702],"referencedDeclaration":702,"src":"10144:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":963,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"10199:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":964,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10213:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":965,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10224:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":983,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"10341:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":984,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"10355:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":986,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10371:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":987,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10383:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":898,"id":1002,"nodeType":"Return","src":"10461:17:3"},"id":1003,"nodeType":"IfStatement","src":"10337:141:3","trueBody":{"id":998,"nodeType":"Block","src":"10399:56:3","statements":[{"expression":{"components":[{"hexValue":"74727565","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":992,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":991,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:3","memberName":"min","nodeType":"MemberAccess","src":"10427:16:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":898,"id":997,"nodeType":"Return","src":"10413:31:3"}]}},"id":1004,"nodeType":"IfStatement","src":"10195:283:3","trueBody":{"id":982,"nodeType":"Block","src":"10240:91:3","statements":[{"expression":{"components":[{"hexValue":"74727565","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":969,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"10268:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":977,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10310:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":975,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:3","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:3","trueExpression":{"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:3","subExpression":{"arguments":[{"id":972,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10291:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":970,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:3","typeDescriptions":{}}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":898,"id":981,"nodeType":"Return","src":"10254:66:3"}]}}]},"documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"9279:223:3","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:3","nodeType":"FunctionDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"input","nameLocation":"9567:5:3","nodeType":"VariableDeclaration","scope":1006,"src":"9553:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"begin","nameLocation":"9590:5:3","nodeType":"VariableDeclaration","scope":1006,"src":"9582:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"end","nameLocation":"9613:3:3","nodeType":"VariableDeclaration","scope":1006,"src":"9605:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:3"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"success","nameLocation":"9650:7:3","nodeType":"VariableDeclaration","scope":1006,"src":"9645:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":894,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"value","nameLocation":"9666:5:3","nodeType":"VariableDeclaration","scope":1006,"src":"9659:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":896,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:3"},"scope":1631,"src":"9507:978:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1024,"nodeType":"Block","src":"10830:67:3","statements":[{"expression":{"arguments":[{"id":1015,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"10860:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1019,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"10876:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1017,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:3","typeDescriptions":{}}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:3","memberName":"length","nodeType":"MemberAccess","src":"10870:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1014,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[1025,1056],"referencedDeclaration":1056,"src":"10847:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1013,"id":1023,"nodeType":"Return","src":"10840:50:3"}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"10491:259:3","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1025,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:3","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"input","nameLocation":"10791:5:3","nodeType":"VariableDeclaration","scope":1025,"src":"10777:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1008,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:3"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1025,"src":"10821:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:3"},"scope":1631,"src":"10755:142:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1055,"nodeType":"Block","src":"11318:156:3","statements":[{"assignments":[1038,1040],"declarations":[{"constant":false,"id":1038,"mutability":"mutable","name":"success","nameLocation":"11334:7:3","nodeType":"VariableDeclaration","scope":1055,"src":"11329:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1037,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"value","nameLocation":"11351:5:3","nodeType":"VariableDeclaration","scope":1055,"src":"11343:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1046,"initialValue":{"arguments":[{"id":1042,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"11376:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1043,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"11383:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1044,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"11390:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1041,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[1077,1114],"referencedDeclaration":1114,"src":"11360:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:3"},{"condition":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:3","subExpression":{"id":1047,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"11409:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1052,"nodeType":"IfStatement","src":"11404:41:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1049,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"11425:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1051,"nodeType":"RevertStatement","src":"11418:27:3"}},{"expression":{"id":1053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"11462:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1036,"id":1054,"nodeType":"Return","src":"11455:12:3"}]},"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"10903:307:3","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1056,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:3","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"input","nameLocation":"11251:5:3","nodeType":"VariableDeclaration","scope":1056,"src":"11237:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1027,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"begin","nameLocation":"11266:5:3","nodeType":"VariableDeclaration","scope":1056,"src":"11258:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"end","nameLocation":"11281:3:3","nodeType":"VariableDeclaration","scope":1056,"src":"11273:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:3"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1056,"src":"11309:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:3"},"scope":1631,"src":"11215:259:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1076,"nodeType":"Block","src":"11801:86:3","statements":[{"expression":{"arguments":[{"id":1067,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"11850:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1071,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"11866:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1069,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:3","typeDescriptions":{}}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:3","memberName":"length","nodeType":"MemberAccess","src":"11860:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1066,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"11818:31:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1065,"id":1075,"nodeType":"Return","src":"11811:69:3"}]},"documentation":{"id":1057,"nodeType":"StructuredDocumentation","src":"11480:218:3","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1077,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:3","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"input","nameLocation":"11742:5:3","nodeType":"VariableDeclaration","scope":1077,"src":"11728:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1058,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:3"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"success","nameLocation":"11777:7:3","nodeType":"VariableDeclaration","scope":1077,"src":"11772:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1061,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"value","nameLocation":"11794:5:3","nodeType":"VariableDeclaration","scope":1077,"src":"11786:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:3"},"scope":1631,"src":"11703:184:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1113,"nodeType":"Block","src":"12295:147:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1091,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"12309:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1094,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"12321:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1092,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:3","typeDescriptions":{}}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:3","memberName":"length","nodeType":"MemberAccess","src":"12315:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1098,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"12338:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1099,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"12346:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1106,"nodeType":"IfStatement","src":"12305:63:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1090,"id":1105,"nodeType":"Return","src":"12351:17:3"}},{"expression":{"arguments":[{"id":1108,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"12417:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1109,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"12424:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1110,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"12431:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1107,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"12385:31:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1090,"id":1112,"nodeType":"Return","src":"12378:57:3"}]},"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"11893:241:3","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1114,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:3","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"input","nameLocation":"12187:5:3","nodeType":"VariableDeclaration","scope":1114,"src":"12173:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1079,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"begin","nameLocation":"12210:5:3","nodeType":"VariableDeclaration","scope":1114,"src":"12202:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"end","nameLocation":"12233:3:3","nodeType":"VariableDeclaration","scope":1114,"src":"12225:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:3"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"success","nameLocation":"12271:7:3","nodeType":"VariableDeclaration","scope":1114,"src":"12266:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1086,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"value","nameLocation":"12288:5:3","nodeType":"VariableDeclaration","scope":1114,"src":"12280:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:3"},"scope":1631,"src":"12139:303:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1216,"nodeType":"Block","src":"12851:881:3","statements":[{"assignments":[1129],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:3","nodeType":"VariableDeclaration","scope":1216,"src":"12861:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1128,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1134,"initialValue":{"arguments":[{"id":1132,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"12889:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1130,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:3","typeDescriptions":{}}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:3"},{"assignments":[1136],"declarations":[{"constant":false,"id":1136,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:3","nodeType":"VariableDeclaration","scope":1216,"src":"12943:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1135,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1156,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"12961:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1138,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"12967:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1146,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"13011:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1147,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"13019:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1145,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"12988:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1143,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:3","typeDescriptions":{}}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1150,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:3","typeDescriptions":{}}},"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:3"},{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"offset","nameLocation":"13131:6:3","nodeType":"VariableDeclaration","scope":1216,"src":"13123:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1164,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1159,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"13140:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:3","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"13140:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:3"},{"assignments":[1166],"declarations":[{"constant":false,"id":1166,"mutability":"mutable","name":"result","nameLocation":"13181:6:3","nodeType":"VariableDeclaration","scope":1216,"src":"13173:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1168,"initialValue":{"hexValue":"30","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:3"},{"body":{"id":1210,"nodeType":"Block","src":"13248:447:3","statements":[{"assignments":[1182],"declarations":[{"constant":false,"id":1182,"mutability":"mutable","name":"chr","nameLocation":"13268:3:3","nodeType":"VariableDeclaration","scope":1210,"src":"13262:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1181,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1192,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1187,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"13317:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"13325:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1186,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"13294:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1184,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:3","typeDescriptions":{}}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1183,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"13274:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1193,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"13347:3:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:3","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1200,"nodeType":"IfStatement","src":"13343:31:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1127,"id":1199,"nodeType":"Return","src":"13357:17:3"}},{"expression":{"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"13388:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:3","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1204,"nodeType":"ExpressionStatement","src":"13388:12:3"},{"id":1209,"nodeType":"UncheckedBlock","src":"13414:271:3","statements":[{"expression":{"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"13657:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1206,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"13667:3:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"nodeType":"ExpressionStatement","src":"13657:13:3"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"13234:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1176,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"13238:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1211,"initializationExpression":{"assignments":[1170],"declarations":[{"constant":false,"id":1170,"mutability":"mutable","name":"i","nameLocation":"13214:1:3","nodeType":"VariableDeclaration","scope":1211,"src":"13206:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1174,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"13218:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1172,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"13226:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:3","subExpression":{"id":1178,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"13245:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1180,"nodeType":"ExpressionStatement","src":"13243:3:3"},"nodeType":"ForStatement","src":"13201:494:3"},{"expression":{"components":[{"hexValue":"74727565","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1213,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"13718:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1127,"id":1215,"nodeType":"Return","src":"13704:21:3"}]},"documentation":{"id":1115,"nodeType":"StructuredDocumentation","src":"12448:227:3","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:3","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"input","nameLocation":"12744:5:3","nodeType":"VariableDeclaration","scope":1217,"src":"12730:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1116,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"begin","nameLocation":"12767:5:3","nodeType":"VariableDeclaration","scope":1217,"src":"12759:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"end","nameLocation":"12790:3:3","nodeType":"VariableDeclaration","scope":1217,"src":"12782:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:3"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"success","nameLocation":"12827:7:3","nodeType":"VariableDeclaration","scope":1217,"src":"12822:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1123,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"value","nameLocation":"12844:5:3","nodeType":"VariableDeclaration","scope":1217,"src":"12836:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:3"},"scope":1631,"src":"12680:1052:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1235,"nodeType":"Block","src":"14030:67:3","statements":[{"expression":{"arguments":[{"id":1226,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"14060:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1230,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"14076:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1228,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:3","typeDescriptions":{}}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:3","memberName":"length","nodeType":"MemberAccess","src":"14070:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1225,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[1236,1267],"referencedDeclaration":1267,"src":"14047:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1224,"id":1234,"nodeType":"Return","src":"14040:50:3"}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"13738:212:3","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:3","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"input","nameLocation":"13991:5:3","nodeType":"VariableDeclaration","scope":1236,"src":"13977:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1219,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:3"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1236,"src":"14021:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:3"},"scope":1631,"src":"13955:142:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"14470:165:3","statements":[{"assignments":[1249,1251],"declarations":[{"constant":false,"id":1249,"mutability":"mutable","name":"success","nameLocation":"14486:7:3","nodeType":"VariableDeclaration","scope":1266,"src":"14481:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1248,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"value","nameLocation":"14503:5:3","nodeType":"VariableDeclaration","scope":1266,"src":"14495:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1257,"initialValue":{"arguments":[{"id":1253,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"14528:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1254,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"14535:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1255,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"14542:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1252,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1288,1392],"referencedDeclaration":1392,"src":"14512:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:3"},{"condition":{"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:3","subExpression":{"id":1258,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"14561:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1263,"nodeType":"IfStatement","src":"14556:50:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1260,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"14577:27:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1262,"nodeType":"RevertStatement","src":"14570:36:3"}},{"expression":{"id":1264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"14623:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1247,"id":1265,"nodeType":"Return","src":"14616:12:3"}]},"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"14103:259:3","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:3","nodeType":"FunctionDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"input","nameLocation":"14403:5:3","nodeType":"VariableDeclaration","scope":1267,"src":"14389:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1238,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"begin","nameLocation":"14418:5:3","nodeType":"VariableDeclaration","scope":1267,"src":"14410:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"end","nameLocation":"14433:3:3","nodeType":"VariableDeclaration","scope":1267,"src":"14425:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:3"},"returnParameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1267,"src":"14461:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:3"},"scope":1631,"src":"14367:268:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1287,"nodeType":"Block","src":"14942:70:3","statements":[{"expression":{"arguments":[{"id":1278,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"14975:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1282,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"14991:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1280,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:3","typeDescriptions":{}}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:3","memberName":"length","nodeType":"MemberAccess","src":"14985:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1277,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1288,1392],"referencedDeclaration":1392,"src":"14959:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1276,"id":1286,"nodeType":"Return","src":"14952:53:3"}]},"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"14641:198:3","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":1288,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:3","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"input","nameLocation":"14883:5:3","nodeType":"VariableDeclaration","scope":1288,"src":"14869:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1269,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:3"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"success","nameLocation":"14918:7:3","nodeType":"VariableDeclaration","scope":1288,"src":"14913:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1272,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"value","nameLocation":"14935:5:3","nodeType":"VariableDeclaration","scope":1288,"src":"14927:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:3"},"scope":1631,"src":"14844:168:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1391,"nodeType":"Block","src":"15405:733:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1302,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"15419:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1305,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"15431:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:3","typeDescriptions":{}}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:3","memberName":"length","nodeType":"MemberAccess","src":"15425:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1309,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"15448:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1310,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"15456:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1320,"nodeType":"IfStatement","src":"15415:72:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:3","typeDescriptions":{}}},"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1301,"id":1319,"nodeType":"Return","src":"15461:26:3"}},{"assignments":[1322],"declarations":[{"constant":false,"id":1322,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:3","nodeType":"VariableDeclaration","scope":1391,"src":"15498:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1321,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1345,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"15516:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1324,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"15522:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1334,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"15572:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:3","typeDescriptions":{}}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1336,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"15580:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1331,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"15543:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1329,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:3","typeDescriptions":{}}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1339,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:3","typeDescriptions":{}}},"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:3"},{"assignments":[1347],"declarations":[{"constant":false,"id":1347,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:3","nodeType":"VariableDeclaration","scope":1391,"src":"15684:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1355,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:3","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1349,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"15714:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:3","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"15714:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1356,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"15801:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1357,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"15807:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1359,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"15816:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1389,"nodeType":"Block","src":"16081:51:3","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:3","typeDescriptions":{}}},"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1301,"id":1388,"nodeType":"Return","src":"16095:26:3"}]},"id":1390,"nodeType":"IfStatement","src":"15797:335:3","trueBody":{"id":1381,"nodeType":"Block","src":"15832:243:3","statements":[{"assignments":[1362,1364],"declarations":[{"constant":false,"id":1362,"mutability":"mutable","name":"s","nameLocation":"15953:1:3","nodeType":"VariableDeclaration","scope":1381,"src":"15948:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1361,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"v","nameLocation":"15964:1:3","nodeType":"VariableDeclaration","scope":1381,"src":"15956:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1370,"initialValue":{"arguments":[{"id":1366,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"16001:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1367,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"16008:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1368,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"16015:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1365,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"15969:31:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:3"},{"expression":{"components":[{"id":1371,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"16041:1:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":1376,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"16060:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1374,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:3","typeDescriptions":{}}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:3","typeDescriptions":{}}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1301,"id":1380,"nodeType":"Return","src":"16033:31:3"}]}}]},"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"15018:226:3","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":1392,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:3","nodeType":"FunctionDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"input","nameLocation":"15297:5:3","nodeType":"VariableDeclaration","scope":1392,"src":"15283:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1290,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"begin","nameLocation":"15320:5:3","nodeType":"VariableDeclaration","scope":1392,"src":"15312:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"end","nameLocation":"15343:3:3","nodeType":"VariableDeclaration","scope":1392,"src":"15335:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:3"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"success","nameLocation":"15381:7:3","nodeType":"VariableDeclaration","scope":1392,"src":"15376:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1297,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"value","nameLocation":"15398:5:3","nodeType":"VariableDeclaration","scope":1392,"src":"15390:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:3"},"scope":1631,"src":"15249:889:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1451,"nodeType":"Block","src":"16207:461:3","statements":[{"assignments":[1400],"declarations":[{"constant":false,"id":1400,"mutability":"mutable","name":"value","nameLocation":"16223:5:3","nodeType":"VariableDeclaration","scope":1451,"src":"16217:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1399,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1405,"initialValue":{"arguments":[{"id":1403,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"16237:3:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1401,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:3","typeDescriptions":{}}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:3"},{"id":1448,"nodeType":"UncheckedBlock","src":"16401:238:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16429:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:3","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16443:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:3","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16489:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:3","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16503:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:3","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16550:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:3","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16564:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:3","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1440,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1439,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:3","memberName":"max","nodeType":"MemberAccess","src":"16613:15:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1398,"id":1444,"nodeType":"Return","src":"16606:22:3"},"id":1445,"nodeType":"IfStatement","src":"16546:82:3","trueBody":{"expression":{"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16576:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:3","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1438,"nodeType":"ExpressionStatement","src":"16576:11:3"}},"id":1446,"nodeType":"IfStatement","src":"16485:143:3","trueBody":{"expression":{"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16516:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:3","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1427,"nodeType":"ExpressionStatement","src":"16516:11:3"}},"id":1447,"nodeType":"IfStatement","src":"16425:203:3","trueBody":{"expression":{"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16455:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:3","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1416,"nodeType":"ExpressionStatement","src":"16455:11:3"}}]},{"expression":{"id":1449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16656:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1398,"id":1450,"nodeType":"Return","src":"16649:12:3"}]},"id":1452,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:3","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"chr","nameLocation":"16173:3:3","nodeType":"VariableDeclaration","scope":1452,"src":"16166:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1393,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:3"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1452,"src":"16200:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1396,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:3"},"scope":1631,"src":"16144:524:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1617,"nodeType":"Block","src":"17334:1331:3","statements":[{"assignments":[1461],"declarations":[{"constant":false,"id":1461,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:3","nodeType":"VariableDeclaration","scope":1617,"src":"17344:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1460,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1466,"initialValue":{"arguments":[{"id":1464,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"17372:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1462,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:3","typeDescriptions":{}}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:3"},{"assignments":[1468],"declarations":[{"constant":false,"id":1468,"mutability":"mutable","name":"output","nameLocation":"17401:6:3","nodeType":"VariableDeclaration","scope":1617,"src":"17388:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1467,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1476,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1472,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"17424:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:3","memberName":"length","nodeType":"MemberAccess","src":"17424:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1469,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:3"},{"assignments":[1478],"declarations":[{"constant":false,"id":1478,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:3","nodeType":"VariableDeclaration","scope":1617,"src":"17471:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1480,"initialValue":{"hexValue":"30","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:3"},{"body":{"id":1609,"nodeType":"Block","src":"17546:854:3","statements":[{"assignments":[1492],"declarations":[{"constant":false,"id":1492,"mutability":"mutable","name":"char","nameLocation":"17567:4:3","nodeType":"VariableDeclaration","scope":1609,"src":"17560:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1491,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1500,"initialValue":{"arguments":[{"arguments":[{"id":1496,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"17604:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1497,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"17612:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1495,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"17581:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1493,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:3","typeDescriptions":{}}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:3"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1501,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"17635:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":1505,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"17670:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1503,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:3","typeDescriptions":{}}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1607,"nodeType":"Block","src":"18328:62:3","statements":[{"expression":{"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1600,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18346:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1603,"indexExpression":{"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:3","subExpression":{"id":1601,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"18353:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1604,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"18371:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1606,"nodeType":"ExpressionStatement","src":"18346:29:3"}]},"id":1608,"nodeType":"IfStatement","src":"17629:761:3","trueBody":{"id":1599,"nodeType":"Block","src":"17685:637:3","statements":[{"expression":{"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1514,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17703:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1517,"indexExpression":{"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:3","subExpression":{"id":1515,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"17710:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1520,"nodeType":"ExpressionStatement","src":"17703:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1521,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"17754:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:3","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1531,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"17823:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:3","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1541,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"17892:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1551,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"17961:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:3","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1561,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"18030:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:3","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1571,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"18099:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:3","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1581,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"18169:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:3","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1592,"nodeType":"IfStatement","src":"18165:143:3","trueBody":{"id":1591,"nodeType":"Block","src":"18183:125:3","statements":[{"expression":{"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1584,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18261:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1587,"indexExpression":{"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:3","subExpression":{"id":1585,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"18268:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1590,"nodeType":"ExpressionStatement","src":"18261:28:3"}]}},"id":1593,"nodeType":"IfStatement","src":"18095:213:3","trueBody":{"expression":{"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1574,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18113:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1577,"indexExpression":{"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:3","subExpression":{"id":1575,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"18120:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1580,"nodeType":"ExpressionStatement","src":"18113:29:3"}},"id":1594,"nodeType":"IfStatement","src":"18026:282:3","trueBody":{"expression":{"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1564,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18044:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1567,"indexExpression":{"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:3","subExpression":{"id":1565,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"18051:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1570,"nodeType":"ExpressionStatement","src":"18044:28:3"}},"id":1595,"nodeType":"IfStatement","src":"17957:351:3","trueBody":{"expression":{"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1554,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17975:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1557,"indexExpression":{"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:3","subExpression":{"id":1555,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"17982:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1560,"nodeType":"ExpressionStatement","src":"17975:28:3"}},"id":1596,"nodeType":"IfStatement","src":"17888:420:3","trueBody":{"expression":{"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1544,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17906:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1547,"indexExpression":{"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:3","subExpression":{"id":1545,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"17913:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1550,"nodeType":"ExpressionStatement","src":"17906:28:3"}},"id":1597,"nodeType":"IfStatement","src":"17819:489:3","trueBody":{"expression":{"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1534,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17837:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1537,"indexExpression":{"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:3","subExpression":{"id":1535,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"17844:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1540,"nodeType":"ExpressionStatement","src":"17837:28:3"}},"id":1598,"nodeType":"IfStatement","src":"17750:558:3","trueBody":{"expression":{"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1524,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17768:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1527,"indexExpression":{"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:3","subExpression":{"id":1525,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"17775:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1530,"nodeType":"ExpressionStatement","src":"17768:28:3"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"17522:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1485,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"17526:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:3","memberName":"length","nodeType":"MemberAccess","src":"17526:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1610,"initializationExpression":{"assignments":[1482],"declarations":[{"constant":false,"id":1482,"mutability":"mutable","name":"i","nameLocation":"17519:1:3","nodeType":"VariableDeclaration","scope":1610,"src":"17511:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1483,"nodeType":"VariableDeclarationStatement","src":"17511:9:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:3","subExpression":{"id":1488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"17543:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1490,"nodeType":"ExpressionStatement","src":"17541:3:3"},"nodeType":"ForStatement","src":"17506:894:3"},{"AST":{"nativeSrc":"18498:129:3","nodeType":"YulBlock","src":"18498:129:3","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:3","nodeType":"YulIdentifier","src":"18519:6:3"},{"name":"outputLength","nativeSrc":"18527:12:3","nodeType":"YulIdentifier","src":"18527:12:3"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:3","nodeType":"YulIdentifier","src":"18512:6:3"},"nativeSrc":"18512:28:3","nodeType":"YulFunctionCall","src":"18512:28:3"},"nativeSrc":"18512:28:3","nodeType":"YulExpressionStatement","src":"18512:28:3"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:3","nodeType":"YulLiteral","src":"18560:4:3","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:3","nodeType":"YulIdentifier","src":"18570:6:3"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:3","nodeType":"YulLiteral","src":"18582:1:3","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:3","nodeType":"YulLiteral","src":"18589:1:3","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:3","nodeType":"YulIdentifier","src":"18596:12:3"},{"kind":"number","nativeSrc":"18610:2:3","nodeType":"YulLiteral","src":"18610:2:3","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:3","nodeType":"YulIdentifier","src":"18592:3:3"},"nativeSrc":"18592:21:3","nodeType":"YulFunctionCall","src":"18592:21:3"}],"functionName":{"name":"shr","nativeSrc":"18585:3:3","nodeType":"YulIdentifier","src":"18585:3:3"},"nativeSrc":"18585:29:3","nodeType":"YulFunctionCall","src":"18585:29:3"}],"functionName":{"name":"shl","nativeSrc":"18578:3:3","nodeType":"YulIdentifier","src":"18578:3:3"},"nativeSrc":"18578:37:3","nodeType":"YulFunctionCall","src":"18578:37:3"}],"functionName":{"name":"add","nativeSrc":"18566:3:3","nodeType":"YulIdentifier","src":"18566:3:3"},"nativeSrc":"18566:50:3","nodeType":"YulFunctionCall","src":"18566:50:3"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:3","nodeType":"YulIdentifier","src":"18553:6:3"},"nativeSrc":"18553:64:3","nodeType":"YulFunctionCall","src":"18553:64:3"},"nativeSrc":"18553:64:3","nodeType":"YulExpressionStatement","src":"18553:64:3"}]},"evmVersion":"cancun","externalReferences":[{"declaration":1468,"isOffset":false,"isSlot":false,"src":"18519:6:3","valueSize":1},{"declaration":1468,"isOffset":false,"isSlot":false,"src":"18570:6:3","valueSize":1},{"declaration":1478,"isOffset":false,"isSlot":false,"src":"18527:12:3","valueSize":1},{"declaration":1478,"isOffset":false,"isSlot":false,"src":"18596:12:3","valueSize":1}],"flags":["memory-safe"],"id":1611,"nodeType":"InlineAssembly","src":"18473:154:3"},{"expression":{"arguments":[{"id":1614,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18651:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1612,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:3","typeDescriptions":{}}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1459,"id":1616,"nodeType":"Return","src":"18637:21:3"}]},"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"16674:576:3","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":1618,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:3","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"input","nameLocation":"17289:5:3","nodeType":"VariableDeclaration","scope":1618,"src":"17275:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1454,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:3"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1618,"src":"17319:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1457,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:3"},"scope":1631,"src":"17255:1410:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1629,"nodeType":"Block","src":"19050:225:3","statements":[{"AST":{"nativeSrc":"19199:70:3","nodeType":"YulBlock","src":"19199:70:3","statements":[{"nativeSrc":"19213:46:3","nodeType":"YulAssignment","src":"19213:46:3","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:3","nodeType":"YulIdentifier","src":"19232:6:3"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:3","nodeType":"YulLiteral","src":"19244:4:3","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:3","nodeType":"YulIdentifier","src":"19250:6:3"}],"functionName":{"name":"add","nativeSrc":"19240:3:3","nodeType":"YulIdentifier","src":"19240:3:3"},"nativeSrc":"19240:17:3","nodeType":"YulFunctionCall","src":"19240:17:3"}],"functionName":{"name":"add","nativeSrc":"19228:3:3","nodeType":"YulIdentifier","src":"19228:3:3"},"nativeSrc":"19228:30:3","nodeType":"YulFunctionCall","src":"19228:30:3"}],"functionName":{"name":"mload","nativeSrc":"19222:5:3","nodeType":"YulIdentifier","src":"19222:5:3"},"nativeSrc":"19222:37:3","nodeType":"YulFunctionCall","src":"19222:37:3"},"variableNames":[{"name":"value","nativeSrc":"19213:5:3","nodeType":"YulIdentifier","src":"19213:5:3"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1621,"isOffset":false,"isSlot":false,"src":"19232:6:3","valueSize":1},{"declaration":1623,"isOffset":false,"isSlot":false,"src":"19250:6:3","valueSize":1},{"declaration":1626,"isOffset":false,"isSlot":false,"src":"19213:5:3","valueSize":1}],"flags":["memory-safe"],"id":1628,"nodeType":"InlineAssembly","src":"19174:95:3"}]},"documentation":{"id":1619,"nodeType":"StructuredDocumentation","src":"18671:268:3","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:3","nodeType":"FunctionDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:3","nodeType":"VariableDeclaration","scope":1630,"src":"18976:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1620,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"offset","nameLocation":"19005:6:3","nodeType":"VariableDeclaration","scope":1630,"src":"18997:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:3"},"returnParameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"value","nameLocation":"19043:5:3","nodeType":"VariableDeclaration","scope":1630,"src":"19035:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1625,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:3"},"scope":1631,"src":"18944:331:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1632,"src":"297:18980:3","usedErrors":[289,292,295],"usedEvents":[]}],"src":"101:19177:3"},"id":3},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1979]},"id":1980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1633,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"138:205:4","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1979,"linearizedBaseContracts":[1979],"name":"ECDSA","nameLocation":"352:5:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1639,"members":[{"id":1635,"name":"NoError","nameLocation":"392:7:4","nodeType":"EnumValue","src":"392:7:4"},{"id":1636,"name":"InvalidSignature","nameLocation":"409:16:4","nodeType":"EnumValue","src":"409:16:4"},{"id":1637,"name":"InvalidSignatureLength","nameLocation":"435:22:4","nodeType":"EnumValue","src":"435:22:4"},{"id":1638,"name":"InvalidSignatureS","nameLocation":"467:17:4","nodeType":"EnumValue","src":"467:17:4"}],"name":"RecoverError","nameLocation":"369:12:4","nodeType":"EnumDefinition","src":"364:126:4"},{"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"496:63:4","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1642,"name":"ECDSAInvalidSignature","nameLocation":"570:21:4","nodeType":"ErrorDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[],"src":"591:2:4"},"src":"564:30:4"},{"documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"600:60:4","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1647,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:4","nodeType":"ErrorDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"length","nameLocation":"707:6:4","nodeType":"VariableDeclaration","scope":1647,"src":"699:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:4"},"src":"665:50:4"},{"documentation":{"id":1648,"nodeType":"StructuredDocumentation","src":"721:85:4","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1652,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:4","nodeType":"ErrorDefinition","parameters":{"id":1651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"s","nameLocation":"848:1:4","nodeType":"VariableDeclaration","scope":1652,"src":"840:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:4"},"src":"811:40:4"},{"body":{"id":1704,"nodeType":"Block","src":"2285:622:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1667,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2299:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:4","memberName":"length","nodeType":"MemberAccess","src":"2299:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:4","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1702,"nodeType":"Block","src":"2793:108:4","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:4","typeDescriptions":{}}},"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1693,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"2827:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1639_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:4","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"2827:35:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1697,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"2872:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:4","memberName":"length","nodeType":"MemberAccess","src":"2872:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:4","typeDescriptions":{}}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1666,"id":1701,"nodeType":"Return","src":"2807:83:4"}]},"id":1703,"nodeType":"IfStatement","src":"2295:606:4","trueBody":{"id":1688,"nodeType":"Block","src":"2323:464:4","statements":[{"assignments":[1672],"declarations":[{"constant":false,"id":1672,"mutability":"mutable","name":"r","nameLocation":"2345:1:4","nodeType":"VariableDeclaration","scope":1688,"src":"2337:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1673,"nodeType":"VariableDeclarationStatement","src":"2337:9:4"},{"assignments":[1675],"declarations":[{"constant":false,"id":1675,"mutability":"mutable","name":"s","nameLocation":"2368:1:4","nodeType":"VariableDeclaration","scope":1688,"src":"2360:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1676,"nodeType":"VariableDeclarationStatement","src":"2360:9:4"},{"assignments":[1678],"declarations":[{"constant":false,"id":1678,"mutability":"mutable","name":"v","nameLocation":"2389:1:4","nodeType":"VariableDeclaration","scope":1688,"src":"2383:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1677,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1679,"nodeType":"VariableDeclarationStatement","src":"2383:7:4"},{"AST":{"nativeSrc":"2560:171:4","nodeType":"YulBlock","src":"2560:171:4","statements":[{"nativeSrc":"2578:32:4","nodeType":"YulAssignment","src":"2578:32:4","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:4","nodeType":"YulIdentifier","src":"2593:9:4"},{"kind":"number","nativeSrc":"2604:4:4","nodeType":"YulLiteral","src":"2604:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:4","nodeType":"YulIdentifier","src":"2589:3:4"},"nativeSrc":"2589:20:4","nodeType":"YulFunctionCall","src":"2589:20:4"}],"functionName":{"name":"mload","nativeSrc":"2583:5:4","nodeType":"YulIdentifier","src":"2583:5:4"},"nativeSrc":"2583:27:4","nodeType":"YulFunctionCall","src":"2583:27:4"},"variableNames":[{"name":"r","nativeSrc":"2578:1:4","nodeType":"YulIdentifier","src":"2578:1:4"}]},{"nativeSrc":"2627:32:4","nodeType":"YulAssignment","src":"2627:32:4","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:4","nodeType":"YulIdentifier","src":"2642:9:4"},{"kind":"number","nativeSrc":"2653:4:4","nodeType":"YulLiteral","src":"2653:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:4","nodeType":"YulIdentifier","src":"2638:3:4"},"nativeSrc":"2638:20:4","nodeType":"YulFunctionCall","src":"2638:20:4"}],"functionName":{"name":"mload","nativeSrc":"2632:5:4","nodeType":"YulIdentifier","src":"2632:5:4"},"nativeSrc":"2632:27:4","nodeType":"YulFunctionCall","src":"2632:27:4"},"variableNames":[{"name":"s","nativeSrc":"2627:1:4","nodeType":"YulIdentifier","src":"2627:1:4"}]},{"nativeSrc":"2676:41:4","nodeType":"YulAssignment","src":"2676:41:4","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:4","nodeType":"YulLiteral","src":"2686:1:4","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:4","nodeType":"YulIdentifier","src":"2699:9:4"},{"kind":"number","nativeSrc":"2710:4:4","nodeType":"YulLiteral","src":"2710:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:4","nodeType":"YulIdentifier","src":"2695:3:4"},"nativeSrc":"2695:20:4","nodeType":"YulFunctionCall","src":"2695:20:4"}],"functionName":{"name":"mload","nativeSrc":"2689:5:4","nodeType":"YulIdentifier","src":"2689:5:4"},"nativeSrc":"2689:27:4","nodeType":"YulFunctionCall","src":"2689:27:4"}],"functionName":{"name":"byte","nativeSrc":"2681:4:4","nodeType":"YulIdentifier","src":"2681:4:4"},"nativeSrc":"2681:36:4","nodeType":"YulFunctionCall","src":"2681:36:4"},"variableNames":[{"name":"v","nativeSrc":"2676:1:4","nodeType":"YulIdentifier","src":"2676:1:4"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1672,"isOffset":false,"isSlot":false,"src":"2578:1:4","valueSize":1},{"declaration":1675,"isOffset":false,"isSlot":false,"src":"2627:1:4","valueSize":1},{"declaration":1657,"isOffset":false,"isSlot":false,"src":"2593:9:4","valueSize":1},{"declaration":1657,"isOffset":false,"isSlot":false,"src":"2642:9:4","valueSize":1},{"declaration":1657,"isOffset":false,"isSlot":false,"src":"2699:9:4","valueSize":1},{"declaration":1678,"isOffset":false,"isSlot":false,"src":"2676:1:4","valueSize":1}],"flags":["memory-safe"],"id":1680,"nodeType":"InlineAssembly","src":"2535:196:4"},{"expression":{"arguments":[{"id":1682,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"2762:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1683,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"2768:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1684,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2771:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1685,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"2774:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1681,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1705,1785,1893],"referencedDeclaration":1893,"src":"2751:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1666,"id":1687,"nodeType":"Return","src":"2744:32:4"}]}}]},"documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"857:1267:4","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1705,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:4","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"mutability":"mutable","name":"hash","nameLocation":"2166:4:4","nodeType":"VariableDeclaration","scope":1705,"src":"2158:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1657,"mutability":"mutable","name":"signature","nameLocation":"2193:9:4","nodeType":"VariableDeclaration","scope":1705,"src":"2180:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1656,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:4"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:4","nodeType":"VariableDeclaration","scope":1705,"src":"2232:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1663,"mutability":"mutable","name":"err","nameLocation":"2264:3:4","nodeType":"VariableDeclaration","scope":1705,"src":"2251:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1662,"nodeType":"UserDefinedTypeName","pathNode":{"id":1661,"name":"RecoverError","nameLocations":["2251:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1639,"src":"2251:12:4"},"referencedDeclaration":1639,"src":"2251:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:4","nodeType":"VariableDeclaration","scope":1705,"src":"2269:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:4"},"scope":1979,"src":"2129:778:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1734,"nodeType":"Block","src":"3801:168:4","statements":[{"assignments":[1716,1719,1721],"declarations":[{"constant":false,"id":1716,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:4","nodeType":"VariableDeclaration","scope":1734,"src":"3812:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1719,"mutability":"mutable","name":"error","nameLocation":"3844:5:4","nodeType":"VariableDeclaration","scope":1734,"src":"3831:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1718,"nodeType":"UserDefinedTypeName","pathNode":{"id":1717,"name":"RecoverError","nameLocations":["3831:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1639,"src":"3831:12:4"},"referencedDeclaration":1639,"src":"3831:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:4","nodeType":"VariableDeclaration","scope":1734,"src":"3851:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1726,"initialValue":{"arguments":[{"id":1723,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"3882:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1724,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"3888:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1722,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1705,1785,1893],"referencedDeclaration":1705,"src":"3871:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:4"},{"expression":{"arguments":[{"id":1728,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"3920:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},{"id":1729,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"3927:8:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1727,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"3908:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1639_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1731,"nodeType":"ExpressionStatement","src":"3908:28:4"},{"expression":{"id":1732,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"3953:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1714,"id":1733,"nodeType":"Return","src":"3946:16:4"}]},"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"2913:796:4","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:4","nodeType":"FunctionDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"hash","nameLocation":"3739:4:4","nodeType":"VariableDeclaration","scope":1735,"src":"3731:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"signature","nameLocation":"3758:9:4","nodeType":"VariableDeclaration","scope":1735,"src":"3745:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1709,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:4"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1735,"src":"3792:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:4"},"scope":1979,"src":"3714:255:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1784,"nodeType":"Block","src":"4348:342:4","statements":[{"id":1783,"nodeType":"UncheckedBlock","src":"4358:326:4","statements":[{"assignments":[1753],"declarations":[{"constant":false,"id":1753,"mutability":"mutable","name":"s","nameLocation":"4390:1:4","nodeType":"VariableDeclaration","scope":1783,"src":"4382:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1760,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1754,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4394:2:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:4","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:4","typeDescriptions":{}}},"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:4"},{"assignments":[1762],"declarations":[{"constant":false,"id":1762,"mutability":"mutable","name":"v","nameLocation":"4591:1:4","nodeType":"VariableDeclaration","scope":1783,"src":"4585:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1761,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1775,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1767,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"4610:2:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1765,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:4","typeDescriptions":{}}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:4","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1771,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:4","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1763,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:4","typeDescriptions":{}}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:4"},{"expression":{"arguments":[{"id":1777,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"4659:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1778,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"4665:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1779,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"4668:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1780,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"4671:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1776,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1705,1785,1893],"referencedDeclaration":1893,"src":"4648:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1751,"id":1782,"nodeType":"Return","src":"4641:32:4"}]}]},"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"3975:205:4","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":1785,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:4","nodeType":"FunctionDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"hash","nameLocation":"4222:4:4","nodeType":"VariableDeclaration","scope":1785,"src":"4214:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"r","nameLocation":"4244:1:4","nodeType":"VariableDeclaration","scope":1785,"src":"4236:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"vs","nameLocation":"4263:2:4","nodeType":"VariableDeclaration","scope":1785,"src":"4255:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:4"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:4","nodeType":"VariableDeclaration","scope":1785,"src":"4295:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1744,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"err","nameLocation":"4327:3:4","nodeType":"VariableDeclaration","scope":1785,"src":"4314:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1747,"nodeType":"UserDefinedTypeName","pathNode":{"id":1746,"name":"RecoverError","nameLocations":["4314:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1639,"src":"4314:12:4"},"referencedDeclaration":1639,"src":"4314:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:4","nodeType":"VariableDeclaration","scope":1785,"src":"4332:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:4"},"scope":1979,"src":"4185:505:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1817,"nodeType":"Block","src":"4903:164:4","statements":[{"assignments":[1798,1801,1803],"declarations":[{"constant":false,"id":1798,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:4","nodeType":"VariableDeclaration","scope":1817,"src":"4914:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"error","nameLocation":"4946:5:4","nodeType":"VariableDeclaration","scope":1817,"src":"4933:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1800,"nodeType":"UserDefinedTypeName","pathNode":{"id":1799,"name":"RecoverError","nameLocations":["4933:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1639,"src":"4933:12:4"},"referencedDeclaration":1639,"src":"4933:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:4","nodeType":"VariableDeclaration","scope":1817,"src":"4953:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1809,"initialValue":{"arguments":[{"id":1805,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"4984:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1806,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"4990:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1807,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"4993:2:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1804,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1705,1785,1893],"referencedDeclaration":1785,"src":"4973:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:4"},{"expression":{"arguments":[{"id":1811,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"5018:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},{"id":1812,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"5025:8:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1810,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"5006:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1639_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1814,"nodeType":"ExpressionStatement","src":"5006:28:4"},{"expression":{"id":1815,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"5051:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1796,"id":1816,"nodeType":"Return","src":"5044:16:4"}]},"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"4696:116:4","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:4","nodeType":"FunctionDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"hash","nameLocation":"4842:4:4","nodeType":"VariableDeclaration","scope":1818,"src":"4834:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"r","nameLocation":"4856:1:4","nodeType":"VariableDeclaration","scope":1818,"src":"4848:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"vs","nameLocation":"4867:2:4","nodeType":"VariableDeclaration","scope":1818,"src":"4859:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:4"},"returnParameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1818,"src":"4894:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:4"},"scope":1979,"src":"4817:250:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1892,"nodeType":"Block","src":"5382:1372:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1839,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"6278:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:4","typeDescriptions":{}}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:4","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1853,"nodeType":"IfStatement","src":"6266:164:4","trueBody":{"id":1852,"nodeType":"Block","src":"6351:79:4","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1843,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:4","typeDescriptions":{}}},"id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1847,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"6385:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1639_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:4","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1638,"src":"6385:30:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},{"id":1849,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"6417:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1836,"id":1851,"nodeType":"Return","src":"6365:54:4"}]}},{"assignments":[1855],"declarations":[{"constant":false,"id":1855,"mutability":"mutable","name":"signer","nameLocation":"6532:6:4","nodeType":"VariableDeclaration","scope":1892,"src":"6524:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1854,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1862,"initialValue":{"arguments":[{"id":1857,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6551:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1858,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"6557:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1859,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"6560:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1860,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"6563:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1856,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:4","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1863,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"6579:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:4","typeDescriptions":{}}},"id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1882,"nodeType":"IfStatement","src":"6575:113:4","trueBody":{"id":1881,"nodeType":"Block","src":"6601:87:4","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:4","typeDescriptions":{}}},"id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1873,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"6635:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1639_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:4","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1636,"src":"6635:29:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:4","typeDescriptions":{}}},"id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1836,"id":1880,"nodeType":"Return","src":"6615:62:4"}]}},{"expression":{"components":[{"id":1883,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"6706:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1884,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"6714:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1639_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:4","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1635,"src":"6714:20:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:4","typeDescriptions":{}}},"id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1836,"id":1891,"nodeType":"Return","src":"6698:49:4"}]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"5073:125:4","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1893,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:4","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"hash","nameLocation":"5240:4:4","nodeType":"VariableDeclaration","scope":1893,"src":"5232:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"v","nameLocation":"5260:1:4","nodeType":"VariableDeclaration","scope":1893,"src":"5254:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1822,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"r","nameLocation":"5279:1:4","nodeType":"VariableDeclaration","scope":1893,"src":"5271:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"s","nameLocation":"5298:1:4","nodeType":"VariableDeclaration","scope":1893,"src":"5290:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:4"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:4","nodeType":"VariableDeclaration","scope":1893,"src":"5329:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1833,"mutability":"mutable","name":"err","nameLocation":"5361:3:4","nodeType":"VariableDeclaration","scope":1893,"src":"5348:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1832,"nodeType":"UserDefinedTypeName","pathNode":{"id":1831,"name":"RecoverError","nameLocations":["5348:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1639,"src":"5348:12:4"},"referencedDeclaration":1639,"src":"5348:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1835,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:4","nodeType":"VariableDeclaration","scope":1893,"src":"5366:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:4"},"scope":1979,"src":"5203:1551:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1928,"nodeType":"Block","src":"6981:166:4","statements":[{"assignments":[1908,1911,1913],"declarations":[{"constant":false,"id":1908,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:4","nodeType":"VariableDeclaration","scope":1928,"src":"6992:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1907,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"error","nameLocation":"7024:5:4","nodeType":"VariableDeclaration","scope":1928,"src":"7011:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1910,"nodeType":"UserDefinedTypeName","pathNode":{"id":1909,"name":"RecoverError","nameLocations":["7011:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1639,"src":"7011:12:4"},"referencedDeclaration":1639,"src":"7011:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1913,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:4","nodeType":"VariableDeclaration","scope":1928,"src":"7031:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1920,"initialValue":{"arguments":[{"id":1915,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"7062:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1916,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"7068:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1917,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"7071:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1918,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"7074:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1914,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1705,1785,1893],"referencedDeclaration":1893,"src":"7051:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1639_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:4"},{"expression":{"arguments":[{"id":1922,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"7098:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},{"id":1923,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"7105:8:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1921,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"7086:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1639_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1925,"nodeType":"ExpressionStatement","src":"7086:28:4"},{"expression":{"id":1926,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"7131:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1906,"id":1927,"nodeType":"Return","src":"7124:16:4"}]},"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"6760:122:4","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1929,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:4","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"hash","nameLocation":"6912:4:4","nodeType":"VariableDeclaration","scope":1929,"src":"6904:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"v","nameLocation":"6924:1:4","nodeType":"VariableDeclaration","scope":1929,"src":"6918:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1897,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"r","nameLocation":"6935:1:4","nodeType":"VariableDeclaration","scope":1929,"src":"6927:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"s","nameLocation":"6946:1:4","nodeType":"VariableDeclaration","scope":1929,"src":"6938:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:4"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1929,"src":"6972:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1904,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:4"},"scope":1979,"src":"6887:260:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1977,"nodeType":"Block","src":"7352:460:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1938,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"7366:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1939,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"7375:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1639_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:4","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1635,"src":"7375:20:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1944,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"7462:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1945,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"7471:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1639_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:4","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1636,"src":"7471:29:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1952,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"7567:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1953,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"7576:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1639_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:4","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1637,"src":"7576:35:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1964,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1933,"src":"7701:5:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1965,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"7710:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1639_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:4","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1638,"src":"7710:30:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1973,"nodeType":"IfStatement","src":"7697:109:4","trueBody":{"id":1972,"nodeType":"Block","src":"7742:64:4","statements":[{"errorCall":{"arguments":[{"id":1969,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"7786:8:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1968,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"7763:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1971,"nodeType":"RevertStatement","src":"7756:39:4"}]}},"id":1974,"nodeType":"IfStatement","src":"7563:243:4","trueBody":{"id":1963,"nodeType":"Block","src":"7613:78:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1959,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"7670:8:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:4","typeDescriptions":{}}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1956,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"7634:27:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1962,"nodeType":"RevertStatement","src":"7627:53:4"}]}},"id":1975,"nodeType":"IfStatement","src":"7458:348:4","trueBody":{"id":1951,"nodeType":"Block","src":"7502:55:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1948,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"7523:21:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1950,"nodeType":"RevertStatement","src":"7516:30:4"}]}},"id":1976,"nodeType":"IfStatement","src":"7362:444:4","trueBody":{"id":1943,"nodeType":"Block","src":"7397:55:4","statements":[{"functionReturnParameters":1937,"id":1942,"nodeType":"Return","src":"7411:7:4"}]}}]},"documentation":{"id":1930,"nodeType":"StructuredDocumentation","src":"7153:122:4","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":1978,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:4","nodeType":"FunctionDefinition","parameters":{"id":1936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"error","nameLocation":"7314:5:4","nodeType":"VariableDeclaration","scope":1978,"src":"7301:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1932,"nodeType":"UserDefinedTypeName","pathNode":{"id":1931,"name":"RecoverError","nameLocations":["7301:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":1639,"src":"7301:12:4"},"referencedDeclaration":1639,"src":"7301:12:4","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1639","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1935,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:4","nodeType":"VariableDeclaration","scope":1978,"src":"7321:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:4"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[],"src":"7352:0:4"},"scope":1979,"src":"7280:532:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1980,"src":"344:7470:4","usedErrors":[1642,1647,1652],"usedEvents":[]}],"src":"112:7703:4"},"id":4},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2065],"Strings":[1631]},"id":2066,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1981,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1983,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2066,"sourceUnit":1632,"src":"149:39:5","symbolAliases":[{"foreign":{"id":1982,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"157:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":1984,"nodeType":"StructuredDocumentation","src":"190:330:5","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2065,"linearizedBaseContracts":[2065],"name":"MessageHashUtils","nameLocation":"529:16:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1993,"nodeType":"Block","src":"1339:341:5","statements":[{"AST":{"nativeSrc":"1374:300:5","nodeType":"YulBlock","src":"1374:300:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:5","nodeType":"YulLiteral","src":"1395:4:5","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:5","nodeType":"YulLiteral","src":"1401:34:5","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:5","nodeType":"YulIdentifier","src":"1388:6:5"},"nativeSrc":"1388:48:5","nodeType":"YulFunctionCall","src":"1388:48:5"},"nativeSrc":"1388:48:5","nodeType":"YulExpressionStatement","src":"1388:48:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:5","nodeType":"YulLiteral","src":"1497:4:5","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:5","nodeType":"YulIdentifier","src":"1503:11:5"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:5","nodeType":"YulIdentifier","src":"1490:6:5"},"nativeSrc":"1490:25:5","nodeType":"YulFunctionCall","src":"1490:25:5"},"nativeSrc":"1490:25:5","nodeType":"YulExpressionStatement","src":"1490:25:5"},{"nativeSrc":"1569:31:5","nodeType":"YulAssignment","src":"1569:31:5","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:5","nodeType":"YulLiteral","src":"1589:4:5","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:5","nodeType":"YulLiteral","src":"1595:4:5","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:5","nodeType":"YulIdentifier","src":"1579:9:5"},"nativeSrc":"1579:21:5","nodeType":"YulFunctionCall","src":"1579:21:5"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:5","nodeType":"YulIdentifier","src":"1569:6:5"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1990,"isOffset":false,"isSlot":false,"src":"1569:6:5","valueSize":1},{"declaration":1987,"isOffset":false,"isSlot":false,"src":"1503:11:5","valueSize":1}],"flags":["memory-safe"],"id":1992,"nodeType":"InlineAssembly","src":"1349:325:5"}]},"documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"552:690:5","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":1994,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:5","nodeType":"FunctionDefinition","parameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:5","nodeType":"VariableDeclaration","scope":1994,"src":"1279:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:5"},"returnParameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1990,"mutability":"mutable","name":"digest","nameLocation":"1331:6:5","nodeType":"VariableDeclaration","scope":1994,"src":"1323:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:5"},"scope":2065,"src":"1247:433:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2019,"nodeType":"Block","src":"2257:143:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2011,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"2366:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:5","memberName":"length","nodeType":"MemberAccess","src":"2366:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2009,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"2349:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1631_$","typeString":"type(library Strings)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:5","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":343,"src":"2349:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2007,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:5","typeDescriptions":{}}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2015,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"2384:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2003,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:5","typeDescriptions":{}}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:5","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:5","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2002,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2001,"id":2018,"nodeType":"Return","src":"2267:126:5"}]},"documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"1686:480:5","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:5","nodeType":"FunctionDefinition","parameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"message","nameLocation":"2216:7:5","nodeType":"VariableDeclaration","scope":2020,"src":"2203:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1996,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:5"},"returnParameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"2248:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:5"},"scope":2065,"src":"2171:229:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2039,"nodeType":"Block","src":"2854:80:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2034,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"2910:9:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2035,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"2921:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2031,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2030,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2029,"id":2038,"nodeType":"Return","src":"2864:63:5"}]},"documentation":{"id":2021,"nodeType":"StructuredDocumentation","src":"2406:332:5","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2040,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:5","nodeType":"FunctionDefinition","parameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"validator","nameLocation":"2792:9:5","nodeType":"VariableDeclaration","scope":2040,"src":"2784:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2025,"mutability":"mutable","name":"data","nameLocation":"2816:4:5","nodeType":"VariableDeclaration","scope":2040,"src":"2803:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2024,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:5"},"returnParameters":{"id":2029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2040,"src":"2845:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:5"},"scope":2065,"src":"2743:191:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2051,"nodeType":"Block","src":"3216:216:5","statements":[{"AST":{"nativeSrc":"3251:175:5","nodeType":"YulBlock","src":"3251:175:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:5","nodeType":"YulLiteral","src":"3272:4:5","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:5","nodeType":"YulLiteral","src":"3278:10:5","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:5","nodeType":"YulIdentifier","src":"3265:6:5"},"nativeSrc":"3265:24:5","nodeType":"YulFunctionCall","src":"3265:24:5"},"nativeSrc":"3265:24:5","nodeType":"YulExpressionStatement","src":"3265:24:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:5","nodeType":"YulLiteral","src":"3309:4:5","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:5","nodeType":"YulLiteral","src":"3319:2:5","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:5","nodeType":"YulIdentifier","src":"3323:9:5"}],"functionName":{"name":"shl","nativeSrc":"3315:3:5","nodeType":"YulIdentifier","src":"3315:3:5"},"nativeSrc":"3315:18:5","nodeType":"YulFunctionCall","src":"3315:18:5"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:5","nodeType":"YulIdentifier","src":"3302:6:5"},"nativeSrc":"3302:32:5","nodeType":"YulFunctionCall","src":"3302:32:5"},"nativeSrc":"3302:32:5","nodeType":"YulExpressionStatement","src":"3302:32:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:5","nodeType":"YulLiteral","src":"3354:4:5","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:5","nodeType":"YulIdentifier","src":"3360:11:5"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:5","nodeType":"YulIdentifier","src":"3347:6:5"},"nativeSrc":"3347:25:5","nodeType":"YulFunctionCall","src":"3347:25:5"},"nativeSrc":"3347:25:5","nodeType":"YulExpressionStatement","src":"3347:25:5"},{"nativeSrc":"3385:31:5","nodeType":"YulAssignment","src":"3385:31:5","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:5","nodeType":"YulLiteral","src":"3405:4:5","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:5","nodeType":"YulLiteral","src":"3411:4:5","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:5","nodeType":"YulIdentifier","src":"3395:9:5"},"nativeSrc":"3395:21:5","nodeType":"YulFunctionCall","src":"3395:21:5"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:5","nodeType":"YulIdentifier","src":"3385:6:5"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2048,"isOffset":false,"isSlot":false,"src":"3385:6:5","valueSize":1},{"declaration":2045,"isOffset":false,"isSlot":false,"src":"3360:11:5","valueSize":1},{"declaration":2043,"isOffset":false,"isSlot":false,"src":"3323:9:5","valueSize":1}],"flags":["memory-safe"],"id":2050,"nodeType":"InlineAssembly","src":"3226:200:5"}]},"documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"2940:129:5","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":2052,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:5","nodeType":"FunctionDefinition","parameters":{"id":2046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"validator","nameLocation":"3132:9:5","nodeType":"VariableDeclaration","scope":2052,"src":"3124:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2045,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:5","nodeType":"VariableDeclaration","scope":2052,"src":"3151:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2044,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:5"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"digest","nameLocation":"3208:6:5","nodeType":"VariableDeclaration","scope":2052,"src":"3200:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:5"},"scope":2065,"src":"3074:358:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2063,"nodeType":"Block","src":"3983:265:5","statements":[{"AST":{"nativeSrc":"4018:224:5","nodeType":"YulBlock","src":"4018:224:5","statements":[{"nativeSrc":"4032:22:5","nodeType":"YulVariableDeclaration","src":"4032:22:5","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:5","nodeType":"YulLiteral","src":"4049:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:5","nodeType":"YulIdentifier","src":"4043:5:5"},"nativeSrc":"4043:11:5","nodeType":"YulFunctionCall","src":"4043:11:5"},"variables":[{"name":"ptr","nativeSrc":"4036:3:5","nodeType":"YulTypedName","src":"4036:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:5","nodeType":"YulIdentifier","src":"4074:3:5"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:5","nodeType":"YulLiteral","src":"4079:10:5","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:5","nodeType":"YulIdentifier","src":"4067:6:5"},"nativeSrc":"4067:23:5","nodeType":"YulFunctionCall","src":"4067:23:5"},"nativeSrc":"4067:23:5","nodeType":"YulExpressionStatement","src":"4067:23:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:5","nodeType":"YulIdentifier","src":"4114:3:5"},{"kind":"number","nativeSrc":"4119:4:5","nodeType":"YulLiteral","src":"4119:4:5","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:5","nodeType":"YulIdentifier","src":"4110:3:5"},"nativeSrc":"4110:14:5","nodeType":"YulFunctionCall","src":"4110:14:5"},{"name":"domainSeparator","nativeSrc":"4126:15:5","nodeType":"YulIdentifier","src":"4126:15:5"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:5","nodeType":"YulIdentifier","src":"4103:6:5"},"nativeSrc":"4103:39:5","nodeType":"YulFunctionCall","src":"4103:39:5"},"nativeSrc":"4103:39:5","nodeType":"YulExpressionStatement","src":"4103:39:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:5","nodeType":"YulIdentifier","src":"4166:3:5"},{"kind":"number","nativeSrc":"4171:4:5","nodeType":"YulLiteral","src":"4171:4:5","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:5","nodeType":"YulIdentifier","src":"4162:3:5"},"nativeSrc":"4162:14:5","nodeType":"YulFunctionCall","src":"4162:14:5"},{"name":"structHash","nativeSrc":"4178:10:5","nodeType":"YulIdentifier","src":"4178:10:5"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:5","nodeType":"YulIdentifier","src":"4155:6:5"},"nativeSrc":"4155:34:5","nodeType":"YulFunctionCall","src":"4155:34:5"},"nativeSrc":"4155:34:5","nodeType":"YulExpressionStatement","src":"4155:34:5"},{"nativeSrc":"4202:30:5","nodeType":"YulAssignment","src":"4202:30:5","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:5","nodeType":"YulIdentifier","src":"4222:3:5"},{"kind":"number","nativeSrc":"4227:4:5","nodeType":"YulLiteral","src":"4227:4:5","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:5","nodeType":"YulIdentifier","src":"4212:9:5"},"nativeSrc":"4212:20:5","nodeType":"YulFunctionCall","src":"4212:20:5"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:5","nodeType":"YulIdentifier","src":"4202:6:5"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2060,"isOffset":false,"isSlot":false,"src":"4202:6:5","valueSize":1},{"declaration":2055,"isOffset":false,"isSlot":false,"src":"4126:15:5","valueSize":1},{"declaration":2057,"isOffset":false,"isSlot":false,"src":"4178:10:5","valueSize":1}],"flags":["memory-safe"],"id":2062,"nodeType":"InlineAssembly","src":"3993:249:5"}]},"documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"3438:431:5","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2064,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:5","nodeType":"FunctionDefinition","parameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:5","nodeType":"VariableDeclaration","scope":2064,"src":"3899:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:5","nodeType":"VariableDeclaration","scope":2064,"src":"3924:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:5"},"returnParameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"digest","nameLocation":"3975:6:5","nodeType":"VariableDeclaration","scope":2064,"src":"3967:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:5"},"scope":2065,"src":"3874:374:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2066,"src":"521:3729:5","usedErrors":[],"usedEvents":[]}],"src":"123:4128:5"},"id":5},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3686],"Panic":[229],"SafeCast":[5451]},"id":3687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2067,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2069,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3687,"sourceUnit":230,"src":"129:35:6","symbolAliases":[{"foreign":{"id":2068,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"137:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2071,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3687,"sourceUnit":5452,"src":"165:40:6","symbolAliases":[{"foreign":{"id":2070,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"173:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"207:73:6","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3686,"linearizedBaseContracts":[3686],"name":"Math","nameLocation":"289:4:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2077,"members":[{"id":2073,"name":"Floor","nameLocation":"324:5:6","nodeType":"EnumValue","src":"324:5:6"},{"id":2074,"name":"Ceil","nameLocation":"367:4:6","nodeType":"EnumValue","src":"367:4:6"},{"id":2075,"name":"Trunc","nameLocation":"409:5:6","nodeType":"EnumValue","src":"409:5:6"},{"id":2076,"name":"Expand","nameLocation":"439:6:6","nodeType":"EnumValue","src":"439:6:6"}],"name":"Rounding","nameLocation":"305:8:6","nodeType":"EnumDefinition","src":"300:169:6"},{"body":{"id":2090,"nodeType":"Block","src":"731:112:6","statements":[{"AST":{"nativeSrc":"766:71:6","nodeType":"YulBlock","src":"766:71:6","statements":[{"nativeSrc":"780:16:6","nodeType":"YulAssignment","src":"780:16:6","value":{"arguments":[{"name":"a","nativeSrc":"791:1:6","nodeType":"YulIdentifier","src":"791:1:6"},{"name":"b","nativeSrc":"794:1:6","nodeType":"YulIdentifier","src":"794:1:6"}],"functionName":{"name":"add","nativeSrc":"787:3:6","nodeType":"YulIdentifier","src":"787:3:6"},"nativeSrc":"787:9:6","nodeType":"YulFunctionCall","src":"787:9:6"},"variableNames":[{"name":"low","nativeSrc":"780:3:6","nodeType":"YulIdentifier","src":"780:3:6"}]},{"nativeSrc":"809:18:6","nodeType":"YulAssignment","src":"809:18:6","value":{"arguments":[{"name":"low","nativeSrc":"820:3:6","nodeType":"YulIdentifier","src":"820:3:6"},{"name":"a","nativeSrc":"825:1:6","nodeType":"YulIdentifier","src":"825:1:6"}],"functionName":{"name":"lt","nativeSrc":"817:2:6","nodeType":"YulIdentifier","src":"817:2:6"},"nativeSrc":"817:10:6","nodeType":"YulFunctionCall","src":"817:10:6"},"variableNames":[{"name":"high","nativeSrc":"809:4:6","nodeType":"YulIdentifier","src":"809:4:6"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2080,"isOffset":false,"isSlot":false,"src":"791:1:6","valueSize":1},{"declaration":2080,"isOffset":false,"isSlot":false,"src":"825:1:6","valueSize":1},{"declaration":2082,"isOffset":false,"isSlot":false,"src":"794:1:6","valueSize":1},{"declaration":2085,"isOffset":false,"isSlot":false,"src":"809:4:6","valueSize":1},{"declaration":2087,"isOffset":false,"isSlot":false,"src":"780:3:6","valueSize":1},{"declaration":2087,"isOffset":false,"isSlot":false,"src":"820:3:6","valueSize":1}],"flags":["memory-safe"],"id":2089,"nodeType":"InlineAssembly","src":"741:96:6"}]},"documentation":{"id":2078,"nodeType":"StructuredDocumentation","src":"475:163:6","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":2091,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:6","nodeType":"FunctionDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"a","nameLocation":"667:1:6","nodeType":"VariableDeclaration","scope":2091,"src":"659:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2079,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2082,"mutability":"mutable","name":"b","nameLocation":"678:1:6","nodeType":"VariableDeclaration","scope":2091,"src":"670:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:6"},"returnParameters":{"id":2088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"high","nameLocation":"712:4:6","nodeType":"VariableDeclaration","scope":2091,"src":"704:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2084,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"low","nameLocation":"726:3:6","nodeType":"VariableDeclaration","scope":2091,"src":"718:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:6"},"scope":3686,"src":"643:200:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2104,"nodeType":"Block","src":"1115:462:6","statements":[{"AST":{"nativeSrc":"1437:134:6","nodeType":"YulBlock","src":"1437:134:6","statements":[{"nativeSrc":"1451:30:6","nodeType":"YulVariableDeclaration","src":"1451:30:6","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:6","nodeType":"YulIdentifier","src":"1468:1:6"},{"name":"b","nativeSrc":"1471:1:6","nodeType":"YulIdentifier","src":"1471:1:6"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:6","nodeType":"YulLiteral","src":"1478:1:6","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:6","nodeType":"YulIdentifier","src":"1474:3:6"},"nativeSrc":"1474:6:6","nodeType":"YulFunctionCall","src":"1474:6:6"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:6","nodeType":"YulIdentifier","src":"1461:6:6"},"nativeSrc":"1461:20:6","nodeType":"YulFunctionCall","src":"1461:20:6"},"variables":[{"name":"mm","nativeSrc":"1455:2:6","nodeType":"YulTypedName","src":"1455:2:6","type":""}]},{"nativeSrc":"1494:16:6","nodeType":"YulAssignment","src":"1494:16:6","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:6","nodeType":"YulIdentifier","src":"1505:1:6"},{"name":"b","nativeSrc":"1508:1:6","nodeType":"YulIdentifier","src":"1508:1:6"}],"functionName":{"name":"mul","nativeSrc":"1501:3:6","nodeType":"YulIdentifier","src":"1501:3:6"},"nativeSrc":"1501:9:6","nodeType":"YulFunctionCall","src":"1501:9:6"},"variableNames":[{"name":"low","nativeSrc":"1494:3:6","nodeType":"YulIdentifier","src":"1494:3:6"}]},{"nativeSrc":"1523:38:6","nodeType":"YulAssignment","src":"1523:38:6","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:6","nodeType":"YulIdentifier","src":"1539:2:6"},{"name":"low","nativeSrc":"1543:3:6","nodeType":"YulIdentifier","src":"1543:3:6"}],"functionName":{"name":"sub","nativeSrc":"1535:3:6","nodeType":"YulIdentifier","src":"1535:3:6"},"nativeSrc":"1535:12:6","nodeType":"YulFunctionCall","src":"1535:12:6"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:6","nodeType":"YulIdentifier","src":"1552:2:6"},{"name":"low","nativeSrc":"1556:3:6","nodeType":"YulIdentifier","src":"1556:3:6"}],"functionName":{"name":"lt","nativeSrc":"1549:2:6","nodeType":"YulIdentifier","src":"1549:2:6"},"nativeSrc":"1549:11:6","nodeType":"YulFunctionCall","src":"1549:11:6"}],"functionName":{"name":"sub","nativeSrc":"1531:3:6","nodeType":"YulIdentifier","src":"1531:3:6"},"nativeSrc":"1531:30:6","nodeType":"YulFunctionCall","src":"1531:30:6"},"variableNames":[{"name":"high","nativeSrc":"1523:4:6","nodeType":"YulIdentifier","src":"1523:4:6"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2094,"isOffset":false,"isSlot":false,"src":"1468:1:6","valueSize":1},{"declaration":2094,"isOffset":false,"isSlot":false,"src":"1505:1:6","valueSize":1},{"declaration":2096,"isOffset":false,"isSlot":false,"src":"1471:1:6","valueSize":1},{"declaration":2096,"isOffset":false,"isSlot":false,"src":"1508:1:6","valueSize":1},{"declaration":2099,"isOffset":false,"isSlot":false,"src":"1523:4:6","valueSize":1},{"declaration":2101,"isOffset":false,"isSlot":false,"src":"1494:3:6","valueSize":1},{"declaration":2101,"isOffset":false,"isSlot":false,"src":"1543:3:6","valueSize":1},{"declaration":2101,"isOffset":false,"isSlot":false,"src":"1556:3:6","valueSize":1}],"flags":["memory-safe"],"id":2103,"nodeType":"InlineAssembly","src":"1412:159:6"}]},"documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"849:173:6","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":2105,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:6","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"a","nameLocation":"1051:1:6","nodeType":"VariableDeclaration","scope":2105,"src":"1043:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"b","nameLocation":"1062:1:6","nodeType":"VariableDeclaration","scope":2105,"src":"1054:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:6"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"high","nameLocation":"1096:4:6","nodeType":"VariableDeclaration","scope":2105,"src":"1088:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2098,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2101,"mutability":"mutable","name":"low","nameLocation":"1110:3:6","nodeType":"VariableDeclaration","scope":2105,"src":"1102:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:6"},"scope":3686,"src":"1027:550:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2139,"nodeType":"Block","src":"1784:149:6","statements":[{"id":2138,"nodeType":"UncheckedBlock","src":"1794:133:6","statements":[{"assignments":[2118],"declarations":[{"constant":false,"id":2118,"mutability":"mutable","name":"c","nameLocation":"1826:1:6","nodeType":"VariableDeclaration","scope":2138,"src":"1818:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2122,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2119,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"1830:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2120,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"1834:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:6"},{"expression":{"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2123,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"1849:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"1859:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2108,"src":"1864:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2128,"nodeType":"ExpressionStatement","src":"1849:16:6"},{"expression":{"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2129,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"1879:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2130,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"1888:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2133,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"1908:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2131,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"1892:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"1892:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2137,"nodeType":"ExpressionStatement","src":"1879:37:6"}]}]},"documentation":{"id":2106,"nodeType":"StructuredDocumentation","src":"1583:105:6","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":2140,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:6","nodeType":"FunctionDefinition","parameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"a","nameLocation":"1717:1:6","nodeType":"VariableDeclaration","scope":2140,"src":"1709:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2110,"mutability":"mutable","name":"b","nameLocation":"1728:1:6","nodeType":"VariableDeclaration","scope":2140,"src":"1720:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:6"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"success","nameLocation":"1759:7:6","nodeType":"VariableDeclaration","scope":2140,"src":"1754:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2112,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2115,"mutability":"mutable","name":"result","nameLocation":"1776:6:6","nodeType":"VariableDeclaration","scope":2140,"src":"1768:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:6"},"scope":3686,"src":"1693:240:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2174,"nodeType":"Block","src":"2143:149:6","statements":[{"id":2173,"nodeType":"UncheckedBlock","src":"2153:133:6","statements":[{"assignments":[2153],"declarations":[{"constant":false,"id":2153,"mutability":"mutable","name":"c","nameLocation":"2185:1:6","nodeType":"VariableDeclaration","scope":2173,"src":"2177:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2157,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2154,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"2189:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2155,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"2193:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:6"},{"expression":{"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2158,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"2208:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2159,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"2218:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2160,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"2223:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2163,"nodeType":"ExpressionStatement","src":"2208:16:6"},{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2164,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"2238:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2165,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"2247:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2168,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"2267:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2166,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"2251:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"2251:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2172,"nodeType":"ExpressionStatement","src":"2238:37:6"}]}]},"documentation":{"id":2141,"nodeType":"StructuredDocumentation","src":"1939:108:6","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":2175,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:6","nodeType":"FunctionDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"a","nameLocation":"2076:1:6","nodeType":"VariableDeclaration","scope":2175,"src":"2068:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2142,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"b","nameLocation":"2087:1:6","nodeType":"VariableDeclaration","scope":2175,"src":"2079:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2144,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:6"},"returnParameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2148,"mutability":"mutable","name":"success","nameLocation":"2118:7:6","nodeType":"VariableDeclaration","scope":2175,"src":"2113:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2147,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2150,"mutability":"mutable","name":"result","nameLocation":"2135:6:6","nodeType":"VariableDeclaration","scope":2175,"src":"2127:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:6"},"scope":3686,"src":"2052:240:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"2505:391:6","statements":[{"id":2203,"nodeType":"UncheckedBlock","src":"2515:375:6","statements":[{"assignments":[2188],"declarations":[{"constant":false,"id":2188,"mutability":"mutable","name":"c","nameLocation":"2547:1:6","nodeType":"VariableDeclaration","scope":2203,"src":"2539:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2187,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2192,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2189,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"2551:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2190,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"2555:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:6"},{"AST":{"nativeSrc":"2595:188:6","nodeType":"YulBlock","src":"2595:188:6","statements":[{"nativeSrc":"2727:42:6","nodeType":"YulAssignment","src":"2727:42:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:6","nodeType":"YulIdentifier","src":"2748:1:6"},{"name":"a","nativeSrc":"2751:1:6","nodeType":"YulIdentifier","src":"2751:1:6"}],"functionName":{"name":"div","nativeSrc":"2744:3:6","nodeType":"YulIdentifier","src":"2744:3:6"},"nativeSrc":"2744:9:6","nodeType":"YulFunctionCall","src":"2744:9:6"},{"name":"b","nativeSrc":"2755:1:6","nodeType":"YulIdentifier","src":"2755:1:6"}],"functionName":{"name":"eq","nativeSrc":"2741:2:6","nodeType":"YulIdentifier","src":"2741:2:6"},"nativeSrc":"2741:16:6","nodeType":"YulFunctionCall","src":"2741:16:6"},{"arguments":[{"name":"a","nativeSrc":"2766:1:6","nodeType":"YulIdentifier","src":"2766:1:6"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:6","nodeType":"YulIdentifier","src":"2759:6:6"},"nativeSrc":"2759:9:6","nodeType":"YulFunctionCall","src":"2759:9:6"}],"functionName":{"name":"or","nativeSrc":"2738:2:6","nodeType":"YulIdentifier","src":"2738:2:6"},"nativeSrc":"2738:31:6","nodeType":"YulFunctionCall","src":"2738:31:6"},"variableNames":[{"name":"success","nativeSrc":"2727:7:6","nodeType":"YulIdentifier","src":"2727:7:6"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2178,"isOffset":false,"isSlot":false,"src":"2751:1:6","valueSize":1},{"declaration":2178,"isOffset":false,"isSlot":false,"src":"2766:1:6","valueSize":1},{"declaration":2180,"isOffset":false,"isSlot":false,"src":"2755:1:6","valueSize":1},{"declaration":2188,"isOffset":false,"isSlot":false,"src":"2748:1:6","valueSize":1},{"declaration":2183,"isOffset":false,"isSlot":false,"src":"2727:7:6","valueSize":1}],"flags":["memory-safe"],"id":2193,"nodeType":"InlineAssembly","src":"2570:213:6"},{"expression":{"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2194,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"2842:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"2851:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2198,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"2871:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2196,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"2855:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"2855:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2202,"nodeType":"ExpressionStatement","src":"2842:37:6"}]}]},"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"2298:111:6","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:6","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"a","nameLocation":"2438:1:6","nodeType":"VariableDeclaration","scope":2205,"src":"2430:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"b","nameLocation":"2449:1:6","nodeType":"VariableDeclaration","scope":2205,"src":"2441:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:6"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"success","nameLocation":"2480:7:6","nodeType":"VariableDeclaration","scope":2205,"src":"2475:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2182,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2185,"mutability":"mutable","name":"result","nameLocation":"2497:6:6","nodeType":"VariableDeclaration","scope":2205,"src":"2489:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:6"},"scope":3686,"src":"2414:482:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2225,"nodeType":"Block","src":"3111:231:6","statements":[{"id":2224,"nodeType":"UncheckedBlock","src":"3121:215:6","statements":[{"expression":{"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2217,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"3145:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"3155:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2222,"nodeType":"ExpressionStatement","src":"3145:15:6"},{"AST":{"nativeSrc":"3199:127:6","nodeType":"YulBlock","src":"3199:127:6","statements":[{"nativeSrc":"3293:19:6","nodeType":"YulAssignment","src":"3293:19:6","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:6","nodeType":"YulIdentifier","src":"3307:1:6"},{"name":"b","nativeSrc":"3310:1:6","nodeType":"YulIdentifier","src":"3310:1:6"}],"functionName":{"name":"div","nativeSrc":"3303:3:6","nodeType":"YulIdentifier","src":"3303:3:6"},"nativeSrc":"3303:9:6","nodeType":"YulFunctionCall","src":"3303:9:6"},"variableNames":[{"name":"result","nativeSrc":"3293:6:6","nodeType":"YulIdentifier","src":"3293:6:6"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2208,"isOffset":false,"isSlot":false,"src":"3307:1:6","valueSize":1},{"declaration":2210,"isOffset":false,"isSlot":false,"src":"3310:1:6","valueSize":1},{"declaration":2215,"isOffset":false,"isSlot":false,"src":"3293:6:6","valueSize":1}],"flags":["memory-safe"],"id":2223,"nodeType":"InlineAssembly","src":"3174:152:6"}]}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"2902:113:6","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":2226,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:6","nodeType":"FunctionDefinition","parameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"a","nameLocation":"3044:1:6","nodeType":"VariableDeclaration","scope":2226,"src":"3036:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2210,"mutability":"mutable","name":"b","nameLocation":"3055:1:6","nodeType":"VariableDeclaration","scope":2226,"src":"3047:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:6"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"success","nameLocation":"3086:7:6","nodeType":"VariableDeclaration","scope":2226,"src":"3081:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2212,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"result","nameLocation":"3103:6:6","nodeType":"VariableDeclaration","scope":2226,"src":"3095:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2214,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:6"},"scope":3686,"src":"3020:322:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2246,"nodeType":"Block","src":"3567:231:6","statements":[{"id":2245,"nodeType":"UncheckedBlock","src":"3577:215:6","statements":[{"expression":{"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2238,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"3601:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2239,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"3611:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2243,"nodeType":"ExpressionStatement","src":"3601:15:6"},{"AST":{"nativeSrc":"3655:127:6","nodeType":"YulBlock","src":"3655:127:6","statements":[{"nativeSrc":"3749:19:6","nodeType":"YulAssignment","src":"3749:19:6","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:6","nodeType":"YulIdentifier","src":"3763:1:6"},{"name":"b","nativeSrc":"3766:1:6","nodeType":"YulIdentifier","src":"3766:1:6"}],"functionName":{"name":"mod","nativeSrc":"3759:3:6","nodeType":"YulIdentifier","src":"3759:3:6"},"nativeSrc":"3759:9:6","nodeType":"YulFunctionCall","src":"3759:9:6"},"variableNames":[{"name":"result","nativeSrc":"3749:6:6","nodeType":"YulIdentifier","src":"3749:6:6"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2229,"isOffset":false,"isSlot":false,"src":"3763:1:6","valueSize":1},{"declaration":2231,"isOffset":false,"isSlot":false,"src":"3766:1:6","valueSize":1},{"declaration":2236,"isOffset":false,"isSlot":false,"src":"3749:6:6","valueSize":1}],"flags":["memory-safe"],"id":2244,"nodeType":"InlineAssembly","src":"3630:152:6"}]}]},"documentation":{"id":2227,"nodeType":"StructuredDocumentation","src":"3348:123:6","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":2247,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:6","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"a","nameLocation":"3500:1:6","nodeType":"VariableDeclaration","scope":2247,"src":"3492:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"b","nameLocation":"3511:1:6","nodeType":"VariableDeclaration","scope":2247,"src":"3503:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:6"},"returnParameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"success","nameLocation":"3542:7:6","nodeType":"VariableDeclaration","scope":2247,"src":"3537:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2233,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"result","nameLocation":"3559:6:6","nodeType":"VariableDeclaration","scope":2247,"src":"3551:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:6"},"scope":3686,"src":"3476:322:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2276,"nodeType":"Block","src":"3989:122:6","statements":[{"assignments":[2258,2260],"declarations":[{"constant":false,"id":2258,"mutability":"mutable","name":"success","nameLocation":"4005:7:6","nodeType":"VariableDeclaration","scope":2276,"src":"4000:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2257,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"result","nameLocation":"4022:6:6","nodeType":"VariableDeclaration","scope":2276,"src":"4014:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2265,"initialValue":{"arguments":[{"id":2262,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"4039:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2263,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"4042:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2261,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"4032:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:6"},{"expression":{"arguments":[{"id":2267,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"4069:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"4078:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2269,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:6","memberName":"max","nodeType":"MemberAccess","src":"4086:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2266,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"4061:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2256,"id":2275,"nodeType":"Return","src":"4054:50:6"}]},"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"3804:103:6","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":2277,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:6","nodeType":"FunctionDefinition","parameters":{"id":2253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"a","nameLocation":"3943:1:6","nodeType":"VariableDeclaration","scope":2277,"src":"3935:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"b","nameLocation":"3954:1:6","nodeType":"VariableDeclaration","scope":2277,"src":"3946:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:6"},"returnParameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2277,"src":"3980:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:6"},"scope":3686,"src":"3912:199:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2296,"nodeType":"Block","src":"4294:73:6","statements":[{"assignments":[null,2288],"declarations":[null,{"constant":false,"id":2288,"mutability":"mutable","name":"result","nameLocation":"4315:6:6","nodeType":"VariableDeclaration","scope":2296,"src":"4307:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2293,"initialValue":{"arguments":[{"id":2290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"4332:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2291,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"4335:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2289,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"4325:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:6"},{"expression":{"id":2294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"4354:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2286,"id":2295,"nodeType":"Return","src":"4347:13:6"}]},"documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"4117:95:6","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":2297,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:6","nodeType":"FunctionDefinition","parameters":{"id":2283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"a","nameLocation":"4248:1:6","nodeType":"VariableDeclaration","scope":2297,"src":"4240:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2282,"mutability":"mutable","name":"b","nameLocation":"4259:1:6","nodeType":"VariableDeclaration","scope":2297,"src":"4251:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2281,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:6"},"returnParameters":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2297,"src":"4285:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2284,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:6"},"scope":3686,"src":"4217:150:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2326,"nodeType":"Block","src":"4564:122:6","statements":[{"assignments":[2308,2310],"declarations":[{"constant":false,"id":2308,"mutability":"mutable","name":"success","nameLocation":"4580:7:6","nodeType":"VariableDeclaration","scope":2326,"src":"4575:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2307,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2310,"mutability":"mutable","name":"result","nameLocation":"4597:6:6","nodeType":"VariableDeclaration","scope":2326,"src":"4589:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2315,"initialValue":{"arguments":[{"id":2312,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"4614:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2313,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"4617:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2311,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"4607:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:6"},{"expression":{"arguments":[{"id":2317,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"4644:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"4653:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":2321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2319,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:6","memberName":"max","nodeType":"MemberAccess","src":"4661:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2316,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"4636:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2306,"id":2325,"nodeType":"Return","src":"4629:50:6"}]},"documentation":{"id":2298,"nodeType":"StructuredDocumentation","src":"4373:109:6","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":2327,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:6","nodeType":"FunctionDefinition","parameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"a","nameLocation":"4518:1:6","nodeType":"VariableDeclaration","scope":2327,"src":"4510:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2302,"mutability":"mutable","name":"b","nameLocation":"4529:1:6","nodeType":"VariableDeclaration","scope":2327,"src":"4521:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:6"},"returnParameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2327,"src":"4555:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:6"},"scope":3686,"src":"4487:199:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2353,"nodeType":"Block","src":"5158:207:6","statements":[{"id":2352,"nodeType":"UncheckedBlock","src":"5168:191:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"5306:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2340,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"5312:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2341,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"5316:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2346,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"5337:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2344,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"5321:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"5321:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2349,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2338,"id":2351,"nodeType":"Return","src":"5299:49:6"}]}]},"documentation":{"id":2328,"nodeType":"StructuredDocumentation","src":"4692:374:6","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":2354,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:6","nodeType":"FunctionDefinition","parameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2330,"mutability":"mutable","name":"condition","nameLocation":"5093:9:6","nodeType":"VariableDeclaration","scope":2354,"src":"5088:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2329,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2332,"mutability":"mutable","name":"a","nameLocation":"5112:1:6","nodeType":"VariableDeclaration","scope":2354,"src":"5104:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2331,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2334,"mutability":"mutable","name":"b","nameLocation":"5123:1:6","nodeType":"VariableDeclaration","scope":2354,"src":"5115:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:6"},"returnParameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2354,"src":"5149:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:6"},"scope":3686,"src":"5071:294:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2372,"nodeType":"Block","src":"5502:44:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"5527:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2366,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"5531:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2368,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"5534:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2369,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"5537:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2364,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"5519:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2363,"id":2371,"nodeType":"Return","src":"5512:27:6"}]},"documentation":{"id":2355,"nodeType":"StructuredDocumentation","src":"5371:59:6","text":" @dev Returns the largest of two numbers."},"id":2373,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:6","nodeType":"FunctionDefinition","parameters":{"id":2360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"a","nameLocation":"5456:1:6","nodeType":"VariableDeclaration","scope":2373,"src":"5448:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2359,"mutability":"mutable","name":"b","nameLocation":"5467:1:6","nodeType":"VariableDeclaration","scope":2373,"src":"5459:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2358,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:6"},"returnParameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2373,"src":"5493:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:6"},"scope":3686,"src":"5435:111:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2391,"nodeType":"Block","src":"5684:44:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"5709:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2385,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"5713:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"5716:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2388,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"5719:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2383,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"5701:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2382,"id":2390,"nodeType":"Return","src":"5694:27:6"}]},"documentation":{"id":2374,"nodeType":"StructuredDocumentation","src":"5552:60:6","text":" @dev Returns the smallest of two numbers."},"id":2392,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:6","nodeType":"FunctionDefinition","parameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2376,"mutability":"mutable","name":"a","nameLocation":"5638:1:6","nodeType":"VariableDeclaration","scope":2392,"src":"5630:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2378,"mutability":"mutable","name":"b","nameLocation":"5649:1:6","nodeType":"VariableDeclaration","scope":2392,"src":"5641:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:6"},"returnParameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2392,"src":"5675:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2380,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:6"},"scope":3686,"src":"5617:111:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2414,"nodeType":"Block","src":"5912:82:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"5967:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2403,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"5971:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"5977:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"5981:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2409,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2401,"id":2413,"nodeType":"Return","src":"5959:28:6"}]},"documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"5734:102:6","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2415,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:6","nodeType":"FunctionDefinition","parameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"a","nameLocation":"5866:1:6","nodeType":"VariableDeclaration","scope":2415,"src":"5858:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"b","nameLocation":"5877:1:6","nodeType":"VariableDeclaration","scope":2415,"src":"5869:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:6"},"returnParameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2415,"src":"5903:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:6"},"scope":3686,"src":"5841:153:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2455,"nodeType":"Block","src":"6286:633:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"6300:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2436,"nodeType":"IfStatement","src":"6296:150:6","trueBody":{"id":2435,"nodeType":"Block","src":"6308:138:6","statements":[{"expression":{"arguments":[{"expression":{"id":2431,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"6412:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:6","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":196,"src":"6412:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2428,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"6400:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"6400:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2434,"nodeType":"ExpressionStatement","src":"6400:35:6"}]}},{"id":2454,"nodeType":"UncheckedBlock","src":"6829:84:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2439,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6876:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2437,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"6860:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"6860:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2443,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"6887:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2447,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"6896:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2424,"id":2453,"nodeType":"Return","src":"6853:49:6"}]}]},"documentation":{"id":2416,"nodeType":"StructuredDocumentation","src":"6000:210:6","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2456,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:6","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2418,"mutability":"mutable","name":"a","nameLocation":"6240:1:6","nodeType":"VariableDeclaration","scope":2456,"src":"6232:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2417,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2420,"mutability":"mutable","name":"b","nameLocation":"6251:1:6","nodeType":"VariableDeclaration","scope":2456,"src":"6243:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:6"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2456,"src":"6277:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:6"},"scope":3686,"src":"6215:704:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2591,"nodeType":"Block","src":"7340:3585:6","statements":[{"id":2590,"nodeType":"UncheckedBlock","src":"7350:3569:6","statements":[{"assignments":[2469,2471],"declarations":[{"constant":false,"id":2469,"mutability":"mutable","name":"high","nameLocation":"7383:4:6","nodeType":"VariableDeclaration","scope":2590,"src":"7375:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"low","nameLocation":"7397:3:6","nodeType":"VariableDeclaration","scope":2590,"src":"7389:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2476,"initialValue":{"arguments":[{"id":2473,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"7411:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2474,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"7414:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2472,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"7404:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2477,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"7498:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2485,"nodeType":"IfStatement","src":"7494:365:6","trueBody":{"id":2484,"nodeType":"Block","src":"7509:350:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"7827:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2481,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"7833:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2467,"id":2483,"nodeType":"Return","src":"7820:24:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2486,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"7969:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2487,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"7984:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2504,"nodeType":"IfStatement","src":"7965:142:6","trueBody":{"id":2503,"nodeType":"Block","src":"7990:117:6","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2493,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"8028:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2496,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"8046:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:6","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":196,"src":"8046:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2498,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"8070:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:6","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":192,"src":"8070:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2492,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"8020:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2489,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"8008:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"8008:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2502,"nodeType":"ExpressionStatement","src":"8008:84:6"}]}},{"assignments":[2506],"declarations":[{"constant":false,"id":2506,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:6","nodeType":"VariableDeclaration","scope":2590,"src":"8359:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2505,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2507,"nodeType":"VariableDeclarationStatement","src":"8359:17:6"},{"AST":{"nativeSrc":"8415:283:6","nodeType":"YulBlock","src":"8415:283:6","statements":[{"nativeSrc":"8484:38:6","nodeType":"YulAssignment","src":"8484:38:6","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:6","nodeType":"YulIdentifier","src":"8504:1:6"},{"name":"y","nativeSrc":"8507:1:6","nodeType":"YulIdentifier","src":"8507:1:6"},{"name":"denominator","nativeSrc":"8510:11:6","nodeType":"YulIdentifier","src":"8510:11:6"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:6","nodeType":"YulIdentifier","src":"8497:6:6"},"nativeSrc":"8497:25:6","nodeType":"YulFunctionCall","src":"8497:25:6"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:6","nodeType":"YulIdentifier","src":"8484:9:6"}]},{"nativeSrc":"8604:37:6","nodeType":"YulAssignment","src":"8604:37:6","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:6","nodeType":"YulIdentifier","src":"8616:4:6"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:6","nodeType":"YulIdentifier","src":"8625:9:6"},{"name":"low","nativeSrc":"8636:3:6","nodeType":"YulIdentifier","src":"8636:3:6"}],"functionName":{"name":"gt","nativeSrc":"8622:2:6","nodeType":"YulIdentifier","src":"8622:2:6"},"nativeSrc":"8622:18:6","nodeType":"YulFunctionCall","src":"8622:18:6"}],"functionName":{"name":"sub","nativeSrc":"8612:3:6","nodeType":"YulIdentifier","src":"8612:3:6"},"nativeSrc":"8612:29:6","nodeType":"YulFunctionCall","src":"8612:29:6"},"variableNames":[{"name":"high","nativeSrc":"8604:4:6","nodeType":"YulIdentifier","src":"8604:4:6"}]},{"nativeSrc":"8658:26:6","nodeType":"YulAssignment","src":"8658:26:6","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:6","nodeType":"YulIdentifier","src":"8669:3:6"},{"name":"remainder","nativeSrc":"8674:9:6","nodeType":"YulIdentifier","src":"8674:9:6"}],"functionName":{"name":"sub","nativeSrc":"8665:3:6","nodeType":"YulIdentifier","src":"8665:3:6"},"nativeSrc":"8665:19:6","nodeType":"YulFunctionCall","src":"8665:19:6"},"variableNames":[{"name":"low","nativeSrc":"8658:3:6","nodeType":"YulIdentifier","src":"8658:3:6"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2463,"isOffset":false,"isSlot":false,"src":"8510:11:6","valueSize":1},{"declaration":2469,"isOffset":false,"isSlot":false,"src":"8604:4:6","valueSize":1},{"declaration":2469,"isOffset":false,"isSlot":false,"src":"8616:4:6","valueSize":1},{"declaration":2471,"isOffset":false,"isSlot":false,"src":"8636:3:6","valueSize":1},{"declaration":2471,"isOffset":false,"isSlot":false,"src":"8658:3:6","valueSize":1},{"declaration":2471,"isOffset":false,"isSlot":false,"src":"8669:3:6","valueSize":1},{"declaration":2506,"isOffset":false,"isSlot":false,"src":"8484:9:6","valueSize":1},{"declaration":2506,"isOffset":false,"isSlot":false,"src":"8625:9:6","valueSize":1},{"declaration":2506,"isOffset":false,"isSlot":false,"src":"8674:9:6","valueSize":1},{"declaration":2459,"isOffset":false,"isSlot":false,"src":"8504:1:6","valueSize":1},{"declaration":2461,"isOffset":false,"isSlot":false,"src":"8507:1:6","valueSize":1}],"flags":["memory-safe"],"id":2508,"nodeType":"InlineAssembly","src":"8390:308:6"},{"assignments":[2510],"declarations":[{"constant":false,"id":2510,"mutability":"mutable","name":"twos","nameLocation":"8910:4:6","nodeType":"VariableDeclaration","scope":2590,"src":"8902:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2517,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2511,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"8917:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2513,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"8936:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:6"},{"AST":{"nativeSrc":"8987:359:6","nodeType":"YulBlock","src":"8987:359:6","statements":[{"nativeSrc":"9052:37:6","nodeType":"YulAssignment","src":"9052:37:6","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:6","nodeType":"YulIdentifier","src":"9071:11:6"},{"name":"twos","nativeSrc":"9084:4:6","nodeType":"YulIdentifier","src":"9084:4:6"}],"functionName":{"name":"div","nativeSrc":"9067:3:6","nodeType":"YulIdentifier","src":"9067:3:6"},"nativeSrc":"9067:22:6","nodeType":"YulFunctionCall","src":"9067:22:6"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:6","nodeType":"YulIdentifier","src":"9052:11:6"}]},{"nativeSrc":"9153:21:6","nodeType":"YulAssignment","src":"9153:21:6","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:6","nodeType":"YulIdentifier","src":"9164:3:6"},{"name":"twos","nativeSrc":"9169:4:6","nodeType":"YulIdentifier","src":"9169:4:6"}],"functionName":{"name":"div","nativeSrc":"9160:3:6","nodeType":"YulIdentifier","src":"9160:3:6"},"nativeSrc":"9160:14:6","nodeType":"YulFunctionCall","src":"9160:14:6"},"variableNames":[{"name":"low","nativeSrc":"9153:3:6","nodeType":"YulIdentifier","src":"9153:3:6"}]},{"nativeSrc":"9293:39:6","nodeType":"YulAssignment","src":"9293:39:6","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:6","nodeType":"YulLiteral","src":"9313:1:6","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:6","nodeType":"YulIdentifier","src":"9316:4:6"}],"functionName":{"name":"sub","nativeSrc":"9309:3:6","nodeType":"YulIdentifier","src":"9309:3:6"},"nativeSrc":"9309:12:6","nodeType":"YulFunctionCall","src":"9309:12:6"},{"name":"twos","nativeSrc":"9323:4:6","nodeType":"YulIdentifier","src":"9323:4:6"}],"functionName":{"name":"div","nativeSrc":"9305:3:6","nodeType":"YulIdentifier","src":"9305:3:6"},"nativeSrc":"9305:23:6","nodeType":"YulFunctionCall","src":"9305:23:6"},{"kind":"number","nativeSrc":"9330:1:6","nodeType":"YulLiteral","src":"9330:1:6","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:6","nodeType":"YulIdentifier","src":"9301:3:6"},"nativeSrc":"9301:31:6","nodeType":"YulFunctionCall","src":"9301:31:6"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:6","nodeType":"YulIdentifier","src":"9293:4:6"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2463,"isOffset":false,"isSlot":false,"src":"9052:11:6","valueSize":1},{"declaration":2463,"isOffset":false,"isSlot":false,"src":"9071:11:6","valueSize":1},{"declaration":2471,"isOffset":false,"isSlot":false,"src":"9153:3:6","valueSize":1},{"declaration":2471,"isOffset":false,"isSlot":false,"src":"9164:3:6","valueSize":1},{"declaration":2510,"isOffset":false,"isSlot":false,"src":"9084:4:6","valueSize":1},{"declaration":2510,"isOffset":false,"isSlot":false,"src":"9169:4:6","valueSize":1},{"declaration":2510,"isOffset":false,"isSlot":false,"src":"9293:4:6","valueSize":1},{"declaration":2510,"isOffset":false,"isSlot":false,"src":"9316:4:6","valueSize":1},{"declaration":2510,"isOffset":false,"isSlot":false,"src":"9323:4:6","valueSize":1}],"flags":["memory-safe"],"id":2518,"nodeType":"InlineAssembly","src":"8962:384:6"},{"expression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2519,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"9409:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2520,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"9416:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2521,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"9423:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2524,"nodeType":"ExpressionStatement","src":"9409:18:6"},{"assignments":[2526],"declarations":[{"constant":false,"id":2526,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:6","nodeType":"VariableDeclaration","scope":2590,"src":"9762:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2533,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2528,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"9785:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:6"},{"expression":{"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2534,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10018:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2536,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"10033:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2537,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10047:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2541,"nodeType":"ExpressionStatement","src":"10018:36:6"},{"expression":{"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2542,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10088:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"10103:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2545,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10117:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2549,"nodeType":"ExpressionStatement","src":"10088:36:6"},{"expression":{"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2550,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10160:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2552,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"10175:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2553,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10189:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2557,"nodeType":"ExpressionStatement","src":"10160:36:6"},{"expression":{"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2558,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10231:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"10246:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2561,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10260:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2565,"nodeType":"ExpressionStatement","src":"10231:36:6"},{"expression":{"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2566,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10304:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2568,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"10319:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2569,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10333:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2573,"nodeType":"ExpressionStatement","src":"10304:36:6"},{"expression":{"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2574,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10378:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2576,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"10393:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2577,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10407:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2581,"nodeType":"ExpressionStatement","src":"10378:36:6"},{"expression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"10859:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"10868:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2584,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"10874:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2587,"nodeType":"ExpressionStatement","src":"10859:22:6"},{"expression":{"id":2588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"10902:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2467,"id":2589,"nodeType":"Return","src":"10895:13:6"}]}]},"documentation":{"id":2457,"nodeType":"StructuredDocumentation","src":"6925:312:6","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2592,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:6","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"mutability":"mutable","name":"x","nameLocation":"7266:1:6","nodeType":"VariableDeclaration","scope":2592,"src":"7258:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2458,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2461,"mutability":"mutable","name":"y","nameLocation":"7277:1:6","nodeType":"VariableDeclaration","scope":2592,"src":"7269:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:6","nodeType":"VariableDeclaration","scope":2592,"src":"7280:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:6"},"returnParameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"result","nameLocation":"7332:6:6","nodeType":"VariableDeclaration","scope":2592,"src":"7324:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:6"},"scope":3686,"src":"7242:3683:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2628,"nodeType":"Block","src":"11164:128:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2608,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"11188:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2609,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"11191:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2610,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"11194:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2607,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2592,2629],"referencedDeclaration":2592,"src":"11181:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2615,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"11242:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}],"id":2614,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"11225:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2077_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2618,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"11262:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2619,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"11265:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2620,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"11268:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2617,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:6","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2612,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"11209:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"11209:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2606,"id":2627,"nodeType":"Return","src":"11174:111:6"}]},"documentation":{"id":2593,"nodeType":"StructuredDocumentation","src":"10931:118:6","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2629,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:6","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"x","nameLocation":"11078:1:6","nodeType":"VariableDeclaration","scope":2629,"src":"11070:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"y","nameLocation":"11089:1:6","nodeType":"VariableDeclaration","scope":2629,"src":"11081:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2596,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:6","nodeType":"VariableDeclaration","scope":2629,"src":"11092:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:6","nodeType":"VariableDeclaration","scope":2629,"src":"11113:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"},"typeName":{"id":2601,"nodeType":"UserDefinedTypeName","pathNode":{"id":2600,"name":"Rounding","nameLocations":["11113:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2077,"src":"11113:8:6"},"referencedDeclaration":2077,"src":"11113:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:6"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2629,"src":"11155:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:6"},"scope":3686,"src":"11054:238:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2678,"nodeType":"Block","src":"11500:245:6","statements":[{"id":2677,"nodeType":"UncheckedBlock","src":"11510:229:6","statements":[{"assignments":[2642,2644],"declarations":[{"constant":false,"id":2642,"mutability":"mutable","name":"high","nameLocation":"11543:4:6","nodeType":"VariableDeclaration","scope":2677,"src":"11535:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2644,"mutability":"mutable","name":"low","nameLocation":"11557:3:6","nodeType":"VariableDeclaration","scope":2677,"src":"11549:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2649,"initialValue":{"arguments":[{"id":2646,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"11571:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2647,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"11574:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2645,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"11564:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2650,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"11594:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2652,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"11607:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2663,"nodeType":"IfStatement","src":"11590:86:6","trueBody":{"id":2662,"nodeType":"Block","src":"11610:66:6","statements":[{"expression":{"arguments":[{"expression":{"id":2658,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"11640:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:6","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":192,"src":"11640:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2655,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"11628:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"11628:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2661,"nodeType":"ExpressionStatement","src":"11628:33:6"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"11697:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:6","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2666,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"11712:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":2668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2671,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"11719:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2672,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"11726:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2640,"id":2676,"nodeType":"Return","src":"11689:39:6"}]}]},"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"11298:111:6","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":2679,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:6","nodeType":"FunctionDefinition","parameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"x","nameLocation":"11438:1:6","nodeType":"VariableDeclaration","scope":2679,"src":"11430:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2634,"mutability":"mutable","name":"y","nameLocation":"11449:1:6","nodeType":"VariableDeclaration","scope":2679,"src":"11441:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2636,"mutability":"mutable","name":"n","nameLocation":"11458:1:6","nodeType":"VariableDeclaration","scope":2679,"src":"11452:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2635,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:6"},"returnParameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"result","nameLocation":"11492:6:6","nodeType":"VariableDeclaration","scope":2679,"src":"11484:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:6"},"scope":3686,"src":"11414:331:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2717,"nodeType":"Block","src":"11963:113:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2695,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"11987:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2696,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"11990:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2697,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"11993:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2694,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[2679,2718],"referencedDeclaration":2679,"src":"11980:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2702,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"12031:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}],"id":2701,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"12014:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2077_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2705,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"12051:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2706,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"12054:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2708,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"12062:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2704,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:6","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2699,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"11998:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"11998:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2693,"id":2716,"nodeType":"Return","src":"11973:96:6"}]},"documentation":{"id":2680,"nodeType":"StructuredDocumentation","src":"11751:109:6","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":2718,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:6","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"x","nameLocation":"11889:1:6","nodeType":"VariableDeclaration","scope":2718,"src":"11881:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"y","nameLocation":"11900:1:6","nodeType":"VariableDeclaration","scope":2718,"src":"11892:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2686,"mutability":"mutable","name":"n","nameLocation":"11909:1:6","nodeType":"VariableDeclaration","scope":2718,"src":"11903:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2685,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2689,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:6","nodeType":"VariableDeclaration","scope":2718,"src":"11912:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"},"typeName":{"id":2688,"nodeType":"UserDefinedTypeName","pathNode":{"id":2687,"name":"Rounding","nameLocations":["11912:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2077,"src":"11912:8:6"},"referencedDeclaration":2077,"src":"11912:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:6"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2718,"src":"11954:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:6"},"scope":3686,"src":"11865:211:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2814,"nodeType":"Block","src":"12710:1849:6","statements":[{"id":2813,"nodeType":"UncheckedBlock","src":"12720:1833:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2728,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"12748:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2733,"nodeType":"IfStatement","src":"12744:20:6","trueBody":{"expression":{"hexValue":"30","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2727,"id":2732,"nodeType":"Return","src":"12756:8:6"}},{"assignments":[2735],"declarations":[{"constant":false,"id":2735,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:6","nodeType":"VariableDeclaration","scope":2813,"src":"13235:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2739,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2736,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"13255:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2737,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"13259:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:6"},{"assignments":[2741],"declarations":[{"constant":false,"id":2741,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:6","nodeType":"VariableDeclaration","scope":2813,"src":"13274:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2743,"initialValue":{"id":2742,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"13288:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:6"},{"assignments":[2745],"declarations":[{"constant":false,"id":2745,"mutability":"mutable","name":"x","nameLocation":"13432:1:6","nodeType":"VariableDeclaration","scope":2813,"src":"13425:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2744,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2747,"initialValue":{"hexValue":"30","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:6"},{"assignments":[2749],"declarations":[{"constant":false,"id":2749,"mutability":"mutable","name":"y","nameLocation":"13458:1:6","nodeType":"VariableDeclaration","scope":2813,"src":"13451:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2748,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2751,"initialValue":{"hexValue":"31","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:6"},{"body":{"id":2788,"nodeType":"Block","src":"13501:882:6","statements":[{"assignments":[2756],"declarations":[{"constant":false,"id":2756,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:6","nodeType":"VariableDeclaration","scope":2788,"src":"13519:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2755,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2760,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2757,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"13538:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2758,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"13544:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:6"},{"expression":{"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2761,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"13573:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2762,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"13578:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2763,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2764,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"13678:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2765,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"13923:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2766,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"13929:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2767,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"13941:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2770,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:6","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2772,"nodeType":"ExpressionStatement","src":"13572:395:6"},{"expression":{"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2773,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"13987:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2774,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"13990:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2775,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2776,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"14072:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2777,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"14326:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"14330:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2781,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"14341:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2779,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:6","typeDescriptions":{}}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2785,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:6","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2787,"nodeType":"ExpressionStatement","src":"13986:382:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2752,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"13485:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2789,"nodeType":"WhileStatement","src":"13478:905:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2790,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"14401:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2795,"nodeType":"IfStatement","src":"14397:22:6","trueBody":{"expression":{"hexValue":"30","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2727,"id":2794,"nodeType":"Return","src":"14411:8:6"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2797,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"14470:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2800,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"14477:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:6","subExpression":{"id":2803,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"14490:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:6","typeDescriptions":{}}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2809,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"14502:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:6","typeDescriptions":{}}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2796,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"14462:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2727,"id":2812,"nodeType":"Return","src":"14455:50:6"}]}]},"documentation":{"id":2719,"nodeType":"StructuredDocumentation","src":"12082:553:6","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":2815,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:6","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"a","nameLocation":"12664:1:6","nodeType":"VariableDeclaration","scope":2815,"src":"12656:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2720,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2723,"mutability":"mutable","name":"n","nameLocation":"12675:1:6","nodeType":"VariableDeclaration","scope":2815,"src":"12667:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2722,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:6"},"returnParameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2815,"src":"12701:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2725,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:6"},"scope":3686,"src":"12640:1919:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2835,"nodeType":"Block","src":"15159:82:6","statements":[{"id":2834,"nodeType":"UncheckedBlock","src":"15169:66:6","statements":[{"expression":{"arguments":[{"id":2827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"15212:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2828,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"15215:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2831,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"15222:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2825,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"15200:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3686_$","typeString":"type(library Math)"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:6","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":2872,"src":"15200:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2824,"id":2833,"nodeType":"Return","src":"15193:31:6"}]}]},"documentation":{"id":2816,"nodeType":"StructuredDocumentation","src":"14565:514:6","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":2836,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:6","nodeType":"FunctionDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"a","nameLocation":"15113:1:6","nodeType":"VariableDeclaration","scope":2836,"src":"15105:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2817,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2820,"mutability":"mutable","name":"p","nameLocation":"15124:1:6","nodeType":"VariableDeclaration","scope":2836,"src":"15116:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:6"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2836,"src":"15150:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:6"},"scope":3686,"src":"15084:157:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2871,"nodeType":"Block","src":"16011:174:6","statements":[{"assignments":[2849,2851],"declarations":[{"constant":false,"id":2849,"mutability":"mutable","name":"success","nameLocation":"16027:7:6","nodeType":"VariableDeclaration","scope":2871,"src":"16022:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2848,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2851,"mutability":"mutable","name":"result","nameLocation":"16044:6:6","nodeType":"VariableDeclaration","scope":2871,"src":"16036:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2857,"initialValue":{"arguments":[{"id":2853,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"16064:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2854,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"16067:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2855,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"16070:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2852,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2896,2978],"referencedDeclaration":2896,"src":"16054:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:6"},{"condition":{"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:6","subExpression":{"id":2858,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"16087:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2868,"nodeType":"IfStatement","src":"16082:74:6","trueBody":{"id":2867,"nodeType":"Block","src":"16096:60:6","statements":[{"expression":{"arguments":[{"expression":{"id":2863,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"16122:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:6","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":196,"src":"16122:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2860,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"16110:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"16110:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2866,"nodeType":"ExpressionStatement","src":"16110:35:6"}]}},{"expression":{"id":2869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"16172:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2847,"id":2870,"nodeType":"Return","src":"16165:13:6"}]},"documentation":{"id":2837,"nodeType":"StructuredDocumentation","src":"15247:678:6","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":2872,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:6","nodeType":"FunctionDefinition","parameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"b","nameLocation":"15954:1:6","nodeType":"VariableDeclaration","scope":2872,"src":"15946:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2841,"mutability":"mutable","name":"e","nameLocation":"15965:1:6","nodeType":"VariableDeclaration","scope":2872,"src":"15957:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2840,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2843,"mutability":"mutable","name":"m","nameLocation":"15976:1:6","nodeType":"VariableDeclaration","scope":2872,"src":"15968:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:6"},"returnParameters":{"id":2847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2872,"src":"16002:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2845,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:6"},"scope":3686,"src":"15930:255:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2895,"nodeType":"Block","src":"17039:1493:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2886,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"17053:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2893,"nodeType":"IfStatement","src":"17049:29:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2885,"id":2892,"nodeType":"Return","src":"17061:17:6"}},{"AST":{"nativeSrc":"17113:1413:6","nodeType":"YulBlock","src":"17113:1413:6","statements":[{"nativeSrc":"17127:22:6","nodeType":"YulVariableDeclaration","src":"17127:22:6","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:6","nodeType":"YulLiteral","src":"17144:4:6","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:6","nodeType":"YulIdentifier","src":"17138:5:6"},"nativeSrc":"17138:11:6","nodeType":"YulFunctionCall","src":"17138:11:6"},"variables":[{"name":"ptr","nativeSrc":"17131:3:6","nodeType":"YulTypedName","src":"17131:3:6","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:6","nodeType":"YulIdentifier","src":"18057:3:6"},{"kind":"number","nativeSrc":"18062:4:6","nodeType":"YulLiteral","src":"18062:4:6","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:6","nodeType":"YulIdentifier","src":"18050:6:6"},"nativeSrc":"18050:17:6","nodeType":"YulFunctionCall","src":"18050:17:6"},"nativeSrc":"18050:17:6","nodeType":"YulExpressionStatement","src":"18050:17:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:6","nodeType":"YulIdentifier","src":"18091:3:6"},{"kind":"number","nativeSrc":"18096:4:6","nodeType":"YulLiteral","src":"18096:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:6","nodeType":"YulIdentifier","src":"18087:3:6"},"nativeSrc":"18087:14:6","nodeType":"YulFunctionCall","src":"18087:14:6"},{"kind":"number","nativeSrc":"18103:4:6","nodeType":"YulLiteral","src":"18103:4:6","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:6","nodeType":"YulIdentifier","src":"18080:6:6"},"nativeSrc":"18080:28:6","nodeType":"YulFunctionCall","src":"18080:28:6"},"nativeSrc":"18080:28:6","nodeType":"YulExpressionStatement","src":"18080:28:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:6","nodeType":"YulIdentifier","src":"18132:3:6"},{"kind":"number","nativeSrc":"18137:4:6","nodeType":"YulLiteral","src":"18137:4:6","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:6","nodeType":"YulIdentifier","src":"18128:3:6"},"nativeSrc":"18128:14:6","nodeType":"YulFunctionCall","src":"18128:14:6"},{"kind":"number","nativeSrc":"18144:4:6","nodeType":"YulLiteral","src":"18144:4:6","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:6","nodeType":"YulIdentifier","src":"18121:6:6"},"nativeSrc":"18121:28:6","nodeType":"YulFunctionCall","src":"18121:28:6"},"nativeSrc":"18121:28:6","nodeType":"YulExpressionStatement","src":"18121:28:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:6","nodeType":"YulIdentifier","src":"18173:3:6"},{"kind":"number","nativeSrc":"18178:4:6","nodeType":"YulLiteral","src":"18178:4:6","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:6","nodeType":"YulIdentifier","src":"18169:3:6"},"nativeSrc":"18169:14:6","nodeType":"YulFunctionCall","src":"18169:14:6"},{"name":"b","nativeSrc":"18185:1:6","nodeType":"YulIdentifier","src":"18185:1:6"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:6","nodeType":"YulIdentifier","src":"18162:6:6"},"nativeSrc":"18162:25:6","nodeType":"YulFunctionCall","src":"18162:25:6"},"nativeSrc":"18162:25:6","nodeType":"YulExpressionStatement","src":"18162:25:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:6","nodeType":"YulIdentifier","src":"18211:3:6"},{"kind":"number","nativeSrc":"18216:4:6","nodeType":"YulLiteral","src":"18216:4:6","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:6","nodeType":"YulIdentifier","src":"18207:3:6"},"nativeSrc":"18207:14:6","nodeType":"YulFunctionCall","src":"18207:14:6"},{"name":"e","nativeSrc":"18223:1:6","nodeType":"YulIdentifier","src":"18223:1:6"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:6","nodeType":"YulIdentifier","src":"18200:6:6"},"nativeSrc":"18200:25:6","nodeType":"YulFunctionCall","src":"18200:25:6"},"nativeSrc":"18200:25:6","nodeType":"YulExpressionStatement","src":"18200:25:6"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:6","nodeType":"YulIdentifier","src":"18249:3:6"},{"kind":"number","nativeSrc":"18254:4:6","nodeType":"YulLiteral","src":"18254:4:6","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:6","nodeType":"YulIdentifier","src":"18245:3:6"},"nativeSrc":"18245:14:6","nodeType":"YulFunctionCall","src":"18245:14:6"},{"name":"m","nativeSrc":"18261:1:6","nodeType":"YulIdentifier","src":"18261:1:6"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:6","nodeType":"YulIdentifier","src":"18238:6:6"},"nativeSrc":"18238:25:6","nodeType":"YulFunctionCall","src":"18238:25:6"},"nativeSrc":"18238:25:6","nodeType":"YulExpressionStatement","src":"18238:25:6"},{"nativeSrc":"18425:57:6","nodeType":"YulAssignment","src":"18425:57:6","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:6","nodeType":"YulIdentifier","src":"18447:3:6"},"nativeSrc":"18447:5:6","nodeType":"YulFunctionCall","src":"18447:5:6"},{"kind":"number","nativeSrc":"18454:4:6","nodeType":"YulLiteral","src":"18454:4:6","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:6","nodeType":"YulIdentifier","src":"18460:3:6"},{"kind":"number","nativeSrc":"18465:4:6","nodeType":"YulLiteral","src":"18465:4:6","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:6","nodeType":"YulLiteral","src":"18471:4:6","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:6","nodeType":"YulLiteral","src":"18477:4:6","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:6","nodeType":"YulIdentifier","src":"18436:10:6"},"nativeSrc":"18436:46:6","nodeType":"YulFunctionCall","src":"18436:46:6"},"variableNames":[{"name":"success","nativeSrc":"18425:7:6","nodeType":"YulIdentifier","src":"18425:7:6"}]},{"nativeSrc":"18495:21:6","nodeType":"YulAssignment","src":"18495:21:6","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:6","nodeType":"YulLiteral","src":"18511:4:6","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:6","nodeType":"YulIdentifier","src":"18505:5:6"},"nativeSrc":"18505:11:6","nodeType":"YulFunctionCall","src":"18505:11:6"},"variableNames":[{"name":"result","nativeSrc":"18495:6:6","nodeType":"YulIdentifier","src":"18495:6:6"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2875,"isOffset":false,"isSlot":false,"src":"18185:1:6","valueSize":1},{"declaration":2877,"isOffset":false,"isSlot":false,"src":"18223:1:6","valueSize":1},{"declaration":2879,"isOffset":false,"isSlot":false,"src":"18261:1:6","valueSize":1},{"declaration":2884,"isOffset":false,"isSlot":false,"src":"18495:6:6","valueSize":1},{"declaration":2882,"isOffset":false,"isSlot":false,"src":"18425:7:6","valueSize":1}],"flags":["memory-safe"],"id":2894,"nodeType":"InlineAssembly","src":"17088:1438:6"}]},"documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"16191:738:6","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":2896,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:6","nodeType":"FunctionDefinition","parameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"b","nameLocation":"16961:1:6","nodeType":"VariableDeclaration","scope":2896,"src":"16953:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2877,"mutability":"mutable","name":"e","nameLocation":"16972:1:6","nodeType":"VariableDeclaration","scope":2896,"src":"16964:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2879,"mutability":"mutable","name":"m","nameLocation":"16983:1:6","nodeType":"VariableDeclaration","scope":2896,"src":"16975:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:6"},"returnParameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"success","nameLocation":"17014:7:6","nodeType":"VariableDeclaration","scope":2896,"src":"17009:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2881,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2884,"mutability":"mutable","name":"result","nameLocation":"17031:6:6","nodeType":"VariableDeclaration","scope":2896,"src":"17023:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:6"},"scope":3686,"src":"16934:1598:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2931,"nodeType":"Block","src":"18729:179:6","statements":[{"assignments":[2909,2911],"declarations":[{"constant":false,"id":2909,"mutability":"mutable","name":"success","nameLocation":"18745:7:6","nodeType":"VariableDeclaration","scope":2931,"src":"18740:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2908,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"result","nameLocation":"18767:6:6","nodeType":"VariableDeclaration","scope":2931,"src":"18754:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2910,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2917,"initialValue":{"arguments":[{"id":2913,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"18787:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2914,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"18790:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2915,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"18793:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2912,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2896,2978],"referencedDeclaration":2978,"src":"18777:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:6"},{"condition":{"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:6","subExpression":{"id":2918,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"18810:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2928,"nodeType":"IfStatement","src":"18805:74:6","trueBody":{"id":2927,"nodeType":"Block","src":"18819:60:6","statements":[{"expression":{"arguments":[{"expression":{"id":2923,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"18845:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:6","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":196,"src":"18845:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2920,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"18833:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:6","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"18833:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2926,"nodeType":"ExpressionStatement","src":"18833:35:6"}]}},{"expression":{"id":2929,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"18895:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2907,"id":2930,"nodeType":"Return","src":"18888:13:6"}]},"documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"18538:85:6","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":2932,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:6","nodeType":"FunctionDefinition","parameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"b","nameLocation":"18657:1:6","nodeType":"VariableDeclaration","scope":2932,"src":"18644:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2898,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"e","nameLocation":"18673:1:6","nodeType":"VariableDeclaration","scope":2932,"src":"18660:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2900,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"m","nameLocation":"18689:1:6","nodeType":"VariableDeclaration","scope":2932,"src":"18676:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2902,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:6"},"returnParameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2932,"src":"18715:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2905,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:6"},"scope":3686,"src":"18628:280:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2977,"nodeType":"Block","src":"19162:771:6","statements":[{"condition":{"arguments":[{"id":2947,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"19187:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2946,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"19176:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2956,"nodeType":"IfStatement","src":"19172:47:6","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2950,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":2954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":2945,"id":2955,"nodeType":"Return","src":"19191:28:6"}},{"assignments":[2958],"declarations":[{"constant":false,"id":2958,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:6","nodeType":"VariableDeclaration","scope":2977,"src":"19230:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2961,"initialValue":{"expression":{"id":2959,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"19245:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:6","memberName":"length","nodeType":"MemberAccess","src":"19245:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:6"},{"expression":{"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"19335:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2965,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"19361:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:6","memberName":"length","nodeType":"MemberAccess","src":"19361:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2967,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"19371:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:6","memberName":"length","nodeType":"MemberAccess","src":"19371:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2969,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"19381:4:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2970,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"19387:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2971,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"19390:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2972,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"19393:1:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2963,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:6","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2975,"nodeType":"ExpressionStatement","src":"19335:60:6"},{"AST":{"nativeSrc":"19431:496:6","nodeType":"YulBlock","src":"19431:496:6","statements":[{"nativeSrc":"19445:32:6","nodeType":"YulVariableDeclaration","src":"19445:32:6","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:6","nodeType":"YulIdentifier","src":"19464:6:6"},{"kind":"number","nativeSrc":"19472:4:6","nodeType":"YulLiteral","src":"19472:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:6","nodeType":"YulIdentifier","src":"19460:3:6"},"nativeSrc":"19460:17:6","nodeType":"YulFunctionCall","src":"19460:17:6"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:6","nodeType":"YulTypedName","src":"19449:7:6","type":""}]},{"nativeSrc":"19567:73:6","nodeType":"YulAssignment","src":"19567:73:6","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:6","nodeType":"YulIdentifier","src":"19589:3:6"},"nativeSrc":"19589:5:6","nodeType":"YulFunctionCall","src":"19589:5:6"},{"kind":"number","nativeSrc":"19596:4:6","nodeType":"YulLiteral","src":"19596:4:6","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:6","nodeType":"YulIdentifier","src":"19602:7:6"},{"arguments":[{"name":"result","nativeSrc":"19617:6:6","nodeType":"YulIdentifier","src":"19617:6:6"}],"functionName":{"name":"mload","nativeSrc":"19611:5:6","nodeType":"YulIdentifier","src":"19611:5:6"},"nativeSrc":"19611:13:6","nodeType":"YulFunctionCall","src":"19611:13:6"},{"name":"dataPtr","nativeSrc":"19626:7:6","nodeType":"YulIdentifier","src":"19626:7:6"},{"name":"mLen","nativeSrc":"19635:4:6","nodeType":"YulIdentifier","src":"19635:4:6"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:6","nodeType":"YulIdentifier","src":"19578:10:6"},"nativeSrc":"19578:62:6","nodeType":"YulFunctionCall","src":"19578:62:6"},"variableNames":[{"name":"success","nativeSrc":"19567:7:6","nodeType":"YulIdentifier","src":"19567:7:6"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:6","nodeType":"YulIdentifier","src":"19796:6:6"},{"name":"mLen","nativeSrc":"19804:4:6","nodeType":"YulIdentifier","src":"19804:4:6"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:6","nodeType":"YulIdentifier","src":"19789:6:6"},"nativeSrc":"19789:20:6","nodeType":"YulFunctionCall","src":"19789:20:6"},"nativeSrc":"19789:20:6","nodeType":"YulExpressionStatement","src":"19789:20:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:6","nodeType":"YulLiteral","src":"19892:4:6","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:6","nodeType":"YulIdentifier","src":"19902:7:6"},{"name":"mLen","nativeSrc":"19911:4:6","nodeType":"YulIdentifier","src":"19911:4:6"}],"functionName":{"name":"add","nativeSrc":"19898:3:6","nodeType":"YulIdentifier","src":"19898:3:6"},"nativeSrc":"19898:18:6","nodeType":"YulFunctionCall","src":"19898:18:6"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:6","nodeType":"YulIdentifier","src":"19885:6:6"},"nativeSrc":"19885:32:6","nodeType":"YulFunctionCall","src":"19885:32:6"},"nativeSrc":"19885:32:6","nodeType":"YulExpressionStatement","src":"19885:32:6"}]},"evmVersion":"cancun","externalReferences":[{"declaration":2958,"isOffset":false,"isSlot":false,"src":"19635:4:6","valueSize":1},{"declaration":2958,"isOffset":false,"isSlot":false,"src":"19804:4:6","valueSize":1},{"declaration":2958,"isOffset":false,"isSlot":false,"src":"19911:4:6","valueSize":1},{"declaration":2944,"isOffset":false,"isSlot":false,"src":"19464:6:6","valueSize":1},{"declaration":2944,"isOffset":false,"isSlot":false,"src":"19617:6:6","valueSize":1},{"declaration":2944,"isOffset":false,"isSlot":false,"src":"19796:6:6","valueSize":1},{"declaration":2942,"isOffset":false,"isSlot":false,"src":"19567:7:6","valueSize":1}],"flags":["memory-safe"],"id":2976,"nodeType":"InlineAssembly","src":"19406:521:6"}]},"documentation":{"id":2933,"nodeType":"StructuredDocumentation","src":"18914:88:6","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":2978,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:6","nodeType":"FunctionDefinition","parameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"b","nameLocation":"19048:1:6","nodeType":"VariableDeclaration","scope":2978,"src":"19035:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2934,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"e","nameLocation":"19072:1:6","nodeType":"VariableDeclaration","scope":2978,"src":"19059:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2936,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2939,"mutability":"mutable","name":"m","nameLocation":"19096:1:6","nodeType":"VariableDeclaration","scope":2978,"src":"19083:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2938,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:6"},"returnParameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"success","nameLocation":"19132:7:6","nodeType":"VariableDeclaration","scope":2978,"src":"19127:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2941,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2944,"mutability":"mutable","name":"result","nameLocation":"19154:6:6","nodeType":"VariableDeclaration","scope":2978,"src":"19141:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2943,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:6"},"scope":3686,"src":"19007:926:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3010,"nodeType":"Block","src":"20088:176:6","statements":[{"body":{"id":3006,"nodeType":"Block","src":"20145:92:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2997,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"20163:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2999,"indexExpression":{"id":2998,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"20173:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3005,"nodeType":"IfStatement","src":"20159:68:6","trueBody":{"id":3004,"nodeType":"Block","src":"20182:45:6","statements":[{"expression":{"hexValue":"66616c7365","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2985,"id":3003,"nodeType":"Return","src":"20200:12:6"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2990,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"20118:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2991,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"20122:9:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:6","memberName":"length","nodeType":"MemberAccess","src":"20122:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3007,"initializationExpression":{"assignments":[2987],"declarations":[{"constant":false,"id":2987,"mutability":"mutable","name":"i","nameLocation":"20111:1:6","nodeType":"VariableDeclaration","scope":3007,"src":"20103:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2986,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2989,"initialValue":{"hexValue":"30","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:6"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:6","subExpression":{"id":2994,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"20142:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2996,"nodeType":"ExpressionStatement","src":"20140:3:6"},"nodeType":"ForStatement","src":"20098:139:6"},{"expression":{"hexValue":"74727565","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2985,"id":3009,"nodeType":"Return","src":"20246:11:6"}]},"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"19939:72:6","text":" @dev Returns whether the provided byte array is zero."},"id":3011,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:6","nodeType":"FunctionDefinition","parameters":{"id":2982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2981,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:6","nodeType":"VariableDeclaration","scope":3011,"src":"20036:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2980,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:6"},"returnParameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3011,"src":"20082:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2983,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:6"},"scope":3686,"src":"20016:248:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3229,"nodeType":"Block","src":"20624:5124:6","statements":[{"id":3228,"nodeType":"UncheckedBlock","src":"20634:5108:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"20728:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3025,"nodeType":"IfStatement","src":"20724:53:6","trueBody":{"id":3024,"nodeType":"Block","src":"20736:41:6","statements":[{"expression":{"id":3022,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"20761:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3018,"id":3023,"nodeType":"Return","src":"20754:8:6"}]}},{"assignments":[3027],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"aa","nameLocation":"21712:2:6","nodeType":"VariableDeclaration","scope":3228,"src":"21704:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3029,"initialValue":{"id":3028,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"21717:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:6"},{"assignments":[3031],"declarations":[{"constant":false,"id":3031,"mutability":"mutable","name":"xn","nameLocation":"21740:2:6","nodeType":"VariableDeclaration","scope":3228,"src":"21732:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3033,"initialValue":{"hexValue":"31","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"21765:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3038,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3049,"nodeType":"IfStatement","src":"21761:92:6","trueBody":{"id":3048,"nodeType":"Block","src":"21783:70:6","statements":[{"expression":{"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3040,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"21801:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3043,"nodeType":"ExpressionStatement","src":"21801:10:6"},{"expression":{"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3044,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"21829:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3047,"nodeType":"ExpressionStatement","src":"21829:9:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3050,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"21870:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3065,"nodeType":"IfStatement","src":"21866:90:6","trueBody":{"id":3064,"nodeType":"Block","src":"21887:69:6","statements":[{"expression":{"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3056,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"21905:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3059,"nodeType":"ExpressionStatement","src":"21905:9:6"},{"expression":{"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3060,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"21932:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3063,"nodeType":"ExpressionStatement","src":"21932:9:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"21973:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3081,"nodeType":"IfStatement","src":"21969:90:6","trueBody":{"id":3080,"nodeType":"Block","src":"21990:69:6","statements":[{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3072,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22008:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3075,"nodeType":"ExpressionStatement","src":"22008:9:6"},{"expression":{"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3076,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"22035:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3079,"nodeType":"ExpressionStatement","src":"22035:9:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3082,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22076:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:6","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:6","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3097,"nodeType":"IfStatement","src":"22072:89:6","trueBody":{"id":3096,"nodeType":"Block","src":"22093:68:6","statements":[{"expression":{"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3088,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22111:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3091,"nodeType":"ExpressionStatement","src":"22111:9:6"},{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3092,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"22138:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ExpressionStatement","src":"22138:8:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3098,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22178:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:6","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:6","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3113,"nodeType":"IfStatement","src":"22174:87:6","trueBody":{"id":3112,"nodeType":"Block","src":"22194:67:6","statements":[{"expression":{"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3104,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22212:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3107,"nodeType":"ExpressionStatement","src":"22212:8:6"},{"expression":{"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3108,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"22238:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3111,"nodeType":"ExpressionStatement","src":"22238:8:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22278:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3129,"nodeType":"IfStatement","src":"22274:87:6","trueBody":{"id":3128,"nodeType":"Block","src":"22294:67:6","statements":[{"expression":{"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3120,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22312:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3123,"nodeType":"ExpressionStatement","src":"22312:8:6"},{"expression":{"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3124,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"22338:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3127,"nodeType":"ExpressionStatement","src":"22338:8:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"22378:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3141,"nodeType":"IfStatement","src":"22374:61:6","trueBody":{"id":3140,"nodeType":"Block","src":"22394:41:6","statements":[{"expression":{"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3136,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"22412:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3139,"nodeType":"ExpressionStatement","src":"22412:8:6"}]}},{"expression":{"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3142,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"22855:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3144,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"22865:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3150,"nodeType":"ExpressionStatement","src":"22855:18:6"},{"expression":{"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3151,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"24760:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3152,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"24766:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"24771:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3154,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"24775:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3161,"nodeType":"ExpressionStatement","src":"24760:23:6"},{"expression":{"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3162,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"24869:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3163,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"24875:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"24880:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3165,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"24884:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3172,"nodeType":"ExpressionStatement","src":"24869:23:6"},{"expression":{"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3173,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"24980:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3174,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"24986:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"24991:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3176,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"24995:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3183,"nodeType":"ExpressionStatement","src":"24980:23:6"},{"expression":{"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3184,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"25089:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3185,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"25095:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3186,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"25100:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3187,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"25104:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3194,"nodeType":"ExpressionStatement","src":"25089:23:6"},{"expression":{"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3195,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"25199:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3196,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"25205:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"25210:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3198,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"25214:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3205,"nodeType":"ExpressionStatement","src":"25199:23:6"},{"expression":{"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3206,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"25309:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3207,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"25315:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3208,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"25320:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3209,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"25324:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3216,"nodeType":"ExpressionStatement","src":"25309:23:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3217,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"25698:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3220,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"25719:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3221,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"25724:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3222,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"25728:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3218,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"25703:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"25703:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3018,"id":3227,"nodeType":"Return","src":"25691:40:6"}]}]},"documentation":{"id":3012,"nodeType":"StructuredDocumentation","src":"20270:292:6","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":3230,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:6","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"a","nameLocation":"20589:1:6","nodeType":"VariableDeclaration","scope":3230,"src":"20581:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:6"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3230,"src":"20615:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:6"},"scope":3686,"src":"20567:5181:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3263,"nodeType":"Block","src":"25921:171:6","statements":[{"id":3262,"nodeType":"UncheckedBlock","src":"25931:155:6","statements":[{"assignments":[3242],"declarations":[{"constant":false,"id":3242,"mutability":"mutable","name":"result","nameLocation":"25963:6:6","nodeType":"VariableDeclaration","scope":3262,"src":"25955:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3241,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3246,"initialValue":{"arguments":[{"id":3244,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"25977:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3243,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3230,3264],"referencedDeclaration":3230,"src":"25972:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3247,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"26000:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3251,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"26042:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}],"id":3250,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"26025:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2077_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3253,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"26055:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"26064:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"26073:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3248,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"26009:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"26009:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3240,"id":3261,"nodeType":"Return","src":"25993:82:6"}]}]},"documentation":{"id":3231,"nodeType":"StructuredDocumentation","src":"25754:86:6","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":3264,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:6","nodeType":"FunctionDefinition","parameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"a","nameLocation":"25867:1:6","nodeType":"VariableDeclaration","scope":3264,"src":"25859:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3236,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:6","nodeType":"VariableDeclaration","scope":3264,"src":"25870:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"},"typeName":{"id":3235,"nodeType":"UserDefinedTypeName","pathNode":{"id":3234,"name":"Rounding","nameLocations":["25870:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2077,"src":"25870:8:6"},"referencedDeclaration":2077,"src":"25870:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:6"},"returnParameters":{"id":3240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3264,"src":"25912:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3238,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:6"},"scope":3686,"src":"25845:247:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3354,"nodeType":"Block","src":"26281:2334:6","statements":[{"expression":{"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3272,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"26363:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3275,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"26383:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3273,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"26367:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"26367:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:6","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3282,"nodeType":"ExpressionStatement","src":"26363:64:6"},{"expression":{"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3283,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"26503:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3286,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"26525:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3287,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"26530:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3284,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"26508:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"26508:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:6","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3296,"nodeType":"ExpressionStatement","src":"26503:56:6"},{"expression":{"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3297,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"26634:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3300,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"26656:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3301,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"26661:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":3304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3298,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"26639:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"26639:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3310,"nodeType":"ExpressionStatement","src":"26634:48:6"},{"expression":{"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3311,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"26757:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3314,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"26779:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3315,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"26784:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:6","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3312,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"26762:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"26762:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3324,"nodeType":"ExpressionStatement","src":"26757:44:6"},{"expression":{"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3325,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"26874:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3328,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"26896:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3329,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"26901:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3326,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"26879:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"26879:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3338,"nodeType":"ExpressionStatement","src":"26874:42:6"},{"expression":{"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3339,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"26988:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3342,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"27010:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3343,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"27015:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:6","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3340,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"26993:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"26993:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3352,"nodeType":"ExpressionStatement","src":"26988:41:6"},{"AST":{"nativeSrc":"28490:119:6","nodeType":"YulBlock","src":"28490:119:6","statements":[{"nativeSrc":"28504:95:6","nodeType":"YulAssignment","src":"28504:95:6","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:6","nodeType":"YulIdentifier","src":"28512:1:6"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:6","nodeType":"YulIdentifier","src":"28524:1:6"},{"name":"x","nativeSrc":"28527:1:6","nodeType":"YulIdentifier","src":"28527:1:6"}],"functionName":{"name":"shr","nativeSrc":"28520:3:6","nodeType":"YulIdentifier","src":"28520:3:6"},"nativeSrc":"28520:9:6","nodeType":"YulFunctionCall","src":"28520:9:6"},{"kind":"number","nativeSrc":"28531:66:6","nodeType":"YulLiteral","src":"28531:66:6","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:6","nodeType":"YulIdentifier","src":"28515:4:6"},"nativeSrc":"28515:83:6","nodeType":"YulFunctionCall","src":"28515:83:6"}],"functionName":{"name":"or","nativeSrc":"28509:2:6","nodeType":"YulIdentifier","src":"28509:2:6"},"nativeSrc":"28509:90:6","nodeType":"YulFunctionCall","src":"28509:90:6"},"variableNames":[{"name":"r","nativeSrc":"28504:1:6","nodeType":"YulIdentifier","src":"28504:1:6"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3270,"isOffset":false,"isSlot":false,"src":"28504:1:6","valueSize":1},{"declaration":3270,"isOffset":false,"isSlot":false,"src":"28512:1:6","valueSize":1},{"declaration":3270,"isOffset":false,"isSlot":false,"src":"28524:1:6","valueSize":1},{"declaration":3267,"isOffset":false,"isSlot":false,"src":"28527:1:6","valueSize":1}],"flags":["memory-safe"],"id":3353,"nodeType":"InlineAssembly","src":"28465:144:6"}]},"documentation":{"id":3265,"nodeType":"StructuredDocumentation","src":"26098:119:6","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3355,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:6","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"x","nameLocation":"26244:1:6","nodeType":"VariableDeclaration","scope":3355,"src":"26236:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:6"},"returnParameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"r","nameLocation":"26278:1:6","nodeType":"VariableDeclaration","scope":3355,"src":"26270:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:6"},"scope":3686,"src":"26222:2393:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3388,"nodeType":"Block","src":"28848:175:6","statements":[{"id":3387,"nodeType":"UncheckedBlock","src":"28858:159:6","statements":[{"assignments":[3367],"declarations":[{"constant":false,"id":3367,"mutability":"mutable","name":"result","nameLocation":"28890:6:6","nodeType":"VariableDeclaration","scope":3387,"src":"28882:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3366,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3371,"initialValue":{"arguments":[{"id":3369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"28904:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3368,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3355,3389],"referencedDeclaration":3355,"src":"28899:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"28931:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3376,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"28973:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}],"id":3375,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"28956:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2077_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3379,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"28991:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"29000:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3373,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"28940:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"28940:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3365,"id":3386,"nodeType":"Return","src":"28924:82:6"}]}]},"documentation":{"id":3356,"nodeType":"StructuredDocumentation","src":"28621:142:6","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3389,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:6","nodeType":"FunctionDefinition","parameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"value","nameLocation":"28790:5:6","nodeType":"VariableDeclaration","scope":3389,"src":"28782:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3361,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:6","nodeType":"VariableDeclaration","scope":3389,"src":"28797:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"},"typeName":{"id":3360,"nodeType":"UserDefinedTypeName","pathNode":{"id":3359,"name":"Rounding","nameLocations":["28797:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2077,"src":"28797:8:6"},"referencedDeclaration":2077,"src":"28797:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:6"},"returnParameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3389,"src":"28839:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:6"},"scope":3686,"src":"28768:255:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3517,"nodeType":"Block","src":"29216:854:6","statements":[{"assignments":[3398],"declarations":[{"constant":false,"id":3398,"mutability":"mutable","name":"result","nameLocation":"29234:6:6","nodeType":"VariableDeclaration","scope":3517,"src":"29226:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3397,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3400,"initialValue":{"hexValue":"30","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:6"},{"id":3514,"nodeType":"UncheckedBlock","src":"29254:787:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"29282:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3417,"nodeType":"IfStatement","src":"29278:103:6","trueBody":{"id":3416,"nodeType":"Block","src":"29301:80:6","statements":[{"expression":{"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"29319:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3411,"nodeType":"ExpressionStatement","src":"29319:17:6"},{"expression":{"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"29354:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:6","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3415,"nodeType":"ExpressionStatement","src":"29354:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"29398:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3434,"nodeType":"IfStatement","src":"29394:103:6","trueBody":{"id":3433,"nodeType":"Block","src":"29417:80:6","statements":[{"expression":{"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"29435:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3428,"nodeType":"ExpressionStatement","src":"29435:17:6"},{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"29470:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3432,"nodeType":"ExpressionStatement","src":"29470:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"29514:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3451,"nodeType":"IfStatement","src":"29510:103:6","trueBody":{"id":3450,"nodeType":"Block","src":"29533:80:6","statements":[{"expression":{"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"29551:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:6","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3445,"nodeType":"ExpressionStatement","src":"29551:17:6"},{"expression":{"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3446,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"29586:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3449,"nodeType":"ExpressionStatement","src":"29586:12:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"29630:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3468,"nodeType":"IfStatement","src":"29626:100:6","trueBody":{"id":3467,"nodeType":"Block","src":"29648:78:6","statements":[{"expression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"29666:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"nodeType":"ExpressionStatement","src":"29666:16:6"},{"expression":{"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3463,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"29700:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3466,"nodeType":"ExpressionStatement","src":"29700:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"29743:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3485,"nodeType":"IfStatement","src":"29739:100:6","trueBody":{"id":3484,"nodeType":"Block","src":"29761:78:6","statements":[{"expression":{"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"29779:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3479,"nodeType":"ExpressionStatement","src":"29779:16:6"},{"expression":{"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"29813:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3483,"nodeType":"ExpressionStatement","src":"29813:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"29856:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3502,"nodeType":"IfStatement","src":"29852:100:6","trueBody":{"id":3501,"nodeType":"Block","src":"29874:78:6","statements":[{"expression":{"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"29892:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:6","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3496,"nodeType":"ExpressionStatement","src":"29892:16:6"},{"expression":{"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"29926:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3500,"nodeType":"ExpressionStatement","src":"29926:11:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"29969:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3513,"nodeType":"IfStatement","src":"29965:66:6","trueBody":{"id":3512,"nodeType":"Block","src":"29987:44:6","statements":[{"expression":{"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"30005:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3511,"nodeType":"ExpressionStatement","src":"30005:11:6"}]}}]},{"expression":{"id":3515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"30057:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3396,"id":3516,"nodeType":"Return","src":"30050:13:6"}]},"documentation":{"id":3390,"nodeType":"StructuredDocumentation","src":"29029:120:6","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3518,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:6","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"value","nameLocation":"29177:5:6","nodeType":"VariableDeclaration","scope":3518,"src":"29169:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3391,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:6"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3518,"src":"29207:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:6"},"scope":3686,"src":"29154:916:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3551,"nodeType":"Block","src":"30305:177:6","statements":[{"id":3550,"nodeType":"UncheckedBlock","src":"30315:161:6","statements":[{"assignments":[3530],"declarations":[{"constant":false,"id":3530,"mutability":"mutable","name":"result","nameLocation":"30347:6:6","nodeType":"VariableDeclaration","scope":3550,"src":"30339:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3534,"initialValue":{"arguments":[{"id":3532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"30362:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3531,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3518,3552],"referencedDeclaration":3518,"src":"30356:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"30389:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3539,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"30431:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}],"id":3538,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"30414:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2077_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3542,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"30450:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"30459:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3536,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"30398:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"30398:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3528,"id":3549,"nodeType":"Return","src":"30382:83:6"}]}]},"documentation":{"id":3519,"nodeType":"StructuredDocumentation","src":"30076:143:6","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3552,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:6","nodeType":"FunctionDefinition","parameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"value","nameLocation":"30247:5:6","nodeType":"VariableDeclaration","scope":3552,"src":"30239:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3520,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:6","nodeType":"VariableDeclaration","scope":3552,"src":"30254:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"},"typeName":{"id":3523,"nodeType":"UserDefinedTypeName","pathNode":{"id":3522,"name":"Rounding","nameLocations":["30254:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2077,"src":"30254:8:6"},"referencedDeclaration":2077,"src":"30254:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:6"},"returnParameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3552,"src":"30296:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:6"},"scope":3686,"src":"30224:258:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3628,"nodeType":"Block","src":"30800:675:6","statements":[{"expression":{"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3560,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"30882:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3563,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"30902:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:6","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3561,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"30886:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"30886:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":3567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:6","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3570,"nodeType":"ExpressionStatement","src":"30882:64:6"},{"expression":{"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3571,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"31022:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3574,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"31044:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3575,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"31049:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:6","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3572,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"31027:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"31027:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:6","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3584,"nodeType":"ExpressionStatement","src":"31022:56:6"},{"expression":{"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3585,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"31153:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"31175:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3589,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"31180:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":3592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3586,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"31158:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"31158:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3598,"nodeType":"ExpressionStatement","src":"31153:48:6"},{"expression":{"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3599,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"31276:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3602,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"31298:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3603,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"31303:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:6","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3600,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"31281:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"31281:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3612,"nodeType":"ExpressionStatement","src":"31276:44:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3613,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"31426:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3619,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"31453:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3620,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3558,"src":"31458:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3622,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3617,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"31436:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"31436:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3559,"id":3627,"nodeType":"Return","src":"31418:50:6"}]},"documentation":{"id":3553,"nodeType":"StructuredDocumentation","src":"30488:246:6","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3629,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:6","nodeType":"FunctionDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"x","nameLocation":"30763:1:6","nodeType":"VariableDeclaration","scope":3629,"src":"30755:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:6"},"returnParameters":{"id":3559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"r","nameLocation":"30797:1:6","nodeType":"VariableDeclaration","scope":3629,"src":"30789:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:6"},"scope":3686,"src":"30739:736:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3665,"nodeType":"Block","src":"31712:184:6","statements":[{"id":3664,"nodeType":"UncheckedBlock","src":"31722:168:6","statements":[{"assignments":[3641],"declarations":[{"constant":false,"id":3641,"mutability":"mutable","name":"result","nameLocation":"31754:6:6","nodeType":"VariableDeclaration","scope":3664,"src":"31746:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3640,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3645,"initialValue":{"arguments":[{"id":3643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"31770:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3642,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3629,3666],"referencedDeclaration":3629,"src":"31763:6:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"31797:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3650,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"31839:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}],"id":3649,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"31822:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2077_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"31858:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"31873:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3647,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"31806:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"31806:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3639,"id":3663,"nodeType":"Return","src":"31790:89:6"}]}]},"documentation":{"id":3630,"nodeType":"StructuredDocumentation","src":"31481:144:6","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3666,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:6","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3632,"mutability":"mutable","name":"value","nameLocation":"31654:5:6","nodeType":"VariableDeclaration","scope":3666,"src":"31646:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:6","nodeType":"VariableDeclaration","scope":3666,"src":"31661:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"},"typeName":{"id":3634,"nodeType":"UserDefinedTypeName","pathNode":{"id":3633,"name":"Rounding","nameLocations":["31661:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2077,"src":"31661:8:6"},"referencedDeclaration":2077,"src":"31661:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:6"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3666,"src":"31703:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:6"},"scope":3686,"src":"31630:266:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3684,"nodeType":"Block","src":"32094:48:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3677,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"32117:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}],"id":3676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3675,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:6","typeDescriptions":{}}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3674,"id":3683,"nodeType":"Return","src":"32104:31:6"}]},"documentation":{"id":3667,"nodeType":"StructuredDocumentation","src":"31902:113:6","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3685,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:6","nodeType":"FunctionDefinition","parameters":{"id":3671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:6","nodeType":"VariableDeclaration","scope":3685,"src":"32046:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"},"typeName":{"id":3669,"nodeType":"UserDefinedTypeName","pathNode":{"id":3668,"name":"Rounding","nameLocations":["32046:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":2077,"src":"32046:8:6"},"referencedDeclaration":2077,"src":"32046:8:6","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2077","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:6"},"returnParameters":{"id":3674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3685,"src":"32088:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3672,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:6"},"scope":3686,"src":"32020:122:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3687,"src":"281:31863:6","usedErrors":[],"usedEvents":[]}],"src":"103:32042:6"},"id":6},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5451]},"id":5452,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3688,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3689,"nodeType":"StructuredDocumentation","src":"218:550:7","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5451,"linearizedBaseContracts":[5451],"name":"SafeCast","nameLocation":"777:8:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3690,"nodeType":"StructuredDocumentation","src":"792:68:7","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":3696,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:7","nodeType":"ErrorDefinition","parameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"bits","nameLocation":"908:4:7","nodeType":"VariableDeclaration","scope":3696,"src":"902:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3691,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3694,"mutability":"mutable","name":"value","nameLocation":"922:5:7","nodeType":"VariableDeclaration","scope":3696,"src":"914:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:7"},"src":"865:64:7"},{"documentation":{"id":3697,"nodeType":"StructuredDocumentation","src":"935:75:7","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":3701,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:7","nodeType":"ErrorDefinition","parameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"value","nameLocation":"1056:5:7","nodeType":"VariableDeclaration","scope":3701,"src":"1049:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3698,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:7"},"src":"1015:48:7"},{"documentation":{"id":3702,"nodeType":"StructuredDocumentation","src":"1069:67:7","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":3708,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:7","nodeType":"ErrorDefinition","parameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"bits","nameLocation":"1183:4:7","nodeType":"VariableDeclaration","scope":3708,"src":"1177:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3703,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"value","nameLocation":"1196:5:7","nodeType":"VariableDeclaration","scope":3708,"src":"1189:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3705,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:7"},"src":"1141:62:7"},{"documentation":{"id":3709,"nodeType":"StructuredDocumentation","src":"1209:75:7","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":3713,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:7","nodeType":"ErrorDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3711,"mutability":"mutable","name":"value","nameLocation":"1331:5:7","nodeType":"VariableDeclaration","scope":3713,"src":"1323:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:7"},"src":"1289:49:7"},{"body":{"id":3740,"nodeType":"Block","src":"1695:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"1709:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3723,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3722,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:7","memberName":"max","nodeType":"MemberAccess","src":"1717:17:7","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3734,"nodeType":"IfStatement","src":"1705:105:7","trueBody":{"id":3733,"nodeType":"Block","src":"1736:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:7","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"1793:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3728,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"1757:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3732,"nodeType":"RevertStatement","src":"1750:49:7"}]}},{"expression":{"arguments":[{"id":3737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"1834:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3735,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:7","typeDescriptions":{}}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3720,"id":3739,"nodeType":"Return","src":"1819:21:7"}]},"documentation":{"id":3714,"nodeType":"StructuredDocumentation","src":"1344:280:7","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3741,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:7","nodeType":"FunctionDefinition","parameters":{"id":3717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3716,"mutability":"mutable","name":"value","nameLocation":"1656:5:7","nodeType":"VariableDeclaration","scope":3741,"src":"1648:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:7"},"returnParameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3741,"src":"1686:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3718,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:7","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:7"},"scope":5451,"src":"1629:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3768,"nodeType":"Block","src":"2204:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"2218:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3751,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3750,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:7","memberName":"max","nodeType":"MemberAccess","src":"2226:17:7","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3762,"nodeType":"IfStatement","src":"2214:105:7","trueBody":{"id":3761,"nodeType":"Block","src":"2245:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:7","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"2302:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3756,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"2266:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3760,"nodeType":"RevertStatement","src":"2259:49:7"}]}},{"expression":{"arguments":[{"id":3765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"2343:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3763,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:7","typeDescriptions":{}}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3748,"id":3767,"nodeType":"Return","src":"2328:21:7"}]},"documentation":{"id":3742,"nodeType":"StructuredDocumentation","src":"1853:280:7","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:7","nodeType":"FunctionDefinition","parameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3744,"mutability":"mutable","name":"value","nameLocation":"2165:5:7","nodeType":"VariableDeclaration","scope":3769,"src":"2157:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:7"},"returnParameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3769,"src":"2195:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3746,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:7","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:7"},"scope":5451,"src":"2138:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3796,"nodeType":"Block","src":"2713:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2727:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3779,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3778,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:7","memberName":"max","nodeType":"MemberAccess","src":"2735:17:7","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3790,"nodeType":"IfStatement","src":"2723:105:7","trueBody":{"id":3789,"nodeType":"Block","src":"2754:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:7","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2811:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3784,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"2775:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3788,"nodeType":"RevertStatement","src":"2768:49:7"}]}},{"expression":{"arguments":[{"id":3793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"2852:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3791,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:7","typeDescriptions":{}}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3776,"id":3795,"nodeType":"Return","src":"2837:21:7"}]},"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"2362:280:7","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3797,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:7","nodeType":"FunctionDefinition","parameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"value","nameLocation":"2674:5:7","nodeType":"VariableDeclaration","scope":3797,"src":"2666:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:7"},"returnParameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3797,"src":"2704:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3774,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:7","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:7"},"scope":5451,"src":"2647:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3824,"nodeType":"Block","src":"3222:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"3236:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3807,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3806,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:7","memberName":"max","nodeType":"MemberAccess","src":"3244:17:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3818,"nodeType":"IfStatement","src":"3232:105:7","trueBody":{"id":3817,"nodeType":"Block","src":"3263:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:7","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"3320:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3812,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"3284:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3816,"nodeType":"RevertStatement","src":"3277:49:7"}]}},{"expression":{"arguments":[{"id":3821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"3361:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3819,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:7","typeDescriptions":{}}},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3804,"id":3823,"nodeType":"Return","src":"3346:21:7"}]},"documentation":{"id":3798,"nodeType":"StructuredDocumentation","src":"2871:280:7","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3825,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:7","nodeType":"FunctionDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"value","nameLocation":"3183:5:7","nodeType":"VariableDeclaration","scope":3825,"src":"3175:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:7"},"returnParameters":{"id":3804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3825,"src":"3213:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3802,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:7","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:7"},"scope":5451,"src":"3156:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3852,"nodeType":"Block","src":"3731:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"3745:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3835,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3834,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:7","memberName":"max","nodeType":"MemberAccess","src":"3753:17:7","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3846,"nodeType":"IfStatement","src":"3741:105:7","trueBody":{"id":3845,"nodeType":"Block","src":"3772:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:7","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"3829:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3840,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"3793:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3844,"nodeType":"RevertStatement","src":"3786:49:7"}]}},{"expression":{"arguments":[{"id":3849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"3870:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3847,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:7","typeDescriptions":{}}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3832,"id":3851,"nodeType":"Return","src":"3855:21:7"}]},"documentation":{"id":3826,"nodeType":"StructuredDocumentation","src":"3380:280:7","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3853,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:7","nodeType":"FunctionDefinition","parameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"value","nameLocation":"3692:5:7","nodeType":"VariableDeclaration","scope":3853,"src":"3684:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:7"},"returnParameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3853,"src":"3722:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3830,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:7","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:7"},"scope":5451,"src":"3665:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3880,"nodeType":"Block","src":"4240:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"4254:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3863,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3862,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:7","memberName":"max","nodeType":"MemberAccess","src":"4262:17:7","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3874,"nodeType":"IfStatement","src":"4250:105:7","trueBody":{"id":3873,"nodeType":"Block","src":"4281:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:7","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"4338:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3868,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"4302:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3872,"nodeType":"RevertStatement","src":"4295:49:7"}]}},{"expression":{"arguments":[{"id":3877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"4379:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3875,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:7","typeDescriptions":{}}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3860,"id":3879,"nodeType":"Return","src":"4364:21:7"}]},"documentation":{"id":3854,"nodeType":"StructuredDocumentation","src":"3889:280:7","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3881,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:7","nodeType":"FunctionDefinition","parameters":{"id":3857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"value","nameLocation":"4201:5:7","nodeType":"VariableDeclaration","scope":3881,"src":"4193:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:7"},"returnParameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3881,"src":"4231:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3858,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:7","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:7"},"scope":5451,"src":"4174:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3908,"nodeType":"Block","src":"4749:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"4763:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3891,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":3890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:7","memberName":"max","nodeType":"MemberAccess","src":"4771:17:7","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3902,"nodeType":"IfStatement","src":"4759:105:7","trueBody":{"id":3901,"nodeType":"Block","src":"4790:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:7","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"4847:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3896,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"4811:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3900,"nodeType":"RevertStatement","src":"4804:49:7"}]}},{"expression":{"arguments":[{"id":3905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"4888:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3903,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:7","typeDescriptions":{}}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":3888,"id":3907,"nodeType":"Return","src":"4873:21:7"}]},"documentation":{"id":3882,"nodeType":"StructuredDocumentation","src":"4398:280:7","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3909,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:7","nodeType":"FunctionDefinition","parameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"value","nameLocation":"4710:5:7","nodeType":"VariableDeclaration","scope":3909,"src":"4702:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:7"},"returnParameters":{"id":3888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3909,"src":"4740:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":3886,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:7","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:7"},"scope":5451,"src":"4683:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3936,"nodeType":"Block","src":"5258:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"5272:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3919,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":3918,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:7","memberName":"max","nodeType":"MemberAccess","src":"5280:17:7","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3930,"nodeType":"IfStatement","src":"5268:105:7","trueBody":{"id":3929,"nodeType":"Block","src":"5299:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:7","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"5356:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3924,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"5320:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3928,"nodeType":"RevertStatement","src":"5313:49:7"}]}},{"expression":{"arguments":[{"id":3933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"5397:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3931,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:7","typeDescriptions":{}}},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":3916,"id":3935,"nodeType":"Return","src":"5382:21:7"}]},"documentation":{"id":3910,"nodeType":"StructuredDocumentation","src":"4907:280:7","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3937,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:7","nodeType":"FunctionDefinition","parameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3912,"mutability":"mutable","name":"value","nameLocation":"5219:5:7","nodeType":"VariableDeclaration","scope":3937,"src":"5211:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:7"},"returnParameters":{"id":3916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3937,"src":"5249:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3914,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:7","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:7"},"scope":5451,"src":"5192:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3964,"nodeType":"Block","src":"5767:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"5781:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3947,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":3946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":3950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:7","memberName":"max","nodeType":"MemberAccess","src":"5789:17:7","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3958,"nodeType":"IfStatement","src":"5777:105:7","trueBody":{"id":3957,"nodeType":"Block","src":"5808:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:7","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"5865:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3952,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"5829:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3956,"nodeType":"RevertStatement","src":"5822:49:7"}]}},{"expression":{"arguments":[{"id":3961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"5906:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3959,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:7","typeDescriptions":{}}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":3944,"id":3963,"nodeType":"Return","src":"5891:21:7"}]},"documentation":{"id":3938,"nodeType":"StructuredDocumentation","src":"5416:280:7","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3965,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:7","nodeType":"FunctionDefinition","parameters":{"id":3941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"mutability":"mutable","name":"value","nameLocation":"5728:5:7","nodeType":"VariableDeclaration","scope":3965,"src":"5720:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:7"},"returnParameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3965,"src":"5758:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":3942,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:7","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:7"},"scope":5451,"src":"5701:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3992,"nodeType":"Block","src":"6276:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"6290:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3975,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":3974,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:7","memberName":"max","nodeType":"MemberAccess","src":"6298:17:7","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3986,"nodeType":"IfStatement","src":"6286:105:7","trueBody":{"id":3985,"nodeType":"Block","src":"6317:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:7","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"6374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3980,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"6338:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3984,"nodeType":"RevertStatement","src":"6331:49:7"}]}},{"expression":{"arguments":[{"id":3989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"6415:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3987,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:7","typeDescriptions":{}}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3972,"id":3991,"nodeType":"Return","src":"6400:21:7"}]},"documentation":{"id":3966,"nodeType":"StructuredDocumentation","src":"5925:280:7","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3993,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:7","nodeType":"FunctionDefinition","parameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"value","nameLocation":"6237:5:7","nodeType":"VariableDeclaration","scope":3993,"src":"6229:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:7"},"returnParameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3993,"src":"6267:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3970,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:7","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:7"},"scope":5451,"src":"6210:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4020,"nodeType":"Block","src":"6785:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"6799:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4003,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4002,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:7","memberName":"max","nodeType":"MemberAccess","src":"6807:17:7","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4014,"nodeType":"IfStatement","src":"6795:105:7","trueBody":{"id":4013,"nodeType":"Block","src":"6826:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:7","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"6883:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4008,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"6847:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4012,"nodeType":"RevertStatement","src":"6840:49:7"}]}},{"expression":{"arguments":[{"id":4017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"6924:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4015,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:7","typeDescriptions":{}}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4000,"id":4019,"nodeType":"Return","src":"6909:21:7"}]},"documentation":{"id":3994,"nodeType":"StructuredDocumentation","src":"6434:280:7","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4021,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:7","nodeType":"FunctionDefinition","parameters":{"id":3997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"mutability":"mutable","name":"value","nameLocation":"6746:5:7","nodeType":"VariableDeclaration","scope":4021,"src":"6738:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3995,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:7"},"returnParameters":{"id":4000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4021,"src":"6776:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":3998,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:7","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:7"},"scope":5451,"src":"6719:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4048,"nodeType":"Block","src":"7294:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"7308:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4031,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:7","memberName":"max","nodeType":"MemberAccess","src":"7316:17:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4042,"nodeType":"IfStatement","src":"7304:105:7","trueBody":{"id":4041,"nodeType":"Block","src":"7335:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:7","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"7392:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4036,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"7356:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4040,"nodeType":"RevertStatement","src":"7349:49:7"}]}},{"expression":{"arguments":[{"id":4045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"7433:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4043,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:7","typeDescriptions":{}}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4028,"id":4047,"nodeType":"Return","src":"7418:21:7"}]},"documentation":{"id":4022,"nodeType":"StructuredDocumentation","src":"6943:280:7","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4049,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:7","nodeType":"FunctionDefinition","parameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"value","nameLocation":"7255:5:7","nodeType":"VariableDeclaration","scope":4049,"src":"7247:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4023,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:7"},"returnParameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4049,"src":"7285:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4026,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:7","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:7"},"scope":5451,"src":"7228:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4076,"nodeType":"Block","src":"7803:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"7817:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4059,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4058,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:7","memberName":"max","nodeType":"MemberAccess","src":"7825:17:7","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4070,"nodeType":"IfStatement","src":"7813:105:7","trueBody":{"id":4069,"nodeType":"Block","src":"7844:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:7","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"7901:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4064,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"7865:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4068,"nodeType":"RevertStatement","src":"7858:49:7"}]}},{"expression":{"arguments":[{"id":4073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"7942:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4071,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:7","typeDescriptions":{}}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4056,"id":4075,"nodeType":"Return","src":"7927:21:7"}]},"documentation":{"id":4050,"nodeType":"StructuredDocumentation","src":"7452:280:7","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4077,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:7","nodeType":"FunctionDefinition","parameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"mutability":"mutable","name":"value","nameLocation":"7764:5:7","nodeType":"VariableDeclaration","scope":4077,"src":"7756:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:7"},"returnParameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4077,"src":"7794:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4054,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:7","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:7"},"scope":5451,"src":"7737:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4104,"nodeType":"Block","src":"8312:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"8326:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4087,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4086,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:7","memberName":"max","nodeType":"MemberAccess","src":"8334:17:7","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4098,"nodeType":"IfStatement","src":"8322:105:7","trueBody":{"id":4097,"nodeType":"Block","src":"8353:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:7","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"8410:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4092,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"8374:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4096,"nodeType":"RevertStatement","src":"8367:49:7"}]}},{"expression":{"arguments":[{"id":4101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"8451:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4099,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:7","typeDescriptions":{}}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4084,"id":4103,"nodeType":"Return","src":"8436:21:7"}]},"documentation":{"id":4078,"nodeType":"StructuredDocumentation","src":"7961:280:7","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4105,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:7","nodeType":"FunctionDefinition","parameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"mutability":"mutable","name":"value","nameLocation":"8273:5:7","nodeType":"VariableDeclaration","scope":4105,"src":"8265:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4079,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:7"},"returnParameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4105,"src":"8303:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4082,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:7","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:7"},"scope":5451,"src":"8246:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4132,"nodeType":"Block","src":"8821:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"8835:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4115,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4114,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:7","memberName":"max","nodeType":"MemberAccess","src":"8843:17:7","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4126,"nodeType":"IfStatement","src":"8831:105:7","trueBody":{"id":4125,"nodeType":"Block","src":"8862:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:7","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"8919:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4120,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"8883:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4124,"nodeType":"RevertStatement","src":"8876:49:7"}]}},{"expression":{"arguments":[{"id":4129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"8960:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4127,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:7","typeDescriptions":{}}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4112,"id":4131,"nodeType":"Return","src":"8945:21:7"}]},"documentation":{"id":4106,"nodeType":"StructuredDocumentation","src":"8470:280:7","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4133,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:7","nodeType":"FunctionDefinition","parameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"value","nameLocation":"8782:5:7","nodeType":"VariableDeclaration","scope":4133,"src":"8774:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4107,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:7"},"returnParameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4133,"src":"8812:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4110,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:7","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:7"},"scope":5451,"src":"8755:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4160,"nodeType":"Block","src":"9330:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"9344:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4143,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4142,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:7","memberName":"max","nodeType":"MemberAccess","src":"9352:17:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4154,"nodeType":"IfStatement","src":"9340:105:7","trueBody":{"id":4153,"nodeType":"Block","src":"9371:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"9428:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4148,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"9392:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4152,"nodeType":"RevertStatement","src":"9385:49:7"}]}},{"expression":{"arguments":[{"id":4157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"9469:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4155,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:7","typeDescriptions":{}}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4140,"id":4159,"nodeType":"Return","src":"9454:21:7"}]},"documentation":{"id":4134,"nodeType":"StructuredDocumentation","src":"8979:280:7","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4161,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:7","nodeType":"FunctionDefinition","parameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"value","nameLocation":"9291:5:7","nodeType":"VariableDeclaration","scope":4161,"src":"9283:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4135,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:7"},"returnParameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4161,"src":"9321:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4138,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:7"},"scope":5451,"src":"9264:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4188,"nodeType":"Block","src":"9839:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"9853:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4171,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4170,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:7","memberName":"max","nodeType":"MemberAccess","src":"9861:17:7","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4182,"nodeType":"IfStatement","src":"9849:105:7","trueBody":{"id":4181,"nodeType":"Block","src":"9880:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:7","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"9937:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4176,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"9901:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4180,"nodeType":"RevertStatement","src":"9894:49:7"}]}},{"expression":{"arguments":[{"id":4185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"9978:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4183,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:7","typeDescriptions":{}}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4168,"id":4187,"nodeType":"Return","src":"9963:21:7"}]},"documentation":{"id":4162,"nodeType":"StructuredDocumentation","src":"9488:280:7","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4189,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:7","nodeType":"FunctionDefinition","parameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4164,"mutability":"mutable","name":"value","nameLocation":"9800:5:7","nodeType":"VariableDeclaration","scope":4189,"src":"9792:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4163,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:7"},"returnParameters":{"id":4168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4189,"src":"9830:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4166,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:7","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:7"},"scope":5451,"src":"9773:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4216,"nodeType":"Block","src":"10348:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"10362:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4199,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4198,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:7","memberName":"max","nodeType":"MemberAccess","src":"10370:17:7","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4210,"nodeType":"IfStatement","src":"10358:105:7","trueBody":{"id":4209,"nodeType":"Block","src":"10389:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:7","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"10446:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4204,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"10410:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4208,"nodeType":"RevertStatement","src":"10403:49:7"}]}},{"expression":{"arguments":[{"id":4213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"10487:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4211,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:7","typeDescriptions":{}}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4196,"id":4215,"nodeType":"Return","src":"10472:21:7"}]},"documentation":{"id":4190,"nodeType":"StructuredDocumentation","src":"9997:280:7","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4217,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:7","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4192,"mutability":"mutable","name":"value","nameLocation":"10309:5:7","nodeType":"VariableDeclaration","scope":4217,"src":"10301:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:7"},"returnParameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4217,"src":"10339:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4194,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:7","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:7"},"scope":5451,"src":"10282:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4244,"nodeType":"Block","src":"10857:152:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"10871:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4227,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4226,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:7","memberName":"max","nodeType":"MemberAccess","src":"10879:17:7","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4238,"nodeType":"IfStatement","src":"10867:105:7","trueBody":{"id":4237,"nodeType":"Block","src":"10898:74:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:7","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"10955:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4232,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"10919:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4236,"nodeType":"RevertStatement","src":"10912:49:7"}]}},{"expression":{"arguments":[{"id":4241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"10996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4239,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:7","typeDescriptions":{}}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4224,"id":4243,"nodeType":"Return","src":"10981:21:7"}]},"documentation":{"id":4218,"nodeType":"StructuredDocumentation","src":"10506:280:7","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4245,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:7","nodeType":"FunctionDefinition","parameters":{"id":4221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4220,"mutability":"mutable","name":"value","nameLocation":"10818:5:7","nodeType":"VariableDeclaration","scope":4245,"src":"10810:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:7"},"returnParameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4245,"src":"10848:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4222,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:7","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:7"},"scope":5451,"src":"10791:218:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4272,"nodeType":"Block","src":"11360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"11374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4255,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4254,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:7","memberName":"max","nodeType":"MemberAccess","src":"11382:16:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4266,"nodeType":"IfStatement","src":"11370:103:7","trueBody":{"id":4265,"nodeType":"Block","src":"11400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"11456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4260,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"11421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4264,"nodeType":"RevertStatement","src":"11414:48:7"}]}},{"expression":{"arguments":[{"id":4269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"11496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4267,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:7","typeDescriptions":{}}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4252,"id":4271,"nodeType":"Return","src":"11482:20:7"}]},"documentation":{"id":4246,"nodeType":"StructuredDocumentation","src":"11015:276:7","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4273,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:7","nodeType":"FunctionDefinition","parameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"value","nameLocation":"11322:5:7","nodeType":"VariableDeclaration","scope":4273,"src":"11314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4247,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:7"},"returnParameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4273,"src":"11352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4250,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:7","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:7"},"scope":5451,"src":"11296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4300,"nodeType":"Block","src":"11860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"11874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4283,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4282,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:7","memberName":"max","nodeType":"MemberAccess","src":"11882:16:7","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4294,"nodeType":"IfStatement","src":"11870:103:7","trueBody":{"id":4293,"nodeType":"Block","src":"11900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"11956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4288,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"11921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4292,"nodeType":"RevertStatement","src":"11914:48:7"}]}},{"expression":{"arguments":[{"id":4297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4276,"src":"11996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4295,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:7","typeDescriptions":{}}},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4280,"id":4299,"nodeType":"Return","src":"11982:20:7"}]},"documentation":{"id":4274,"nodeType":"StructuredDocumentation","src":"11515:276:7","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:7","nodeType":"FunctionDefinition","parameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"value","nameLocation":"11822:5:7","nodeType":"VariableDeclaration","scope":4301,"src":"11814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4275,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:7"},"returnParameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"11852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4278,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:7","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:7"},"scope":5451,"src":"11796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4328,"nodeType":"Block","src":"12360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4311,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4310,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:7","memberName":"max","nodeType":"MemberAccess","src":"12382:16:7","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4322,"nodeType":"IfStatement","src":"12370:103:7","trueBody":{"id":4321,"nodeType":"Block","src":"12400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4316,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"12421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4320,"nodeType":"RevertStatement","src":"12414:48:7"}]}},{"expression":{"arguments":[{"id":4325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4323,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:7","typeDescriptions":{}}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4308,"id":4327,"nodeType":"Return","src":"12482:20:7"}]},"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"12015:276:7","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4329,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:7","nodeType":"FunctionDefinition","parameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"value","nameLocation":"12322:5:7","nodeType":"VariableDeclaration","scope":4329,"src":"12314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:7"},"returnParameters":{"id":4308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4329,"src":"12352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4306,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:7","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:7"},"scope":5451,"src":"12296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4356,"nodeType":"Block","src":"12860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"12874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4339,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4338,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:7","memberName":"max","nodeType":"MemberAccess","src":"12882:16:7","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4350,"nodeType":"IfStatement","src":"12870:103:7","trueBody":{"id":4349,"nodeType":"Block","src":"12900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"12956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4344,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"12921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4348,"nodeType":"RevertStatement","src":"12914:48:7"}]}},{"expression":{"arguments":[{"id":4353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"12996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4351,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:7","typeDescriptions":{}}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4336,"id":4355,"nodeType":"Return","src":"12982:20:7"}]},"documentation":{"id":4330,"nodeType":"StructuredDocumentation","src":"12515:276:7","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4357,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:7","nodeType":"FunctionDefinition","parameters":{"id":4333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4332,"mutability":"mutable","name":"value","nameLocation":"12822:5:7","nodeType":"VariableDeclaration","scope":4357,"src":"12814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:7"},"returnParameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4357,"src":"12852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4334,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:7","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:7"},"scope":5451,"src":"12796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4384,"nodeType":"Block","src":"13360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"13374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4367,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:7","memberName":"max","nodeType":"MemberAccess","src":"13382:16:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4378,"nodeType":"IfStatement","src":"13370:103:7","trueBody":{"id":4377,"nodeType":"Block","src":"13400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"13456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4372,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"13421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4376,"nodeType":"RevertStatement","src":"13414:48:7"}]}},{"expression":{"arguments":[{"id":4381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"13496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4379,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:7","typeDescriptions":{}}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4364,"id":4383,"nodeType":"Return","src":"13482:20:7"}]},"documentation":{"id":4358,"nodeType":"StructuredDocumentation","src":"13015:276:7","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4385,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:7","nodeType":"FunctionDefinition","parameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4360,"mutability":"mutable","name":"value","nameLocation":"13322:5:7","nodeType":"VariableDeclaration","scope":4385,"src":"13314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:7"},"returnParameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4385,"src":"13352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4362,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:7","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:7"},"scope":5451,"src":"13296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4412,"nodeType":"Block","src":"13860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"13874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4395,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4394,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:7","memberName":"max","nodeType":"MemberAccess","src":"13882:16:7","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4406,"nodeType":"IfStatement","src":"13870:103:7","trueBody":{"id":4405,"nodeType":"Block","src":"13900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"13956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4400,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"13921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4404,"nodeType":"RevertStatement","src":"13914:48:7"}]}},{"expression":{"arguments":[{"id":4409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"13996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4407,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:7","typeDescriptions":{}}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4392,"id":4411,"nodeType":"Return","src":"13982:20:7"}]},"documentation":{"id":4386,"nodeType":"StructuredDocumentation","src":"13515:276:7","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4413,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:7","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"mutability":"mutable","name":"value","nameLocation":"13822:5:7","nodeType":"VariableDeclaration","scope":4413,"src":"13814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:7"},"returnParameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4413,"src":"13852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4390,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:7","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:7"},"scope":5451,"src":"13796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4440,"nodeType":"Block","src":"14360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"14374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4423,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4422,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:7","memberName":"max","nodeType":"MemberAccess","src":"14382:16:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4434,"nodeType":"IfStatement","src":"14370:103:7","trueBody":{"id":4433,"nodeType":"Block","src":"14400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"14456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4428,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"14421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4432,"nodeType":"RevertStatement","src":"14414:48:7"}]}},{"expression":{"arguments":[{"id":4437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"14496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4435,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:7","typeDescriptions":{}}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4420,"id":4439,"nodeType":"Return","src":"14482:20:7"}]},"documentation":{"id":4414,"nodeType":"StructuredDocumentation","src":"14015:276:7","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4441,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:7","nodeType":"FunctionDefinition","parameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"value","nameLocation":"14322:5:7","nodeType":"VariableDeclaration","scope":4441,"src":"14314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4415,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:7"},"returnParameters":{"id":4420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4441,"src":"14352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4418,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:7"},"scope":5451,"src":"14296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4468,"nodeType":"Block","src":"14860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"14874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4451,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4450,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:7","memberName":"max","nodeType":"MemberAccess","src":"14882:16:7","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4462,"nodeType":"IfStatement","src":"14870:103:7","trueBody":{"id":4461,"nodeType":"Block","src":"14900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"14956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4456,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"14921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4460,"nodeType":"RevertStatement","src":"14914:48:7"}]}},{"expression":{"arguments":[{"id":4465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"14996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4463,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:7","typeDescriptions":{}}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4448,"id":4467,"nodeType":"Return","src":"14982:20:7"}]},"documentation":{"id":4442,"nodeType":"StructuredDocumentation","src":"14515:276:7","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4469,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:7","nodeType":"FunctionDefinition","parameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"value","nameLocation":"14822:5:7","nodeType":"VariableDeclaration","scope":4469,"src":"14814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:7"},"returnParameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4469,"src":"14852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4446,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:7","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:7"},"scope":5451,"src":"14796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4496,"nodeType":"Block","src":"15360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"15374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4479,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4478,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:7","memberName":"max","nodeType":"MemberAccess","src":"15382:16:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4490,"nodeType":"IfStatement","src":"15370:103:7","trueBody":{"id":4489,"nodeType":"Block","src":"15400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"15456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4484,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"15421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4488,"nodeType":"RevertStatement","src":"15414:48:7"}]}},{"expression":{"arguments":[{"id":4493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4472,"src":"15496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4491,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:7","typeDescriptions":{}}},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4476,"id":4495,"nodeType":"Return","src":"15482:20:7"}]},"documentation":{"id":4470,"nodeType":"StructuredDocumentation","src":"15015:276:7","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4497,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:7","nodeType":"FunctionDefinition","parameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"value","nameLocation":"15322:5:7","nodeType":"VariableDeclaration","scope":4497,"src":"15314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4471,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:7"},"returnParameters":{"id":4476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4497,"src":"15352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4474,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:7"},"scope":5451,"src":"15296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4524,"nodeType":"Block","src":"15860:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"15874:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4507,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4506,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:7","memberName":"max","nodeType":"MemberAccess","src":"15882:16:7","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4518,"nodeType":"IfStatement","src":"15870:103:7","trueBody":{"id":4517,"nodeType":"Block","src":"15900:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:7","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"15956:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4512,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"15921:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4516,"nodeType":"RevertStatement","src":"15914:48:7"}]}},{"expression":{"arguments":[{"id":4521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"15996:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4519,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:7","typeDescriptions":{}}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4504,"id":4523,"nodeType":"Return","src":"15982:20:7"}]},"documentation":{"id":4498,"nodeType":"StructuredDocumentation","src":"15515:276:7","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4525,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:7","nodeType":"FunctionDefinition","parameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4500,"mutability":"mutable","name":"value","nameLocation":"15822:5:7","nodeType":"VariableDeclaration","scope":4525,"src":"15814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:7"},"returnParameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4525,"src":"15852:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4502,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:7","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:7"},"scope":5451,"src":"15796:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4552,"nodeType":"Block","src":"16360:149:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"16374:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4535,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4534,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:7","memberName":"max","nodeType":"MemberAccess","src":"16382:16:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4546,"nodeType":"IfStatement","src":"16370:103:7","trueBody":{"id":4545,"nodeType":"Block","src":"16400:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"16456:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4540,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"16421:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4544,"nodeType":"RevertStatement","src":"16414:48:7"}]}},{"expression":{"arguments":[{"id":4549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"16496:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4547,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:7","typeDescriptions":{}}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4532,"id":4551,"nodeType":"Return","src":"16482:20:7"}]},"documentation":{"id":4526,"nodeType":"StructuredDocumentation","src":"16015:276:7","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4553,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:7","nodeType":"FunctionDefinition","parameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"value","nameLocation":"16322:5:7","nodeType":"VariableDeclaration","scope":4553,"src":"16314:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4527,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:7"},"returnParameters":{"id":4532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4553,"src":"16352:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4530,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:7","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:7"},"scope":5451,"src":"16296:213:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4580,"nodeType":"Block","src":"16854:146:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"16868:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4563,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4562,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:7","memberName":"max","nodeType":"MemberAccess","src":"16876:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4574,"nodeType":"IfStatement","src":"16864:101:7","trueBody":{"id":4573,"nodeType":"Block","src":"16893:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"16948:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4568,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"16914:30:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4572,"nodeType":"RevertStatement","src":"16907:47:7"}]}},{"expression":{"arguments":[{"id":4577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"16987:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4575,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:7","typeDescriptions":{}}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4560,"id":4579,"nodeType":"Return","src":"16974:19:7"}]},"documentation":{"id":4554,"nodeType":"StructuredDocumentation","src":"16515:272:7","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4581,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:7","nodeType":"FunctionDefinition","parameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"value","nameLocation":"16817:5:7","nodeType":"VariableDeclaration","scope":4581,"src":"16809:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:7"},"returnParameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4581,"src":"16847:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4558,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:7"},"scope":5451,"src":"16792:208:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4603,"nodeType":"Block","src":"17236:128:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"17250:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4597,"nodeType":"IfStatement","src":"17246:81:7","trueBody":{"id":4596,"nodeType":"Block","src":"17261:66:7","statements":[{"errorCall":{"arguments":[{"id":4593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"17310:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4592,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"17282:27:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4595,"nodeType":"RevertStatement","src":"17275:41:7"}]}},{"expression":{"arguments":[{"id":4600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"17351:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:7","typeDescriptions":{}}},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4588,"id":4602,"nodeType":"Return","src":"17336:21:7"}]},"documentation":{"id":4582,"nodeType":"StructuredDocumentation","src":"17006:160:7","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":4604,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:7","nodeType":"FunctionDefinition","parameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"value","nameLocation":"17197:5:7","nodeType":"VariableDeclaration","scope":4604,"src":"17190:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4583,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:7"},"returnParameters":{"id":4588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4604,"src":"17227:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4586,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:7"},"scope":5451,"src":"17171:193:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4629,"nodeType":"Block","src":"17761:150:7","statements":[{"expression":{"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4612,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"17771:10:7","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"17791:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4613,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:7","typeDescriptions":{}}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:7","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4618,"nodeType":"ExpressionStatement","src":"17771:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4619,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"17811:10:7","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"17825:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4628,"nodeType":"IfStatement","src":"17807:98:7","trueBody":{"id":4627,"nodeType":"Block","src":"17832:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:7","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"17888:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4622,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"17853:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4626,"nodeType":"RevertStatement","src":"17846:48:7"}]}}]},"documentation":{"id":4605,"nodeType":"StructuredDocumentation","src":"17370:312:7","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4630,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:7","nodeType":"FunctionDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4607,"mutability":"mutable","name":"value","nameLocation":"17712:5:7","nodeType":"VariableDeclaration","scope":4630,"src":"17705:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4606,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:7"},"returnParameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:7","nodeType":"VariableDeclaration","scope":4630,"src":"17742:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4609,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:7","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:7"},"scope":5451,"src":"17687:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4655,"nodeType":"Block","src":"18308:150:7","statements":[{"expression":{"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4638,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"18318:10:7","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"18338:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4639,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:7","typeDescriptions":{}}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:7","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4644,"nodeType":"ExpressionStatement","src":"18318:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4645,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"18358:10:7","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"18372:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4654,"nodeType":"IfStatement","src":"18354:98:7","trueBody":{"id":4653,"nodeType":"Block","src":"18379:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:7","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"18435:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4648,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"18400:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4652,"nodeType":"RevertStatement","src":"18393:48:7"}]}}]},"documentation":{"id":4631,"nodeType":"StructuredDocumentation","src":"17917:312:7","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4656,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:7","nodeType":"FunctionDefinition","parameters":{"id":4634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4633,"mutability":"mutable","name":"value","nameLocation":"18259:5:7","nodeType":"VariableDeclaration","scope":4656,"src":"18252:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4632,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:7"},"returnParameters":{"id":4637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4636,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:7","nodeType":"VariableDeclaration","scope":4656,"src":"18289:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4635,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:7","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:7"},"scope":5451,"src":"18234:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4681,"nodeType":"Block","src":"18855:150:7","statements":[{"expression":{"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4664,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"18865:10:7","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"18885:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4665,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:7","typeDescriptions":{}}},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:7","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4670,"nodeType":"ExpressionStatement","src":"18865:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"18905:10:7","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"18919:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4680,"nodeType":"IfStatement","src":"18901:98:7","trueBody":{"id":4679,"nodeType":"Block","src":"18926:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:7","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"18982:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4674,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"18947:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4678,"nodeType":"RevertStatement","src":"18940:48:7"}]}}]},"documentation":{"id":4657,"nodeType":"StructuredDocumentation","src":"18464:312:7","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4682,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:7","nodeType":"FunctionDefinition","parameters":{"id":4660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4659,"mutability":"mutable","name":"value","nameLocation":"18806:5:7","nodeType":"VariableDeclaration","scope":4682,"src":"18799:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4658,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:7"},"returnParameters":{"id":4663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4662,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:7","nodeType":"VariableDeclaration","scope":4682,"src":"18836:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4661,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:7","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:7"},"scope":5451,"src":"18781:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4707,"nodeType":"Block","src":"19402:150:7","statements":[{"expression":{"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4690,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"19412:10:7","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"19432:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4691,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:7","typeDescriptions":{}}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:7","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4696,"nodeType":"ExpressionStatement","src":"19412:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4697,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"19452:10:7","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"19466:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4706,"nodeType":"IfStatement","src":"19448:98:7","trueBody":{"id":4705,"nodeType":"Block","src":"19473:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:7","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"19529:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4700,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"19494:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4704,"nodeType":"RevertStatement","src":"19487:48:7"}]}}]},"documentation":{"id":4683,"nodeType":"StructuredDocumentation","src":"19011:312:7","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4708,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:7","nodeType":"FunctionDefinition","parameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4685,"mutability":"mutable","name":"value","nameLocation":"19353:5:7","nodeType":"VariableDeclaration","scope":4708,"src":"19346:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4684,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:7"},"returnParameters":{"id":4689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4688,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:7","nodeType":"VariableDeclaration","scope":4708,"src":"19383:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4687,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:7","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:7"},"scope":5451,"src":"19328:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4733,"nodeType":"Block","src":"19949:150:7","statements":[{"expression":{"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4716,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"19959:10:7","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"19979:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4717,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:7","typeDescriptions":{}}},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:7","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4722,"nodeType":"ExpressionStatement","src":"19959:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4723,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"19999:10:7","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"20013:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4732,"nodeType":"IfStatement","src":"19995:98:7","trueBody":{"id":4731,"nodeType":"Block","src":"20020:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:7","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"20076:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4726,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"20041:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4730,"nodeType":"RevertStatement","src":"20034:48:7"}]}}]},"documentation":{"id":4709,"nodeType":"StructuredDocumentation","src":"19558:312:7","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4734,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:7","nodeType":"FunctionDefinition","parameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4711,"mutability":"mutable","name":"value","nameLocation":"19900:5:7","nodeType":"VariableDeclaration","scope":4734,"src":"19893:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4710,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:7"},"returnParameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:7","nodeType":"VariableDeclaration","scope":4734,"src":"19930:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4713,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:7","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:7"},"scope":5451,"src":"19875:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4759,"nodeType":"Block","src":"20496:150:7","statements":[{"expression":{"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4742,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"20506:10:7","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"20526:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4743,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:7","typeDescriptions":{}}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:7","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4748,"nodeType":"ExpressionStatement","src":"20506:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4749,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4740,"src":"20546:10:7","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"20560:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4758,"nodeType":"IfStatement","src":"20542:98:7","trueBody":{"id":4757,"nodeType":"Block","src":"20567:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:7","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"20623:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4752,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"20588:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4756,"nodeType":"RevertStatement","src":"20581:48:7"}]}}]},"documentation":{"id":4735,"nodeType":"StructuredDocumentation","src":"20105:312:7","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4760,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:7","nodeType":"FunctionDefinition","parameters":{"id":4738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4737,"mutability":"mutable","name":"value","nameLocation":"20447:5:7","nodeType":"VariableDeclaration","scope":4760,"src":"20440:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4736,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:7"},"returnParameters":{"id":4741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4740,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:7","nodeType":"VariableDeclaration","scope":4760,"src":"20477:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4739,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:7","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:7"},"scope":5451,"src":"20422:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4785,"nodeType":"Block","src":"21043:150:7","statements":[{"expression":{"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4768,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"21053:10:7","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"21073:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4769,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:7","typeDescriptions":{}}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:7","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4774,"nodeType":"ExpressionStatement","src":"21053:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4775,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"21093:10:7","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"21107:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4784,"nodeType":"IfStatement","src":"21089:98:7","trueBody":{"id":4783,"nodeType":"Block","src":"21114:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:7","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"21170:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4778,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"21135:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4782,"nodeType":"RevertStatement","src":"21128:48:7"}]}}]},"documentation":{"id":4761,"nodeType":"StructuredDocumentation","src":"20652:312:7","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4786,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:7","nodeType":"FunctionDefinition","parameters":{"id":4764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4763,"mutability":"mutable","name":"value","nameLocation":"20994:5:7","nodeType":"VariableDeclaration","scope":4786,"src":"20987:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4762,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:7"},"returnParameters":{"id":4767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4766,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:7","nodeType":"VariableDeclaration","scope":4786,"src":"21024:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4765,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:7","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:7"},"scope":5451,"src":"20969:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4811,"nodeType":"Block","src":"21590:150:7","statements":[{"expression":{"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4794,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"21600:10:7","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"21620:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4795,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:7","typeDescriptions":{}}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:7","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4800,"nodeType":"ExpressionStatement","src":"21600:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4801,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"21640:10:7","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"21654:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4810,"nodeType":"IfStatement","src":"21636:98:7","trueBody":{"id":4809,"nodeType":"Block","src":"21661:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:7","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"21717:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4804,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"21682:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4808,"nodeType":"RevertStatement","src":"21675:48:7"}]}}]},"documentation":{"id":4787,"nodeType":"StructuredDocumentation","src":"21199:312:7","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4812,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:7","nodeType":"FunctionDefinition","parameters":{"id":4790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4789,"mutability":"mutable","name":"value","nameLocation":"21541:5:7","nodeType":"VariableDeclaration","scope":4812,"src":"21534:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4788,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:7"},"returnParameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:7","nodeType":"VariableDeclaration","scope":4812,"src":"21571:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4791,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:7","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:7"},"scope":5451,"src":"21516:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4837,"nodeType":"Block","src":"22137:150:7","statements":[{"expression":{"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4820,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"22147:10:7","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"22167:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4821,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:7","typeDescriptions":{}}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:7","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":4826,"nodeType":"ExpressionStatement","src":"22147:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4827,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"22187:10:7","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"22201:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4836,"nodeType":"IfStatement","src":"22183:98:7","trueBody":{"id":4835,"nodeType":"Block","src":"22208:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:7","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"22264:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4830,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"22229:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4834,"nodeType":"RevertStatement","src":"22222:48:7"}]}}]},"documentation":{"id":4813,"nodeType":"StructuredDocumentation","src":"21746:312:7","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4838,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:7","nodeType":"FunctionDefinition","parameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"value","nameLocation":"22088:5:7","nodeType":"VariableDeclaration","scope":4838,"src":"22081:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4814,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:7"},"returnParameters":{"id":4819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:7","nodeType":"VariableDeclaration","scope":4838,"src":"22118:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4817,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:7","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:7"},"scope":5451,"src":"22063:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4863,"nodeType":"Block","src":"22684:150:7","statements":[{"expression":{"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4846,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"22694:10:7","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"22714:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4847,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:7","typeDescriptions":{}}},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:7","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":4852,"nodeType":"ExpressionStatement","src":"22694:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"22734:10:7","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"22748:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4862,"nodeType":"IfStatement","src":"22730:98:7","trueBody":{"id":4861,"nodeType":"Block","src":"22755:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:7","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"22811:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4856,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"22776:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4860,"nodeType":"RevertStatement","src":"22769:48:7"}]}}]},"documentation":{"id":4839,"nodeType":"StructuredDocumentation","src":"22293:312:7","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4864,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:7","nodeType":"FunctionDefinition","parameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"value","nameLocation":"22635:5:7","nodeType":"VariableDeclaration","scope":4864,"src":"22628:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4840,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:7"},"returnParameters":{"id":4845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4844,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:7","nodeType":"VariableDeclaration","scope":4864,"src":"22665:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4843,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:7","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:7"},"scope":5451,"src":"22610:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4889,"nodeType":"Block","src":"23231:150:7","statements":[{"expression":{"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4872,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"23241:10:7","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"23261:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4873,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:7","typeDescriptions":{}}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:7","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":4878,"nodeType":"ExpressionStatement","src":"23241:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4879,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"23281:10:7","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"23295:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4888,"nodeType":"IfStatement","src":"23277:98:7","trueBody":{"id":4887,"nodeType":"Block","src":"23302:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:7","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"23358:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4882,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"23323:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4886,"nodeType":"RevertStatement","src":"23316:48:7"}]}}]},"documentation":{"id":4865,"nodeType":"StructuredDocumentation","src":"22840:312:7","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4890,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:7","nodeType":"FunctionDefinition","parameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4867,"mutability":"mutable","name":"value","nameLocation":"23182:5:7","nodeType":"VariableDeclaration","scope":4890,"src":"23175:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4866,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:7"},"returnParameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4870,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:7","nodeType":"VariableDeclaration","scope":4890,"src":"23212:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4869,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:7","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:7"},"scope":5451,"src":"23157:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4915,"nodeType":"Block","src":"23778:150:7","statements":[{"expression":{"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4898,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"23788:10:7","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"23808:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4899,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:7","typeDescriptions":{}}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:7","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":4904,"nodeType":"ExpressionStatement","src":"23788:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4905,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"23828:10:7","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"23842:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4914,"nodeType":"IfStatement","src":"23824:98:7","trueBody":{"id":4913,"nodeType":"Block","src":"23849:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:7","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"23905:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4908,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"23870:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4912,"nodeType":"RevertStatement","src":"23863:48:7"}]}}]},"documentation":{"id":4891,"nodeType":"StructuredDocumentation","src":"23387:312:7","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4916,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:7","nodeType":"FunctionDefinition","parameters":{"id":4894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"value","nameLocation":"23729:5:7","nodeType":"VariableDeclaration","scope":4916,"src":"23722:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4892,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:7"},"returnParameters":{"id":4897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4896,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:7","nodeType":"VariableDeclaration","scope":4916,"src":"23759:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4895,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:7","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:7"},"scope":5451,"src":"23704:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4941,"nodeType":"Block","src":"24325:150:7","statements":[{"expression":{"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4924,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"24335:10:7","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"24355:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4925,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:7","typeDescriptions":{}}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:7","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":4930,"nodeType":"ExpressionStatement","src":"24335:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4931,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"24375:10:7","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"24389:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4940,"nodeType":"IfStatement","src":"24371:98:7","trueBody":{"id":4939,"nodeType":"Block","src":"24396:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:7","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"24452:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4934,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"24417:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4938,"nodeType":"RevertStatement","src":"24410:48:7"}]}}]},"documentation":{"id":4917,"nodeType":"StructuredDocumentation","src":"23934:312:7","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4942,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:7","nodeType":"FunctionDefinition","parameters":{"id":4920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4919,"mutability":"mutable","name":"value","nameLocation":"24276:5:7","nodeType":"VariableDeclaration","scope":4942,"src":"24269:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4918,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:7"},"returnParameters":{"id":4923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4922,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:7","nodeType":"VariableDeclaration","scope":4942,"src":"24306:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4921,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:7","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:7"},"scope":5451,"src":"24251:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4967,"nodeType":"Block","src":"24872:150:7","statements":[{"expression":{"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4950,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"24882:10:7","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"24902:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4951,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:7","typeDescriptions":{}}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:7","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":4956,"nodeType":"ExpressionStatement","src":"24882:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4957,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"24922:10:7","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"24936:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4966,"nodeType":"IfStatement","src":"24918:98:7","trueBody":{"id":4965,"nodeType":"Block","src":"24943:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:7","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"24999:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4960,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"24964:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4964,"nodeType":"RevertStatement","src":"24957:48:7"}]}}]},"documentation":{"id":4943,"nodeType":"StructuredDocumentation","src":"24481:312:7","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4968,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:7","nodeType":"FunctionDefinition","parameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"value","nameLocation":"24823:5:7","nodeType":"VariableDeclaration","scope":4968,"src":"24816:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4944,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:7"},"returnParameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:7","nodeType":"VariableDeclaration","scope":4968,"src":"24853:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4947,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:7","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:7"},"scope":5451,"src":"24798:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4993,"nodeType":"Block","src":"25419:150:7","statements":[{"expression":{"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4976,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"25429:10:7","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"25449:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4977,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:7","typeDescriptions":{}}},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:7","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":4982,"nodeType":"ExpressionStatement","src":"25429:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4983,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4974,"src":"25469:10:7","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"25483:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4992,"nodeType":"IfStatement","src":"25465:98:7","trueBody":{"id":4991,"nodeType":"Block","src":"25490:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:7","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"25546:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4986,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"25511:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4990,"nodeType":"RevertStatement","src":"25504:48:7"}]}}]},"documentation":{"id":4969,"nodeType":"StructuredDocumentation","src":"25028:312:7","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4994,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:7","nodeType":"FunctionDefinition","parameters":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4971,"mutability":"mutable","name":"value","nameLocation":"25370:5:7","nodeType":"VariableDeclaration","scope":4994,"src":"25363:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4970,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:7"},"returnParameters":{"id":4975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4974,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:7","nodeType":"VariableDeclaration","scope":4994,"src":"25400:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4973,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:7","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:7"},"scope":5451,"src":"25345:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5019,"nodeType":"Block","src":"25966:150:7","statements":[{"expression":{"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5002,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"25976:10:7","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"25996:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5003,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:7","typeDescriptions":{}}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:7","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5008,"nodeType":"ExpressionStatement","src":"25976:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"26016:10:7","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"26030:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5018,"nodeType":"IfStatement","src":"26012:98:7","trueBody":{"id":5017,"nodeType":"Block","src":"26037:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"26093:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5012,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"26058:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5016,"nodeType":"RevertStatement","src":"26051:48:7"}]}}]},"documentation":{"id":4995,"nodeType":"StructuredDocumentation","src":"25575:312:7","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5020,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:7","nodeType":"FunctionDefinition","parameters":{"id":4998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4997,"mutability":"mutable","name":"value","nameLocation":"25917:5:7","nodeType":"VariableDeclaration","scope":5020,"src":"25910:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4996,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:7"},"returnParameters":{"id":5001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5000,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:7","nodeType":"VariableDeclaration","scope":5020,"src":"25947:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4999,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:7","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:7"},"scope":5451,"src":"25892:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5045,"nodeType":"Block","src":"26513:150:7","statements":[{"expression":{"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"26523:10:7","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"26543:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5029,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:7","typeDescriptions":{}}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:7","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5034,"nodeType":"ExpressionStatement","src":"26523:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5035,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"26563:10:7","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"26577:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5044,"nodeType":"IfStatement","src":"26559:98:7","trueBody":{"id":5043,"nodeType":"Block","src":"26584:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:7","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"26640:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5038,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"26605:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5042,"nodeType":"RevertStatement","src":"26598:48:7"}]}}]},"documentation":{"id":5021,"nodeType":"StructuredDocumentation","src":"26122:312:7","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5046,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:7","nodeType":"FunctionDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"value","nameLocation":"26464:5:7","nodeType":"VariableDeclaration","scope":5046,"src":"26457:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5022,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:7"},"returnParameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:7","nodeType":"VariableDeclaration","scope":5046,"src":"26494:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5025,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:7","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:7"},"scope":5451,"src":"26439:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5071,"nodeType":"Block","src":"27060:150:7","statements":[{"expression":{"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5054,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"27070:10:7","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"27090:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5055,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:7","typeDescriptions":{}}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:7","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5060,"nodeType":"ExpressionStatement","src":"27070:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"27110:10:7","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"27124:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5070,"nodeType":"IfStatement","src":"27106:98:7","trueBody":{"id":5069,"nodeType":"Block","src":"27131:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:7","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"27187:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5064,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"27152:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5068,"nodeType":"RevertStatement","src":"27145:48:7"}]}}]},"documentation":{"id":5047,"nodeType":"StructuredDocumentation","src":"26669:312:7","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5072,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:7","nodeType":"FunctionDefinition","parameters":{"id":5050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5049,"mutability":"mutable","name":"value","nameLocation":"27011:5:7","nodeType":"VariableDeclaration","scope":5072,"src":"27004:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5048,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:7"},"returnParameters":{"id":5053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5052,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:7","nodeType":"VariableDeclaration","scope":5072,"src":"27041:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5051,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:7","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:7"},"scope":5451,"src":"26986:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5097,"nodeType":"Block","src":"27607:150:7","statements":[{"expression":{"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5080,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"27617:10:7","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"27637:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5081,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:7","typeDescriptions":{}}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:7","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5086,"nodeType":"ExpressionStatement","src":"27617:26:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"27657:10:7","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"27671:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5096,"nodeType":"IfStatement","src":"27653:98:7","trueBody":{"id":5095,"nodeType":"Block","src":"27678:73:7","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:7","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"27734:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5090,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"27699:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5094,"nodeType":"RevertStatement","src":"27692:48:7"}]}}]},"documentation":{"id":5073,"nodeType":"StructuredDocumentation","src":"27216:312:7","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5098,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:7","nodeType":"FunctionDefinition","parameters":{"id":5076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5075,"mutability":"mutable","name":"value","nameLocation":"27558:5:7","nodeType":"VariableDeclaration","scope":5098,"src":"27551:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5074,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:7"},"returnParameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5078,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:7","nodeType":"VariableDeclaration","scope":5098,"src":"27588:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5077,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:7","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:7"},"scope":5451,"src":"27533:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5123,"nodeType":"Block","src":"28147:148:7","statements":[{"expression":{"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5106,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"28157:10:7","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"28176:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5107,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:7","typeDescriptions":{}}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:7","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5112,"nodeType":"ExpressionStatement","src":"28157:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"28196:10:7","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"28210:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5122,"nodeType":"IfStatement","src":"28192:97:7","trueBody":{"id":5121,"nodeType":"Block","src":"28217:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:7","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"28272:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5116,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"28238:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5120,"nodeType":"RevertStatement","src":"28231:47:7"}]}}]},"documentation":{"id":5099,"nodeType":"StructuredDocumentation","src":"27763:307:7","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5124,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:7","nodeType":"FunctionDefinition","parameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5101,"mutability":"mutable","name":"value","nameLocation":"28099:5:7","nodeType":"VariableDeclaration","scope":5124,"src":"28092:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5100,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:7"},"returnParameters":{"id":5105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5104,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:7","nodeType":"VariableDeclaration","scope":5124,"src":"28129:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5103,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:7","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:7"},"scope":5451,"src":"28075:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5149,"nodeType":"Block","src":"28685:148:7","statements":[{"expression":{"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5132,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"28695:10:7","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"28714:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5133,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:7","typeDescriptions":{}}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:7","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5138,"nodeType":"ExpressionStatement","src":"28695:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5139,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5130,"src":"28734:10:7","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"28748:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5148,"nodeType":"IfStatement","src":"28730:97:7","trueBody":{"id":5147,"nodeType":"Block","src":"28755:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:7","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"28810:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5142,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"28776:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5146,"nodeType":"RevertStatement","src":"28769:47:7"}]}}]},"documentation":{"id":5125,"nodeType":"StructuredDocumentation","src":"28301:307:7","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5150,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:7","nodeType":"FunctionDefinition","parameters":{"id":5128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5127,"mutability":"mutable","name":"value","nameLocation":"28637:5:7","nodeType":"VariableDeclaration","scope":5150,"src":"28630:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5126,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:7"},"returnParameters":{"id":5131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5130,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:7","nodeType":"VariableDeclaration","scope":5150,"src":"28667:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5129,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:7","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:7"},"scope":5451,"src":"28613:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5175,"nodeType":"Block","src":"29223:148:7","statements":[{"expression":{"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"29233:10:7","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"29252:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5159,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:7","typeDescriptions":{}}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:7","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5164,"nodeType":"ExpressionStatement","src":"29233:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5165,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"29272:10:7","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"29286:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5174,"nodeType":"IfStatement","src":"29268:97:7","trueBody":{"id":5173,"nodeType":"Block","src":"29293:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:7","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5153,"src":"29348:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5168,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"29314:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5172,"nodeType":"RevertStatement","src":"29307:47:7"}]}}]},"documentation":{"id":5151,"nodeType":"StructuredDocumentation","src":"28839:307:7","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5176,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:7","nodeType":"FunctionDefinition","parameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"value","nameLocation":"29175:5:7","nodeType":"VariableDeclaration","scope":5176,"src":"29168:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5152,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:7"},"returnParameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:7","nodeType":"VariableDeclaration","scope":5176,"src":"29205:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5155,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:7","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:7"},"scope":5451,"src":"29151:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5201,"nodeType":"Block","src":"29761:148:7","statements":[{"expression":{"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"29771:10:7","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"29790:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5185,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:7","typeDescriptions":{}}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:7","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5190,"nodeType":"ExpressionStatement","src":"29771:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"29810:10:7","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"29824:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5200,"nodeType":"IfStatement","src":"29806:97:7","trueBody":{"id":5199,"nodeType":"Block","src":"29831:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:7","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"29886:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5194,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"29852:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5198,"nodeType":"RevertStatement","src":"29845:47:7"}]}}]},"documentation":{"id":5177,"nodeType":"StructuredDocumentation","src":"29377:307:7","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5202,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:7","nodeType":"FunctionDefinition","parameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"value","nameLocation":"29713:5:7","nodeType":"VariableDeclaration","scope":5202,"src":"29706:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5178,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:7"},"returnParameters":{"id":5183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5182,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:7","nodeType":"VariableDeclaration","scope":5202,"src":"29743:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5181,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:7","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:7"},"scope":5451,"src":"29689:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5227,"nodeType":"Block","src":"30299:148:7","statements":[{"expression":{"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"30309:10:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"30328:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5211,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:7","typeDescriptions":{}}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5216,"nodeType":"ExpressionStatement","src":"30309:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5217,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"30348:10:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"30362:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5226,"nodeType":"IfStatement","src":"30344:97:7","trueBody":{"id":5225,"nodeType":"Block","src":"30369:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"30424:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5220,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"30390:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5224,"nodeType":"RevertStatement","src":"30383:47:7"}]}}]},"documentation":{"id":5203,"nodeType":"StructuredDocumentation","src":"29915:307:7","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:7","nodeType":"FunctionDefinition","parameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"value","nameLocation":"30251:5:7","nodeType":"VariableDeclaration","scope":5228,"src":"30244:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5204,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:7"},"returnParameters":{"id":5209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5208,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:7","nodeType":"VariableDeclaration","scope":5228,"src":"30281:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5207,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:7","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:7"},"scope":5451,"src":"30227:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5253,"nodeType":"Block","src":"30837:148:7","statements":[{"expression":{"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"30847:10:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"30866:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5237,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:7","typeDescriptions":{}}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5242,"nodeType":"ExpressionStatement","src":"30847:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"30886:10:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"30900:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5252,"nodeType":"IfStatement","src":"30882:97:7","trueBody":{"id":5251,"nodeType":"Block","src":"30907:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:7","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"30962:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5246,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"30928:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5250,"nodeType":"RevertStatement","src":"30921:47:7"}]}}]},"documentation":{"id":5229,"nodeType":"StructuredDocumentation","src":"30453:307:7","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5254,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:7","nodeType":"FunctionDefinition","parameters":{"id":5232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5231,"mutability":"mutable","name":"value","nameLocation":"30789:5:7","nodeType":"VariableDeclaration","scope":5254,"src":"30782:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5230,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:7"},"returnParameters":{"id":5235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:7","nodeType":"VariableDeclaration","scope":5254,"src":"30819:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5233,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:7","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:7"},"scope":5451,"src":"30765:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5279,"nodeType":"Block","src":"31375:148:7","statements":[{"expression":{"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"31385:10:7","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"31404:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5263,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:7","typeDescriptions":{}}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:7","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5268,"nodeType":"ExpressionStatement","src":"31385:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"31424:10:7","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"31438:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5278,"nodeType":"IfStatement","src":"31420:97:7","trueBody":{"id":5277,"nodeType":"Block","src":"31445:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:7","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"31500:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5272,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"31466:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5276,"nodeType":"RevertStatement","src":"31459:47:7"}]}}]},"documentation":{"id":5255,"nodeType":"StructuredDocumentation","src":"30991:307:7","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5280,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:7","nodeType":"FunctionDefinition","parameters":{"id":5258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5257,"mutability":"mutable","name":"value","nameLocation":"31327:5:7","nodeType":"VariableDeclaration","scope":5280,"src":"31320:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5256,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:7"},"returnParameters":{"id":5261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5260,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:7","nodeType":"VariableDeclaration","scope":5280,"src":"31357:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5259,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:7","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:7"},"scope":5451,"src":"31303:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5305,"nodeType":"Block","src":"31913:148:7","statements":[{"expression":{"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"31923:10:7","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"31942:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5289,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:7","typeDescriptions":{}}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:7","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5294,"nodeType":"ExpressionStatement","src":"31923:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5295,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5286,"src":"31962:10:7","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"31976:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5304,"nodeType":"IfStatement","src":"31958:97:7","trueBody":{"id":5303,"nodeType":"Block","src":"31983:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:7","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"32038:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5298,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"32004:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5302,"nodeType":"RevertStatement","src":"31997:47:7"}]}}]},"documentation":{"id":5281,"nodeType":"StructuredDocumentation","src":"31529:307:7","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5306,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:7","nodeType":"FunctionDefinition","parameters":{"id":5284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5283,"mutability":"mutable","name":"value","nameLocation":"31865:5:7","nodeType":"VariableDeclaration","scope":5306,"src":"31858:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5282,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:7"},"returnParameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5286,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:7","nodeType":"VariableDeclaration","scope":5306,"src":"31895:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5285,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:7","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:7"},"scope":5451,"src":"31841:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5331,"nodeType":"Block","src":"32451:148:7","statements":[{"expression":{"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"32461:10:7","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"32480:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5315,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:7","typeDescriptions":{}}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:7","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5320,"nodeType":"ExpressionStatement","src":"32461:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5321,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5312,"src":"32500:10:7","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"32514:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5330,"nodeType":"IfStatement","src":"32496:97:7","trueBody":{"id":5329,"nodeType":"Block","src":"32521:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"32576:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5324,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"32542:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5328,"nodeType":"RevertStatement","src":"32535:47:7"}]}}]},"documentation":{"id":5307,"nodeType":"StructuredDocumentation","src":"32067:307:7","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5332,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:7","nodeType":"FunctionDefinition","parameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"value","nameLocation":"32403:5:7","nodeType":"VariableDeclaration","scope":5332,"src":"32396:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5308,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:7"},"returnParameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:7","nodeType":"VariableDeclaration","scope":5332,"src":"32433:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5311,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:7","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:7"},"scope":5451,"src":"32379:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5357,"nodeType":"Block","src":"32989:148:7","statements":[{"expression":{"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"32999:10:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"33018:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5341,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:7","typeDescriptions":{}}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5346,"nodeType":"ExpressionStatement","src":"32999:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5347,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"33038:10:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"33052:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5356,"nodeType":"IfStatement","src":"33034:97:7","trueBody":{"id":5355,"nodeType":"Block","src":"33059:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:7","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5335,"src":"33114:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5350,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"33080:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5354,"nodeType":"RevertStatement","src":"33073:47:7"}]}}]},"documentation":{"id":5333,"nodeType":"StructuredDocumentation","src":"32605:307:7","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5358,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:7","nodeType":"FunctionDefinition","parameters":{"id":5336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5335,"mutability":"mutable","name":"value","nameLocation":"32941:5:7","nodeType":"VariableDeclaration","scope":5358,"src":"32934:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5334,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:7"},"returnParameters":{"id":5339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5338,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:7","nodeType":"VariableDeclaration","scope":5358,"src":"32971:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5337,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:7","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:7"},"scope":5451,"src":"32917:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5383,"nodeType":"Block","src":"33527:148:7","statements":[{"expression":{"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"33537:10:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"33556:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5367,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:7","typeDescriptions":{}}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5372,"nodeType":"ExpressionStatement","src":"33537:25:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5364,"src":"33576:10:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"33590:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5382,"nodeType":"IfStatement","src":"33572:97:7","trueBody":{"id":5381,"nodeType":"Block","src":"33597:72:7","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"33652:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5376,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"33618:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5380,"nodeType":"RevertStatement","src":"33611:47:7"}]}}]},"documentation":{"id":5359,"nodeType":"StructuredDocumentation","src":"33143:307:7","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5384,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:7","nodeType":"FunctionDefinition","parameters":{"id":5362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5361,"mutability":"mutable","name":"value","nameLocation":"33479:5:7","nodeType":"VariableDeclaration","scope":5384,"src":"33472:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5360,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:7"},"returnParameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5364,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:7","nodeType":"VariableDeclaration","scope":5384,"src":"33509:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5363,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:7","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:7"},"scope":5451,"src":"33455:220:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5409,"nodeType":"Block","src":"34058:146:7","statements":[{"expression":{"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5392,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"34068:10:7","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"34086:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5393,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:7","typeDescriptions":{}}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:7","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5398,"nodeType":"ExpressionStatement","src":"34068:24:7"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5399,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"34106:10:7","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"34120:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5408,"nodeType":"IfStatement","src":"34102:96:7","trueBody":{"id":5407,"nodeType":"Block","src":"34127:71:7","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"34181:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5402,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"34148:29:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5406,"nodeType":"RevertStatement","src":"34141:46:7"}]}}]},"documentation":{"id":5385,"nodeType":"StructuredDocumentation","src":"33681:302:7","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5410,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:7","nodeType":"FunctionDefinition","parameters":{"id":5388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5387,"mutability":"mutable","name":"value","nameLocation":"34011:5:7","nodeType":"VariableDeclaration","scope":5410,"src":"34004:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5386,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:7"},"returnParameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:7","nodeType":"VariableDeclaration","scope":5410,"src":"34041:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5389,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:7","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:7"},"scope":5451,"src":"33988:216:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5439,"nodeType":"Block","src":"34444:250:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"34557:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5422,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5421,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:7","memberName":"max","nodeType":"MemberAccess","src":"34573:16:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5419,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:7","typeDescriptions":{}}},"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5433,"nodeType":"IfStatement","src":"34553:105:7","trueBody":{"id":5432,"nodeType":"Block","src":"34592:66:7","statements":[{"errorCall":{"arguments":[{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"34641:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5428,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"34613:27:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5431,"nodeType":"RevertStatement","src":"34606:41:7"}]}},{"expression":{"arguments":[{"id":5436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5413,"src":"34681:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5434,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:7","typeDescriptions":{}}},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5417,"id":5438,"nodeType":"Return","src":"34667:20:7"}]},"documentation":{"id":5411,"nodeType":"StructuredDocumentation","src":"34210:165:7","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5440,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:7","nodeType":"FunctionDefinition","parameters":{"id":5414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5413,"mutability":"mutable","name":"value","nameLocation":"34406:5:7","nodeType":"VariableDeclaration","scope":5440,"src":"34398:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5412,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:7"},"returnParameters":{"id":5417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5440,"src":"34436:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5415,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:7"},"scope":5451,"src":"34380:314:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5449,"nodeType":"Block","src":"34853:87:7","statements":[{"AST":{"nativeSrc":"34888:46:7","nodeType":"YulBlock","src":"34888:46:7","statements":[{"nativeSrc":"34902:22:7","nodeType":"YulAssignment","src":"34902:22:7","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:7","nodeType":"YulIdentifier","src":"34921:1:7"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:7","nodeType":"YulIdentifier","src":"34914:6:7"},"nativeSrc":"34914:9:7","nodeType":"YulFunctionCall","src":"34914:9:7"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:7","nodeType":"YulIdentifier","src":"34907:6:7"},"nativeSrc":"34907:17:7","nodeType":"YulFunctionCall","src":"34907:17:7"},"variableNames":[{"name":"u","nativeSrc":"34902:1:7","nodeType":"YulIdentifier","src":"34902:1:7"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":5443,"isOffset":false,"isSlot":false,"src":"34921:1:7","valueSize":1},{"declaration":5446,"isOffset":false,"isSlot":false,"src":"34902:1:7","valueSize":1}],"flags":["memory-safe"],"id":5448,"nodeType":"InlineAssembly","src":"34863:71:7"}]},"documentation":{"id":5441,"nodeType":"StructuredDocumentation","src":"34700:90:7","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":5450,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:7","nodeType":"FunctionDefinition","parameters":{"id":5444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"mutability":"mutable","name":"b","nameLocation":"34816:1:7","nodeType":"VariableDeclaration","scope":5450,"src":"34811:6:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5442,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:7"},"returnParameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"mutability":"mutable","name":"u","nameLocation":"34850:1:7","nodeType":"VariableDeclaration","scope":5450,"src":"34842:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5445,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:7"},"scope":5451,"src":"34795:145:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5452,"src":"769:34173:7","usedErrors":[3696,3701,3708,3713],"usedEvents":[]}],"src":"192:34751:7"},"id":7},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[5451],"SignedMath":[5595]},"id":5596,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5453,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5596,"sourceUnit":5452,"src":"135:40:8","symbolAliases":[{"foreign":{"id":5454,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"143:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5456,"nodeType":"StructuredDocumentation","src":"177:80:8","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5595,"linearizedBaseContracts":[5595],"name":"SignedMath","nameLocation":"266:10:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":5485,"nodeType":"Block","src":"746:215:8","statements":[{"id":5484,"nodeType":"UncheckedBlock","src":"756:199:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5468,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"894:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"900:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5470,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5463,"src":"904:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5477,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"932:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5475,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5451,"src":"916:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5451_$","typeString":"type(library SafeCast)"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5450,"src":"916:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5473,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:8","typeDescriptions":{}}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5467,"id":5483,"nodeType":"Return","src":"887:57:8"}]}]},"documentation":{"id":5457,"nodeType":"StructuredDocumentation","src":"283:374:8","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5486,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:8","nodeType":"FunctionDefinition","parameters":{"id":5464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5459,"mutability":"mutable","name":"condition","nameLocation":"684:9:8","nodeType":"VariableDeclaration","scope":5486,"src":"679:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5458,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5461,"mutability":"mutable","name":"a","nameLocation":"702:1:8","nodeType":"VariableDeclaration","scope":5486,"src":"695:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5460,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5463,"mutability":"mutable","name":"b","nameLocation":"712:1:8","nodeType":"VariableDeclaration","scope":5486,"src":"705:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5462,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:8"},"returnParameters":{"id":5467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5486,"src":"738:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5465,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:8"},"scope":5595,"src":"662:299:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5504,"nodeType":"Block","src":"1102:44:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"1127:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5498,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"1131:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5500,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"1134:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5501,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"1137:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5496,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"1119:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5495,"id":5503,"nodeType":"Return","src":"1112:27:8"}]},"documentation":{"id":5487,"nodeType":"StructuredDocumentation","src":"967:66:8","text":" @dev Returns the largest of two signed numbers."},"id":5505,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:8","nodeType":"FunctionDefinition","parameters":{"id":5492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5489,"mutability":"mutable","name":"a","nameLocation":"1058:1:8","nodeType":"VariableDeclaration","scope":5505,"src":"1051:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5488,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5491,"mutability":"mutable","name":"b","nameLocation":"1068:1:8","nodeType":"VariableDeclaration","scope":5505,"src":"1061:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5490,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:8"},"returnParameters":{"id":5495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5505,"src":"1094:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5493,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:8"},"scope":5595,"src":"1038:108:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5523,"nodeType":"Block","src":"1288:44:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5516,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"1313:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5517,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"1317:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5519,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"1320:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5520,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5510,"src":"1323:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5515,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"1305:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5514,"id":5522,"nodeType":"Return","src":"1298:27:8"}]},"documentation":{"id":5506,"nodeType":"StructuredDocumentation","src":"1152:67:8","text":" @dev Returns the smallest of two signed numbers."},"id":5524,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:8","nodeType":"FunctionDefinition","parameters":{"id":5511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5508,"mutability":"mutable","name":"a","nameLocation":"1244:1:8","nodeType":"VariableDeclaration","scope":5524,"src":"1237:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5507,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5510,"mutability":"mutable","name":"b","nameLocation":"1254:1:8","nodeType":"VariableDeclaration","scope":5524,"src":"1247:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5509,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:8"},"returnParameters":{"id":5514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5524,"src":"1280:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5512,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:8"},"scope":5595,"src":"1224:108:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5567,"nodeType":"Block","src":"1537:162:8","statements":[{"assignments":[5535],"declarations":[{"constant":false,"id":5535,"mutability":"mutable","name":"x","nameLocation":"1606:1:8","nodeType":"VariableDeclaration","scope":5567,"src":"1599:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5534,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5548,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"1611:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5537,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"1615:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5539,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5540,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"1622:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5541,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"1626:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:8"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5549,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"1651:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5554,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"1671:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:8","typeDescriptions":{}}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5550,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:8","typeDescriptions":{}}},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5559,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"1685:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5560,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"1689:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5533,"id":5566,"nodeType":"Return","src":"1644:48:8"}]},"documentation":{"id":5525,"nodeType":"StructuredDocumentation","src":"1338:126:8","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5568,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:8","nodeType":"FunctionDefinition","parameters":{"id":5530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5527,"mutability":"mutable","name":"a","nameLocation":"1493:1:8","nodeType":"VariableDeclaration","scope":5568,"src":"1486:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5526,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5529,"mutability":"mutable","name":"b","nameLocation":"1503:1:8","nodeType":"VariableDeclaration","scope":5568,"src":"1496:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5528,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:8"},"returnParameters":{"id":5533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5568,"src":"1529:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5531,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:8"},"scope":5595,"src":"1469:230:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5593,"nodeType":"Block","src":"1843:767:8","statements":[{"id":5592,"nodeType":"UncheckedBlock","src":"1853:751:8","statements":[{"assignments":[5577],"declarations":[{"constant":false,"id":5577,"mutability":"mutable","name":"mask","nameLocation":"2424:4:8","nodeType":"VariableDeclaration","scope":5592,"src":"2417:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5576,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5581,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5578,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"2431:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5584,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"2576:1:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5585,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"2580:4:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5588,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"2588:4:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5582,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:8","typeDescriptions":{}}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5575,"id":5591,"nodeType":"Return","src":"2560:33:8"}]}]},"documentation":{"id":5569,"nodeType":"StructuredDocumentation","src":"1705:78:8","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5594,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:8","nodeType":"FunctionDefinition","parameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"n","nameLocation":"1808:1:8","nodeType":"VariableDeclaration","scope":5594,"src":"1801:8:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5570,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:8"},"returnParameters":{"id":5575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5594,"src":"1834:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:8"},"scope":5595,"src":"1788:822:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5596,"src":"258:2354:8","usedErrors":[],"usedEvents":[]}],"src":"109:2504:8"},"id":8},"contracts/Paymaster.sol":{"ast":{"absolutePath":"contracts/Paymaster.sol","exportedSymbols":{"Context":[177],"IAggregator":[6785],"IEntryPoint":[6970],"INonceManager":[6989],"IPaymaster":[7026],"ISenderCreator":[7045],"IStakeManager":[7149],"Ownable":[147],"PackedUserOperation":[7171],"Paymaster":[5957],"UserOperationLib":[6721],"calldataKeccak":[6357],"min":[6375]},"id":5958,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":5597,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"39:24:9"},{"absolutePath":"contracts/lib/interfaces/IPaymaster.sol","file":"./lib/interfaces/IPaymaster.sol","id":5598,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5958,"sourceUnit":7027,"src":"65:41:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/interfaces/IEntryPoint.sol","file":"./lib/interfaces/IEntryPoint.sol","id":5599,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5958,"sourceUnit":6971,"src":"107:42:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/core/UserOperationLib.sol","file":"./lib/core/UserOperationLib.sol","id":5600,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5958,"sourceUnit":6722,"src":"150:41:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5601,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5958,"sourceUnit":148,"src":"192:52:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5602,"name":"IPaymaster","nameLocations":["268:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":7026,"src":"268:10:9"},"id":5603,"nodeType":"InheritanceSpecifier","src":"268:10:9"},{"baseName":{"id":5604,"name":"Ownable","nameLocations":["280:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"280:7:9"},"id":5605,"nodeType":"InheritanceSpecifier","src":"280:7:9"}],"canonicalName":"Paymaster","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5957,"linearizedBaseContracts":[5957,147,177,7026],"name":"Paymaster","nameLocation":"255:9:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5609,"libraryName":{"id":5606,"name":"UserOperationLib","nameLocations":["300:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":6721,"src":"300:16:9"},"nodeType":"UsingForDirective","src":"294:47:9","typeName":{"id":5608,"nodeType":"UserDefinedTypeName","pathNode":{"id":5607,"name":"PackedUserOperation","nameLocations":["321:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"321:19:9"},"referencedDeclaration":7171,"src":"321:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}}},{"constant":false,"functionSelector":"b0d691fe","id":5612,"mutability":"immutable","name":"entryPoint","nameLocation":"376:10:9","nodeType":"VariableDeclaration","scope":5957,"src":"347:39:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"},"typeName":{"id":5611,"nodeType":"UserDefinedTypeName","pathNode":{"id":5610,"name":"IEntryPoint","nameLocations":["347:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":6970,"src":"347:11:9"},"referencedDeclaration":6970,"src":"347:11:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}},"visibility":"public"},{"constant":false,"functionSelector":"dc69c06f","id":5616,"mutability":"mutable","name":"supportedTargets","nameLocation":"485:16:9","nodeType":"VariableDeclaration","scope":5957,"src":"453:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":5615,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5613,"name":"address","nodeType":"ElementaryTypeName","src":"461:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"453:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5614,"name":"bool","nodeType":"ElementaryTypeName","src":"472:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"errorSelector":"778b288a","id":5618,"name":"UnsupportedTarget","nameLocation":"554:17:9","nodeType":"ErrorDefinition","parameters":{"id":5617,"nodeType":"ParameterList","parameters":[],"src":"571:2:9"},"src":"548:26:9"},{"errorSelector":"a10d526c","id":5620,"name":"InvalidPaymasterAndDataLength","nameLocation":"585:29:9","nodeType":"ErrorDefinition","parameters":{"id":5619,"nodeType":"ParameterList","parameters":[],"src":"614:2:9"},"src":"579:38:9"},{"errorSelector":"b7d09497","id":5622,"name":"InvalidTimestamp","nameLocation":"628:16:9","nodeType":"ErrorDefinition","parameters":{"id":5621,"nodeType":"ParameterList","parameters":[],"src":"644:2:9"},"src":"622:25:9"},{"anonymous":false,"eventSelector":"e5239967f86bdfebd2052a7d2539a8359f2cdefacfbdeb04bdd72e854c994553","id":5628,"name":"TargetSupportChanged","nameLocation":"659:20:9","nodeType":"EventDefinition","parameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"696:6:9","nodeType":"VariableDeclaration","scope":5628,"src":"680:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5623,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5626,"indexed":false,"mutability":"mutable","name":"supported","nameLocation":"709:9:9","nodeType":"VariableDeclaration","scope":5628,"src":"704:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5625,"name":"bool","nodeType":"ElementaryTypeName","src":"704:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"679:40:9"},"src":"653:67:9"},{"anonymous":false,"eventSelector":"543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d474","id":5634,"name":"FundsDeposited","nameLocation":"731:14:9","nodeType":"EventDefinition","parameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"indexed":true,"mutability":"mutable","name":"depositor","nameLocation":"762:9:9","nodeType":"VariableDeclaration","scope":5634,"src":"746:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5629,"name":"address","nodeType":"ElementaryTypeName","src":"746:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5632,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"781:6:9","nodeType":"VariableDeclaration","scope":5634,"src":"773:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"745:43:9"},"src":"725:64:9"},{"body":{"id":5650,"nodeType":"Block","src":"860:54:9","statements":[{"expression":{"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5644,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"870:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5646,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5636,"src":"895:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5645,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"883:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$6970_$","typeString":"type(contract IEntryPoint)"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"883:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}},"src":"870:37:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}},"id":5649,"nodeType":"ExpressionStatement","src":"870:37:9"}]},"id":5651,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5641,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"852:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5642,"kind":"baseConstructorSpecifier","modifierName":{"id":5640,"name":"Ownable","nameLocations":["844:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"844:7:9"},"nodeType":"ModifierInvocation","src":"844:15:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5636,"mutability":"mutable","name":"_entryPoint","nameLocation":"815:11:9","nodeType":"VariableDeclaration","scope":5651,"src":"807:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5635,"name":"address","nodeType":"ElementaryTypeName","src":"807:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5638,"mutability":"mutable","name":"_owner","nameLocation":"836:6:9","nodeType":"VariableDeclaration","scope":5651,"src":"828:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5637,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"806:37:9"},"returnParameters":{"id":5643,"nodeType":"ParameterList","parameters":[],"src":"860:0:9"},"scope":5957,"src":"795:119:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5672,"nodeType":"Block","src":"1092:107:9","statements":[{"expression":{"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5661,"name":"supportedTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"1102:16:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5663,"indexExpression":{"id":5662,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"1119:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1102:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5664,"name":"supported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"1129:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1102:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5666,"nodeType":"ExpressionStatement","src":"1102:36:9"},{"eventCall":{"arguments":[{"id":5668,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"1174:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5669,"name":"supported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"1182:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5667,"name":"TargetSupportChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"1153:20:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1153:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5671,"nodeType":"EmitStatement","src":"1148:44:9"}]},"documentation":{"id":5652,"nodeType":"StructuredDocumentation","src":"920:88:9","text":" @dev Sets whether a target contract is supported for gas sponsorship."},"functionSelector":"a19f212f","id":5673,"implemented":true,"kind":"function","modifiers":[{"id":5659,"kind":"modifierInvocation","modifierName":{"id":5658,"name":"onlyOwner","nameLocations":["1082:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1082:9:9"},"nodeType":"ModifierInvocation","src":"1082:9:9"}],"name":"setSupportedTarget","nameLocation":"1022:18:9","nodeType":"FunctionDefinition","parameters":{"id":5657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"target","nameLocation":"1049:6:9","nodeType":"VariableDeclaration","scope":5673,"src":"1041:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5653,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5656,"mutability":"mutable","name":"supported","nameLocation":"1062:9:9","nodeType":"VariableDeclaration","scope":5673,"src":"1057:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5655,"name":"bool","nodeType":"ElementaryTypeName","src":"1057:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1040:32:9"},"returnParameters":{"id":5660,"nodeType":"ParameterList","parameters":[],"src":"1092:0:9"},"scope":5957,"src":"1013:186:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5696,"nodeType":"Block","src":"1345:122:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":5685,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1402:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Paymaster_$5957","typeString":"contract Paymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Paymaster_$5957","typeString":"contract Paymaster"}],"id":5684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1394:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5683,"name":"address","nodeType":"ElementaryTypeName","src":"1394:7:9","typeDescriptions":{}}},"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1394:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5677,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"1355:10:9","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1366:9:9","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":7124,"src":"1355:20:9","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":5680,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1383:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1387:5:9","memberName":"value","nodeType":"MemberAccess","src":"1383:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1355:38:9","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1355:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5688,"nodeType":"ExpressionStatement","src":"1355:53:9"},{"eventCall":{"arguments":[{"expression":{"id":5690,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1438:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1442:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1438:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5692,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1450:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1454:5:9","memberName":"value","nodeType":"MemberAccess","src":"1450:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5689,"name":"FundsDeposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"1423:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1423:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5695,"nodeType":"EmitStatement","src":"1418:42:9"}]},"documentation":{"id":5674,"nodeType":"StructuredDocumentation","src":"1205:87:9","text":" @dev Deposits funds into the EntryPoint on behalf of this Paymaster."},"functionSelector":"1b3ba101","id":5697,"implemented":true,"kind":"function","modifiers":[],"name":"depositToEntryPoint","nameLocation":"1306:19:9","nodeType":"FunctionDefinition","parameters":{"id":5675,"nodeType":"ParameterList","parameters":[],"src":"1325:2:9"},"returnParameters":{"id":5676,"nodeType":"ParameterList","parameters":[],"src":"1345:0:9"},"scope":5957,"src":"1297:170:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[7012],"body":{"id":5786,"nodeType":"Block","src":"1794:1200:9","statements":[{"assignments":[5714,5716,5718],"declarations":[{"constant":false,"id":5714,"mutability":"mutable","name":"paymaster","nameLocation":"1871:9:9","nodeType":"VariableDeclaration","scope":5786,"src":"1863:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5713,"name":"address","nodeType":"ElementaryTypeName","src":"1863:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5716,"mutability":"mutable","name":"validationGasLimit","nameLocation":"1890:18:9","nodeType":"VariableDeclaration","scope":5786,"src":"1882:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1882:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5718,"mutability":"mutable","name":"postOpGasLimit","nameLocation":"1918:14:9","nodeType":"VariableDeclaration","scope":5786,"src":"1910:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1910:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5724,"initialValue":{"arguments":[{"expression":{"id":5721,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"1994:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2001:16:9","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":7168,"src":"1994:23:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":5719,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"1949:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$6721_$","typeString":"type(library UserOperationLib)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1966:27:9","memberName":"unpackPaymasterStaticFields","nodeType":"MemberAccess","referencedDeclaration":6701,"src":"1949:44:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_address_$_t_uint256_$_t_uint256_$","typeString":"function (bytes calldata) pure returns (address,uint256,uint256)"}},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$_t_uint256_$","typeString":"tuple(address,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"1862:156:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5726,"name":"paymaster","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"2098:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":5729,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2119:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Paymaster_$5957","typeString":"contract Paymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Paymaster_$5957","typeString":"contract Paymaster"}],"id":5728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2111:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5727,"name":"address","nodeType":"ElementaryTypeName","src":"2111:7:9","typeDescriptions":{}}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2111:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2098:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4141393320696e76616c6964207061796d6173746572416e6444617461","id":5732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2126:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_bed5bf2586bcf71963468f5a6e4def651dfab48dcb520989dbad3d1cd3cd8bdd","typeString":"literal_string \"AA93 invalid paymasterAndData\""},"value":"AA93 invalid paymasterAndData"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bed5bf2586bcf71963468f5a6e4def651dfab48dcb520989dbad3d1cd3cd8bdd","typeString":"literal_string \"AA93 invalid paymasterAndData\""}],"id":5725,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2090:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2090:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5734,"nodeType":"ExpressionStatement","src":"2090:68:9"},{"assignments":[5736],"declarations":[{"constant":false,"id":5736,"mutability":"mutable","name":"target","nameLocation":"2258:6:9","nodeType":"VariableDeclaration","scope":5786,"src":"2250:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5735,"name":"address","nodeType":"ElementaryTypeName","src":"2250:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5741,"initialValue":{"arguments":[{"expression":{"id":5738,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"2294:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2301:8:9","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":7160,"src":"2294:15:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":5737,"name":"_extractTargetFromCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"2267:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_address_$","typeString":"function (bytes calldata) pure returns (address)"}},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2267:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2250:60:9"},{"expression":{"arguments":[{"baseExpression":{"id":5743,"name":"supportedTargets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"2377:16:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5745,"indexExpression":{"id":5744,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"2394:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2377:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d61737465723a20746172676574206e6f7420737570706f72746564","id":5746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2403:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6acf2faee47d8f5f17d2d14a94013a2abe488391abc435b18c87d9d0ab6edfc3","typeString":"literal_string \"Paymaster: target not supported\""},"value":"Paymaster: target not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6acf2faee47d8f5f17d2d14a94013a2abe488391abc435b18c87d9d0ab6edfc3","typeString":"literal_string \"Paymaster: target not supported\""}],"id":5742,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2369:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2369:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5748,"nodeType":"ExpressionStatement","src":"2369:68:9"},{"assignments":[5750,5752],"declarations":[{"constant":false,"id":5750,"mutability":"mutable","name":"validUntil","nameLocation":"2518:10:9","nodeType":"VariableDeclaration","scope":5786,"src":"2511:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5749,"name":"uint48","nodeType":"ElementaryTypeName","src":"2511:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":5752,"mutability":"mutable","name":"validAfter","nameLocation":"2537:10:9","nodeType":"VariableDeclaration","scope":5786,"src":"2530:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5751,"name":"uint48","nodeType":"ElementaryTypeName","src":"2530:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":5757,"initialValue":{"arguments":[{"expression":{"id":5754,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"2574:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2581:16:9","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":7168,"src":"2574:23:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":5753,"name":"_extractTimeValidation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5888,"src":"2551:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint48_$_t_uint48_$","typeString":"function (bytes calldata) pure returns (uint48,uint48)"}},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint48_$_t_uint48_$","typeString":"tuple(uint48,uint48)"}},"nodeType":"VariableDeclarationStatement","src":"2510:88:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5759,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2648:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2654:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"2648:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5761,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"2667:10:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2648:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d61737465723a20746f6f206561726c79","id":5763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2679:22:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4198d203aba495b14d35609df4e0fab0eed8b12794e2f6b08835d7724c3d50e2","typeString":"literal_string \"Paymaster: too early\""},"value":"Paymaster: too early"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4198d203aba495b14d35609df4e0fab0eed8b12794e2f6b08835d7724c3d50e2","typeString":"literal_string \"Paymaster: too early\""}],"id":5758,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2640:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2640:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5765,"nodeType":"ExpressionStatement","src":"2640:62:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5767,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2720:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2726:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"2720:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5769,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"2739:10:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2720:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d61737465723a20746f6f206c617465","id":5771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2751:21:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_0aeb6dea3fb6ebb3aa45acbc0ba1c2e4c57c479e2534bc1d09a8b61331d0819d","typeString":"literal_string \"Paymaster: too late\""},"value":"Paymaster: too late"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0aeb6dea3fb6ebb3aa45acbc0ba1c2e4c57c479e2534bc1d09a8b61331d0819d","typeString":"literal_string \"Paymaster: too late\""}],"id":5766,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2712:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2712:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5773,"nodeType":"ExpressionStatement","src":"2712:61:9"},{"expression":{"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5774,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"2824:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"66616c7365","id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2861:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":5777,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"2868:10:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":5778,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"2880:10:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":5775,"name":"_packValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5923,"src":"2841:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint48_$_t_uint48_$returns$_t_uint256_$","typeString":"function (bool,uint48,uint48) pure returns (uint256)"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2841:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2824:67:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5781,"nodeType":"ExpressionStatement","src":"2824:67:9"},{"expression":{"components":[{"hexValue":"","id":5782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2968:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"id":5783,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"2972:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2967:20:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$_t_uint256_$","typeString":"tuple(literal_string \"\",uint256)"}},"functionReturnParameters":5712,"id":5785,"nodeType":"Return","src":"2960:27:9"}]},"documentation":{"id":5698,"nodeType":"StructuredDocumentation","src":"1473:89:9","text":" @dev Validates a UserOperation to determine if it should be sponsored."},"functionSelector":"52b7512c","id":5787,"implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"1576:23:9","nodeType":"FunctionDefinition","overrides":{"id":5707,"nodeType":"OverrideSpecifier","overrides":[],"src":"1730:8:9"},"parameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"userOp","nameLocation":"1638:6:9","nodeType":"VariableDeclaration","scope":5787,"src":"1609:35:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":5700,"nodeType":"UserDefinedTypeName","pathNode":{"id":5699,"name":"PackedUserOperation","nameLocations":["1609:19:9"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"1609:19:9"},"referencedDeclaration":7171,"src":"1609:19:9","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":5703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5787,"src":"1654:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1654:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5787,"src":"1688:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5704,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1599:116:9"},"returnParameters":{"id":5712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"context","nameLocation":"1761:7:9","nodeType":"VariableDeclaration","scope":5787,"src":"1748:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5708,"name":"bytes","nodeType":"ElementaryTypeName","src":"1748:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5711,"mutability":"mutable","name":"validationData","nameLocation":"1778:14:9","nodeType":"VariableDeclaration","scope":5787,"src":"1770:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1770:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1747:46:9"},"scope":5957,"src":"1567:1427:9","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7025],"body":{"id":5801,"nodeType":"Block","src":"3303:161:9","statements":[]},"documentation":{"id":5788,"nodeType":"StructuredDocumentation","src":"3000:107:9","text":" @dev The function that the EntryPoint calls after the execution to charge the Paymaster."},"functionSelector":"7c627b21","id":5802,"implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3121:6:9","nodeType":"FunctionDefinition","overrides":{"id":5799,"nodeType":"OverrideSpecifier","overrides":[],"src":"3294:8:9"},"parameters":{"id":5798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5802,"src":"3137:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$6997","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":5790,"nodeType":"UserDefinedTypeName","pathNode":{"id":5789,"name":"PostOpMode","nameLocations":["3137:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":6997,"src":"3137:10:9"},"referencedDeclaration":6997,"src":"3137:10:9","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$6997","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":5793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5802,"src":"3168:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5792,"name":"bytes","nodeType":"ElementaryTypeName","src":"3168:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5802,"src":"3206:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5794,"name":"uint256","nodeType":"ElementaryTypeName","src":"3206:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5802,"src":"3243:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5796,"name":"uint256","nodeType":"ElementaryTypeName","src":"3243:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3127:157:9"},"returnParameters":{"id":5800,"nodeType":"ParameterList","parameters":[],"src":"3303:0:9"},"scope":5957,"src":"3112:352:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5829,"nodeType":"Block","src":"3718:134:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5811,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"3736:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3745:6:9","memberName":"length","nodeType":"MemberAccess","src":"3736:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3230","id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3755:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"3736:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d61737465723a20696e76616c69642063616c6c44617461206c656e677468","id":5815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3759:36:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_a46ef91c55b9678716a89f861b9adb2dd6f8902ada171d2da0533a3e4362fd32","typeString":"literal_string \"Paymaster: invalid callData length\""},"value":"Paymaster: invalid callData length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a46ef91c55b9678716a89f861b9adb2dd6f8902ada171d2da0533a3e4362fd32","typeString":"literal_string \"Paymaster: invalid callData length\""}],"id":5810,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3728:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3728:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5817,"nodeType":"ExpressionStatement","src":"3728:68:9"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":5822,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5805,"src":"3829:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3230","id":5824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3829:14:9","startExpression":{"hexValue":"30","id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3838:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":5821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":5820,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3821:7:9","typeDescriptions":{}}},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":5819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3813:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5818,"name":"address","nodeType":"ElementaryTypeName","src":"3813:7:9","typeDescriptions":{}}},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3813:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5809,"id":5828,"nodeType":"Return","src":"3806:39:9"}]},"documentation":{"id":5803,"nodeType":"StructuredDocumentation","src":"3470:150:9","text":" @dev Helper function to extract target address from callData.\n Assumes callData format: target(20 bytes) + function call data"},"id":5830,"implemented":true,"kind":"function","modifiers":[],"name":"_extractTargetFromCallData","nameLocation":"3634:26:9","nodeType":"FunctionDefinition","parameters":{"id":5806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5805,"mutability":"mutable","name":"callData","nameLocation":"3676:8:9","nodeType":"VariableDeclaration","scope":5830,"src":"3661:23:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5804,"name":"bytes","nodeType":"ElementaryTypeName","src":"3661:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3660:25:9"},"returnParameters":{"id":5809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5830,"src":"3709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5807,"name":"address","nodeType":"ElementaryTypeName","src":"3709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3708:9:9"},"scope":5957,"src":"3625:227:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5887,"nodeType":"Block","src":"4141:418:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5841,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"4159:16:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4176:6:9","memberName":"length","nodeType":"MemberAccess","src":"4159:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"expression":{"id":5843,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"4186:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$6721_$","typeString":"type(library UserOperationLib)"}},"id":5844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4203:21:9","memberName":"PAYMASTER_DATA_OFFSET","nodeType":"MemberAccess","referencedDeclaration":6401,"src":"4186:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4227:2:9","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"4186:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4159:70:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d61737465723a20696e76616c69642074696d652064617461","id":5848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4231:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5a54aa21db6571c1440d4b763d749c53b0d2fc802899ecc9d8c8a51c8d19720f","typeString":"literal_string \"Paymaster: invalid time data\""},"value":"Paymaster: invalid time data"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5a54aa21db6571c1440d4b763d749c53b0d2fc802899ecc9d8c8a51c8d19720f","typeString":"literal_string \"Paymaster: invalid time data\""}],"id":5840,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4151:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4151:111:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5850,"nodeType":"ExpressionStatement","src":"4151:111:9"},{"expression":{"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5851,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"4281:10:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":5856,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"4308:16:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"expression":{"id":5859,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"4364:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$6721_$","typeString":"type(library UserOperationLib)"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4381:21:9","memberName":"PAYMASTER_DATA_OFFSET","nodeType":"MemberAccess","referencedDeclaration":6401,"src":"4364:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"36","id":5861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4405:1:9","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"4364:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4308:99:9","startExpression":{"expression":{"id":5857,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"4325:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$6721_$","typeString":"type(library UserOperationLib)"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4342:21:9","memberName":"PAYMASTER_DATA_OFFSET","nodeType":"MemberAccess","referencedDeclaration":6401,"src":"4325:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":5855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4301:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes6_$","typeString":"type(bytes6)"},"typeName":{"id":5854,"name":"bytes6","nodeType":"ElementaryTypeName","src":"4301:6:9","typeDescriptions":{}}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4301:107:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"}],"id":5853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4294:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5852,"name":"uint48","nodeType":"ElementaryTypeName","src":"4294:6:9","typeDescriptions":{}}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:115:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4281:128:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":5867,"nodeType":"ExpressionStatement","src":"4281:128:9"},{"expression":{"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5868,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"4419:10:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":5873,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"4446:16:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"expression":{"id":5878,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"4506:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$6721_$","typeString":"type(library UserOperationLib)"}},"id":5879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4523:21:9","memberName":"PAYMASTER_DATA_OFFSET","nodeType":"MemberAccess","referencedDeclaration":6401,"src":"4506:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":5880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4547:2:9","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"4506:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4446:104:9","startExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"expression":{"id":5874,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"4463:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$6721_$","typeString":"type(library UserOperationLib)"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4480:21:9","memberName":"PAYMASTER_DATA_OFFSET","nodeType":"MemberAccess","referencedDeclaration":6401,"src":"4463:38:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"36","id":5876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4504:1:9","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"4463:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":5872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4439:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes6_$","typeString":"type(bytes6)"},"typeName":{"id":5871,"name":"bytes6","nodeType":"ElementaryTypeName","src":"4439:6:9","typeDescriptions":{}}},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4439:112:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"}],"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4432:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5869,"name":"uint48","nodeType":"ElementaryTypeName","src":"4432:6:9","typeDescriptions":{}}},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4432:120:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4419:133:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":5886,"nodeType":"ExpressionStatement","src":"4419:133:9"}]},"documentation":{"id":5831,"nodeType":"StructuredDocumentation","src":"3858:152:9","text":" @dev Extract time validation data from paymasterAndData.\n Format after static fields: validUntil(6 bytes) + validAfter(6 bytes)"},"id":5888,"implemented":true,"kind":"function","modifiers":[],"name":"_extractTimeValidation","nameLocation":"4024:22:9","nodeType":"FunctionDefinition","parameters":{"id":5834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5833,"mutability":"mutable","name":"paymasterAndData","nameLocation":"4062:16:9","nodeType":"VariableDeclaration","scope":5888,"src":"4047:31:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":5832,"name":"bytes","nodeType":"ElementaryTypeName","src":"4047:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4046:33:9"},"returnParameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5836,"mutability":"mutable","name":"validUntil","nameLocation":"4110:10:9","nodeType":"VariableDeclaration","scope":5888,"src":"4103:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5835,"name":"uint48","nodeType":"ElementaryTypeName","src":"4103:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":5838,"mutability":"mutable","name":"validAfter","nameLocation":"4129:10:9","nodeType":"VariableDeclaration","scope":5888,"src":"4122:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5837,"name":"uint48","nodeType":"ElementaryTypeName","src":"4122:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4102:38:9"},"scope":5957,"src":"4015:544:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5922,"nodeType":"Block","src":"4761:106:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5902,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"4786:10:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":5901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4778:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5900,"name":"uint256","nodeType":"ElementaryTypeName","src":"4778:7:9","typeDescriptions":{}}},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4778:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3438","id":5904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4801:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"4778:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5908,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"4814:10:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":5907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4806:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5906,"name":"uint256","nodeType":"ElementaryTypeName","src":"4806:7:9","typeDescriptions":{}}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4806:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3936","id":5910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4829:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4806:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4778:53:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":5913,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"4835:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4851:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4835:17:9","trueExpression":{"hexValue":"31","id":5914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4847:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4834:19:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313434","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4857:3:9","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},"src":"4834:26:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4778:82:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5899,"id":5921,"nodeType":"Return","src":"4771:89:9"}]},"documentation":{"id":5889,"nodeType":"StructuredDocumentation","src":"4565:76:9","text":" @dev Pack validation data according to ERC-4337 standard."},"id":5923,"implemented":true,"kind":"function","modifiers":[],"name":"_packValidationData","nameLocation":"4655:19:9","nodeType":"FunctionDefinition","parameters":{"id":5896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"sigFailed","nameLocation":"4680:9:9","nodeType":"VariableDeclaration","scope":5923,"src":"4675:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5890,"name":"bool","nodeType":"ElementaryTypeName","src":"4675:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5893,"mutability":"mutable","name":"validUntil","nameLocation":"4698:10:9","nodeType":"VariableDeclaration","scope":5923,"src":"4691:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5892,"name":"uint48","nodeType":"ElementaryTypeName","src":"4691:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":5895,"mutability":"mutable","name":"validAfter","nameLocation":"4717:10:9","nodeType":"VariableDeclaration","scope":5923,"src":"4710:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5894,"name":"uint48","nodeType":"ElementaryTypeName","src":"4710:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4674:54:9"},"returnParameters":{"id":5899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5923,"src":"4752:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5897,"name":"uint256","nodeType":"ElementaryTypeName","src":"4752:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4751:9:9"},"scope":5957,"src":"4646:221:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5955,"nodeType":"Block","src":"5145:432:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":5941,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5200:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Paymaster_$5957","typeString":"contract Paymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Paymaster_$5957","typeString":"contract Paymaster"}],"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5192:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5939,"name":"address","nodeType":"ElementaryTypeName","src":"5192:7:9","typeDescriptions":{}}},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5192:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5945,"name":"verificationGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5926,"src":"5278:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5270:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5943,"name":"uint128","nodeType":"ElementaryTypeName","src":"5270:7:9","typeDescriptions":{}}},"id":5946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5270:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"id":5949,"name":"postOpGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5928,"src":"5361:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5353:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5947,"name":"uint128","nodeType":"ElementaryTypeName","src":"5353:7:9","typeDescriptions":{}}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5353:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":5951,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"5431:10:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":5952,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"5502:10:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":5937,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5162:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5166:12:9","memberName":"encodePacked","nodeType":"MemberAccess","src":"5162:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5162:408:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5936,"id":5954,"nodeType":"Return","src":"5155:415:9"}]},"documentation":{"id":5924,"nodeType":"StructuredDocumentation","src":"4873:68:9","text":" @dev Create paymasterAndData for a UserOperation."},"functionSelector":"8f8780a4","id":5956,"implemented":true,"kind":"function","modifiers":[],"name":"createPaymasterAndData","nameLocation":"4955:22:9","nodeType":"FunctionDefinition","parameters":{"id":5933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5926,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"4995:20:9","nodeType":"VariableDeclaration","scope":5956,"src":"4987:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5925,"name":"uint256","nodeType":"ElementaryTypeName","src":"4987:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5928,"mutability":"mutable","name":"postOpGasLimit","nameLocation":"5033:14:9","nodeType":"VariableDeclaration","scope":5956,"src":"5025:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5927,"name":"uint256","nodeType":"ElementaryTypeName","src":"5025:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5930,"mutability":"mutable","name":"validUntil","nameLocation":"5064:10:9","nodeType":"VariableDeclaration","scope":5956,"src":"5057:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5929,"name":"uint48","nodeType":"ElementaryTypeName","src":"5057:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":5932,"mutability":"mutable","name":"validAfter","nameLocation":"5091:10:9","nodeType":"VariableDeclaration","scope":5956,"src":"5084:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5931,"name":"uint48","nodeType":"ElementaryTypeName","src":"5084:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4977:130:9"},"returnParameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5956,"src":"5131:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5934,"name":"bytes","nodeType":"ElementaryTypeName","src":"5131:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5130:14:9"},"scope":5957,"src":"4946:631:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5958,"src":"246:5333:9","usedErrors":[13,18,5618,5620,5622],"usedEvents":[24,5628,5634]}],"src":"39:5540:9"},"id":9},"contracts/TestAccount.sol":{"ast":{"absolutePath":"contracts/TestAccount.sol","exportedSymbols":{"ECDSA":[1979],"IAccount":[6738],"IAccountExecute":[6751],"IAggregator":[6785],"IEntryPoint":[6970],"INonceManager":[6989],"ISenderCreator":[7045],"IStakeManager":[7149],"MessageHashUtils":[2065],"PackedUserOperation":[7171],"Strings":[1631],"TestAccount":[6196],"UserOperationLib":[6721],"calldataKeccak":[6357],"min":[6375]},"id":6197,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":5959,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"40:24:10"},{"absolutePath":"contracts/lib/interfaces/IAccount.sol","file":"./lib/interfaces/IAccount.sol","id":5960,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6197,"sourceUnit":6739,"src":"68:39:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/interfaces/IAccountExecute.sol","file":"./lib/interfaces/IAccountExecute.sol","id":5961,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6197,"sourceUnit":6752,"src":"109:46:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/interfaces/IEntryPoint.sol","file":"./lib/interfaces/IEntryPoint.sol","id":5962,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6197,"sourceUnit":6971,"src":"157:42:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/core/UserOperationLib.sol","file":"./lib/core/UserOperationLib.sol","id":5963,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6197,"sourceUnit":6722,"src":"201:41:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":5964,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6197,"sourceUnit":1980,"src":"244:62:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":5965,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6197,"sourceUnit":2066,"src":"308:73:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5966,"name":"IAccount","nameLocations":["409:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":6738,"src":"409:8:10"},"id":5967,"nodeType":"InheritanceSpecifier","src":"409:8:10"},{"baseName":{"id":5968,"name":"IAccountExecute","nameLocations":["419:15:10"],"nodeType":"IdentifierPath","referencedDeclaration":6751,"src":"419:15:10"},"id":5969,"nodeType":"InheritanceSpecifier","src":"419:15:10"}],"canonicalName":"TestAccount","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6196,"linearizedBaseContracts":[6196,6751,6738],"name":"TestAccount","nameLocation":"394:11:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5972,"libraryName":{"id":5970,"name":"ECDSA","nameLocations":["448:5:10"],"nodeType":"IdentifierPath","referencedDeclaration":1979,"src":"448:5:10"},"nodeType":"UsingForDirective","src":"442:24:10","typeName":{"id":5971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"458:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":5975,"libraryName":{"id":5973,"name":"MessageHashUtils","nameLocations":["478:16:10"],"nodeType":"IdentifierPath","referencedDeclaration":2065,"src":"478:16:10"},"nodeType":"UsingForDirective","src":"472:35:10","typeName":{"id":5974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"499:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":false,"functionSelector":"b0d691fe","id":5978,"mutability":"immutable","name":"entryPoint","nameLocation":"544:10:10","nodeType":"VariableDeclaration","scope":6196,"src":"515:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"},"typeName":{"id":5977,"nodeType":"UserDefinedTypeName","pathNode":{"id":5976,"name":"IEntryPoint","nameLocations":["515:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":6970,"src":"515:11:10"},"referencedDeclaration":6970,"src":"515:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":5980,"mutability":"mutable","name":"owner","nameLocation":"576:5:10","nodeType":"VariableDeclaration","scope":6196,"src":"561:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5979,"name":"address","nodeType":"ElementaryTypeName","src":"561:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"526ffefac8167421b9048ae3377810715d834479565b0182ea4155f0efa4c380","id":5987,"name":"AccountInitialized","nameLocation":"596:18:10","nodeType":"EventDefinition","parameters":{"id":5986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5983,"indexed":true,"mutability":"mutable","name":"entryPoint","nameLocation":"635:10:10","nodeType":"VariableDeclaration","scope":5987,"src":"615:30:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"},"typeName":{"id":5982,"nodeType":"UserDefinedTypeName","pathNode":{"id":5981,"name":"IEntryPoint","nameLocations":["615:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":6970,"src":"615:11:10"},"referencedDeclaration":6970,"src":"615:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":5985,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"663:5:10","nodeType":"VariableDeclaration","scope":5987,"src":"647:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5984,"name":"address","nodeType":"ElementaryTypeName","src":"647:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"614:55:10"},"src":"590:80:10"},{"body":{"id":5998,"nodeType":"Block","src":"699:81:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5990,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"718:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"722:6:10","memberName":"sender","nodeType":"MemberAccess","src":"718:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5992,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"732:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"718:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206e6f74204f776e6572","id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"739:20:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_34f43f563a86ec64bf123100375b8af7949a76ebb6e77a7d36f7dfed6cbcd4d6","typeString":"literal_string \"account: not Owner\""},"value":"account: not Owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34f43f563a86ec64bf123100375b8af7949a76ebb6e77a7d36f7dfed6cbcd4d6","typeString":"literal_string \"account: not Owner\""}],"id":5989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"710:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"710:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5996,"nodeType":"ExpressionStatement","src":"710:50:10"},{"id":5997,"nodeType":"PlaceholderStatement","src":"771:1:10"}]},"id":5999,"name":"onlyOwner","nameLocation":"687:9:10","nodeType":"ModifierDefinition","parameters":{"id":5988,"nodeType":"ParameterList","parameters":[],"src":"696:2:10"},"src":"678:102:10","virtual":false,"visibility":"internal"},{"body":{"id":6013,"nodeType":"Block","src":"814:100:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"833:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"837:6:10","memberName":"sender","nodeType":"MemberAccess","src":"833:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6006,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"855:10:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}],"id":6005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"847:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6004,"name":"address","nodeType":"ElementaryTypeName","src":"847:7:10","typeDescriptions":{}}},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"847:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"833:33:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206e6f7420456e747279506f696e74","id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"868:25:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_520737350501b639a3040e8bfa399a40ff84f07adcf0019b13835a075606600c","typeString":"literal_string \"account: not EntryPoint\""},"value":"account: not EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_520737350501b639a3040e8bfa399a40ff84f07adcf0019b13835a075606600c","typeString":"literal_string \"account: not EntryPoint\""}],"id":6001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"825:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"825:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6011,"nodeType":"ExpressionStatement","src":"825:69:10"},{"id":6012,"nodeType":"PlaceholderStatement","src":"905:1:10"}]},"id":6014,"name":"onlyEntryPoint","nameLocation":"797:14:10","nodeType":"ModifierDefinition","parameters":{"id":6000,"nodeType":"ParameterList","parameters":[],"src":"811:2:10"},"src":"788:126:10","virtual":false,"visibility":"internal"},{"body":{"id":6035,"nodeType":"Block","src":"975:123:10","statements":[{"expression":{"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6022,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"986:10:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6023,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"999:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}},"src":"986:24:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}},"id":6025,"nodeType":"ExpressionStatement","src":"986:24:10"},{"expression":{"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6026,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"1021:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6027,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"1029:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1021:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6029,"nodeType":"ExpressionStatement","src":"1021:14:10"},{"eventCall":{"arguments":[{"id":6031,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"1070:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}},{"id":6032,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"1083:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6030,"name":"AccountInitialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"1051:18:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IEntryPoint_$6970_$_t_address_$returns$__$","typeString":"function (contract IEntryPoint,address)"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1051:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6034,"nodeType":"EmitStatement","src":"1046:44:10"}]},"id":6036,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6017,"mutability":"mutable","name":"_entryPoint","nameLocation":"946:11:10","nodeType":"VariableDeclaration","scope":6036,"src":"934:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"},"typeName":{"id":6016,"nodeType":"UserDefinedTypeName","pathNode":{"id":6015,"name":"IEntryPoint","nameLocations":["934:11:10"],"nodeType":"IdentifierPath","referencedDeclaration":6970,"src":"934:11:10"},"referencedDeclaration":6970,"src":"934:11:10","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$6970","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":6019,"mutability":"mutable","name":"_owner","nameLocation":"967:6:10","nodeType":"VariableDeclaration","scope":6036,"src":"959:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6018,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"933:41:10"},"returnParameters":{"id":6021,"nodeType":"ParameterList","parameters":[],"src":"975:0:10"},"scope":6196,"src":"922:176:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[6737],"body":{"id":6082,"nodeType":"Block","src":"1346:283:10","statements":[{"expression":{"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6052,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"1357:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6054,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"1393:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":6055,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"1401:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6053,"name":"_validateSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"1374:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_PackedUserOperation_$7171_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (struct PackedUserOperation calldata,bytes32) view returns (uint256)"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1374:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1357:55:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6058,"nodeType":"ExpressionStatement","src":"1357:55:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6059,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"1427:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1449:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1427:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6081,"nodeType":"IfStatement","src":"1423:199:10","trueBody":{"id":6080,"nodeType":"Block","src":"1452:170:10","statements":[{"assignments":[6063,null],"declarations":[{"constant":false,"id":6063,"mutability":"mutable","name":"success","nameLocation":"1473:7:10","nodeType":"VariableDeclaration","scope":6080,"src":"1468:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6062,"name":"bool","nodeType":"ElementaryTypeName","src":"1468:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":6074,"initialValue":{"arguments":[{"hexValue":"","id":6072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1538:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":6066,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1493:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1497:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1493:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1485:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6064,"name":"address","nodeType":"ElementaryTypeName","src":"1485:8:10","stateMutability":"payable","typeDescriptions":{}}},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1485:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1505:4:10","memberName":"call","nodeType":"MemberAccess","src":"1485:24:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":6070,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"1517:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1485:52:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1485:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1467:74:10"},{"expression":{"arguments":[{"id":6076,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"1564:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206661696c656420746f2066756e6420456e747279506f696e74","id":6077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1573:36:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_bcbccd7f00a120dd5c8288fc42b2ab3be5f36e4a7bd3feb315707f263b339153","typeString":"literal_string \"account: failed to fund EntryPoint\""},"value":"account: failed to fund EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bcbccd7f00a120dd5c8288fc42b2ab3be5f36e4a7bd3feb315707f263b339153","typeString":"literal_string \"account: failed to fund EntryPoint\""}],"id":6075,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1556:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1556:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6079,"nodeType":"ExpressionStatement","src":"1556:54:10"}]}}]},"documentation":{"id":6037,"nodeType":"StructuredDocumentation","src":"1106:24:10","text":"@inheritdoc IAccount"},"functionSelector":"19822f7c","id":6083,"implemented":true,"kind":"function","modifiers":[{"id":6048,"kind":"modifierInvocation","modifierName":{"id":6047,"name":"onlyEntryPoint","nameLocations":["1298:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":6014,"src":"1298:14:10"},"nodeType":"ModifierInvocation","src":"1298:14:10"}],"name":"validateUserOp","nameLocation":"1145:14:10","nodeType":"FunctionDefinition","overrides":{"id":6046,"nodeType":"OverrideSpecifier","overrides":[],"src":"1289:8:10"},"parameters":{"id":6045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6040,"mutability":"mutable","name":"userOp","nameLocation":"1199:6:10","nodeType":"VariableDeclaration","scope":6083,"src":"1170:35:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6039,"nodeType":"UserDefinedTypeName","pathNode":{"id":6038,"name":"PackedUserOperation","nameLocations":["1170:19:10"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"1170:19:10"},"referencedDeclaration":7171,"src":"1170:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":6042,"mutability":"mutable","name":"userOpHash","nameLocation":"1224:10:10","nodeType":"VariableDeclaration","scope":6083,"src":"1216:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1216:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6044,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"1253:19:10","nodeType":"VariableDeclaration","scope":6083,"src":"1245:27:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1245:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1159:120:10"},"returnParameters":{"id":6051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6050,"mutability":"mutable","name":"validationData","nameLocation":"1330:14:10","nodeType":"VariableDeclaration","scope":6083,"src":"1322:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6049,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1321:24:10"},"scope":6196,"src":"1136:493:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[6750],"body":{"id":6100,"nodeType":"Block","src":"1812:50:10","statements":[{"expression":{"arguments":[{"expression":{"id":6096,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"1838:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:8:10","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":7160,"src":"1838:15:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6095,"name":"_executeUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6191,"src":"1823:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (bytes calldata)"}},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6099,"nodeType":"ExpressionStatement","src":"1823:31:10"}]},"documentation":{"id":6084,"nodeType":"StructuredDocumentation","src":"1637:31:10","text":"@inheritdoc IAccountExecute"},"functionSelector":"8dd7712f","id":6101,"implemented":true,"kind":"function","modifiers":[{"id":6093,"kind":"modifierInvocation","modifierName":{"id":6092,"name":"onlyEntryPoint","nameLocations":["1797:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":6014,"src":"1797:14:10"},"nodeType":"ModifierInvocation","src":"1797:14:10"}],"name":"executeUserOp","nameLocation":"1683:13:10","nodeType":"FunctionDefinition","overrides":{"id":6091,"nodeType":"OverrideSpecifier","overrides":[],"src":"1788:8:10"},"parameters":{"id":6090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"userOp","nameLocation":"1736:6:10","nodeType":"VariableDeclaration","scope":6101,"src":"1707:35:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6086,"nodeType":"UserDefinedTypeName","pathNode":{"id":6085,"name":"PackedUserOperation","nameLocations":["1707:19:10"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"1707:19:10"},"referencedDeclaration":7171,"src":"1707:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":6089,"mutability":"mutable","name":"userOpHash","nameLocation":"1761:10:10","nodeType":"VariableDeclaration","scope":6101,"src":"1753:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1753:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1696:82:10"},"returnParameters":{"id":6094,"nodeType":"ParameterList","parameters":[],"src":"1812:0:10"},"scope":6196,"src":"1674:188:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6134,"nodeType":"Block","src":"2027:258:10","statements":[{"assignments":[6112],"declarations":[{"constant":false,"id":6112,"mutability":"mutable","name":"hash","nameLocation":"2046:4:10","nodeType":"VariableDeclaration","scope":6134,"src":"2038:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2038:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6116,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6113,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6106,"src":"2053:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2064:22:10","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":1994,"src":"2053:33:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2053:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2038:50:10"},{"assignments":[6118],"declarations":[{"constant":false,"id":6118,"mutability":"mutable","name":"recovered","nameLocation":"2107:9:10","nodeType":"VariableDeclaration","scope":6134,"src":"2099:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6117,"name":"address","nodeType":"ElementaryTypeName","src":"2099:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6124,"initialValue":{"arguments":[{"expression":{"id":6121,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6104,"src":"2132:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2139:9:10","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":7170,"src":"2132:16:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":6119,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"2119:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2124:7:10","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1735,"src":"2119:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2119:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2099:50:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6125,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"2164:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6126,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5980,"src":"2177:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2164:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6131,"nodeType":"IfStatement","src":"2160:80:10","trueBody":{"id":6130,"nodeType":"Block","src":"2184:56:10","statements":[{"expression":{"hexValue":"31","id":6128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2206:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":6110,"id":6129,"nodeType":"Return","src":"2199:8:10"}]}},{"expression":{"hexValue":"30","id":6132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2257:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6110,"id":6133,"nodeType":"Return","src":"2250:8:10"}]},"id":6135,"implemented":true,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"1879:18:10","nodeType":"FunctionDefinition","parameters":{"id":6107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6104,"mutability":"mutable","name":"userOp","nameLocation":"1937:6:10","nodeType":"VariableDeclaration","scope":6135,"src":"1908:35:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6103,"nodeType":"UserDefinedTypeName","pathNode":{"id":6102,"name":"PackedUserOperation","nameLocations":["1908:19:10"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"1908:19:10"},"referencedDeclaration":7171,"src":"1908:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":6106,"mutability":"mutable","name":"userOpHash","nameLocation":"1962:10:10","nodeType":"VariableDeclaration","scope":6135,"src":"1954:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1954:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1897:82:10"},"returnParameters":{"id":6110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6109,"mutability":"mutable","name":"validationData","nameLocation":"2011:14:10","nodeType":"VariableDeclaration","scope":6135,"src":"2003:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6108,"name":"uint256","nodeType":"ElementaryTypeName","src":"2003:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2002:24:10"},"scope":6196,"src":"1870:415:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6190,"nodeType":"Block","src":"2351:538:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6140,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"2366:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2375:6:10","memberName":"length","nodeType":"MemberAccess","src":"2366:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2385:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2366:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6146,"nodeType":"IfStatement","src":"2362:59:10","trueBody":{"id":6145,"nodeType":"Block","src":"2388:33:10","statements":[{"functionReturnParameters":6139,"id":6144,"nodeType":"Return","src":"2403:7:10"}]}},{"assignments":[6148],"declarations":[{"constant":false,"id":6148,"mutability":"mutable","name":"target","nameLocation":"2490:6:10","nodeType":"VariableDeclaration","scope":6190,"src":"2482:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6147,"name":"address","nodeType":"ElementaryTypeName","src":"2482:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6159,"initialValue":{"arguments":[{"arguments":[{"baseExpression":{"id":6153,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"2515:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"hexValue":"3230","id":6155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2526:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2515:14:10","startExpression":{"hexValue":"30","id":6154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2524:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":6152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2507:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":6151,"name":"bytes20","nodeType":"ElementaryTypeName","src":"2507:7:10","typeDescriptions":{}}},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2507:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":6150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2499:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6149,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:10","typeDescriptions":{}}},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2499:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2482:49:10"},{"assignments":[6161],"declarations":[{"constant":false,"id":6161,"mutability":"mutable","name":"data","nameLocation":"2557:4:10","nodeType":"VariableDeclaration","scope":6190,"src":"2542:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6160,"name":"bytes","nodeType":"ElementaryTypeName","src":"2542:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6165,"initialValue":{"baseExpression":{"id":6162,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"2564:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2564:13:10","startExpression":{"hexValue":"3230","id":6163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2573:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"nodeType":"VariableDeclarationStatement","src":"2542:35:10"},{"assignments":[6167,6169],"declarations":[{"constant":false,"id":6167,"mutability":"mutable","name":"success","nameLocation":"2596:7:10","nodeType":"VariableDeclaration","scope":6190,"src":"2591:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6166,"name":"bool","nodeType":"ElementaryTypeName","src":"2591:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6169,"mutability":"mutable","name":"result","nameLocation":"2618:6:10","nodeType":"VariableDeclaration","scope":6190,"src":"2605:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6168,"name":"bytes","nodeType":"ElementaryTypeName","src":"2605:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6174,"initialValue":{"arguments":[{"id":6172,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"2640:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":6170,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6148,"src":"2628:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2635:4:10","memberName":"call","nodeType":"MemberAccess","src":"2628:11:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2628:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2590:55:10"},{"condition":{"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2660:8:10","subExpression":{"id":6175,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"2661:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6189,"nodeType":"IfStatement","src":"2656:226:10","trueBody":{"id":6188,"nodeType":"Block","src":"2670:212:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6177,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"2689:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2696:6:10","memberName":"length","nodeType":"MemberAccess","src":"2689:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2706:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2689:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6186,"nodeType":"IfStatement","src":"2685:91:10","trueBody":{"id":6185,"nodeType":"Block","src":"2709:67:10","statements":[{"expression":{"arguments":[{"hexValue":"6163636f756e743a2063616c6c207265766572746564","id":6182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2735:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1ca099c4e784e19975c481999e983d66a2fe4630ff354c3cdabe0c83aea2350","typeString":"literal_string \"account: call reverted\""},"value":"account: call reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b1ca099c4e784e19975c481999e983d66a2fe4630ff354c3cdabe0c83aea2350","typeString":"literal_string \"account: call reverted\""}],"id":6181,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2728:6:10","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6184,"nodeType":"ExpressionStatement","src":"2728:32:10"}]}},{"AST":{"nativeSrc":"2799:72:10","nodeType":"YulBlock","src":"2799:72:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"result","nativeSrc":"2829:6:10","nodeType":"YulIdentifier","src":"2829:6:10"},{"kind":"number","nativeSrc":"2837:2:10","nodeType":"YulLiteral","src":"2837:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2825:3:10","nodeType":"YulIdentifier","src":"2825:3:10"},"nativeSrc":"2825:15:10","nodeType":"YulFunctionCall","src":"2825:15:10"},{"arguments":[{"name":"result","nativeSrc":"2848:6:10","nodeType":"YulIdentifier","src":"2848:6:10"}],"functionName":{"name":"mload","nativeSrc":"2842:5:10","nodeType":"YulIdentifier","src":"2842:5:10"},"nativeSrc":"2842:13:10","nodeType":"YulFunctionCall","src":"2842:13:10"}],"functionName":{"name":"revert","nativeSrc":"2818:6:10","nodeType":"YulIdentifier","src":"2818:6:10"},"nativeSrc":"2818:38:10","nodeType":"YulFunctionCall","src":"2818:38:10"},"nativeSrc":"2818:38:10","nodeType":"YulExpressionStatement","src":"2818:38:10"}]},"evmVersion":"cancun","externalReferences":[{"declaration":6169,"isOffset":false,"isSlot":false,"src":"2829:6:10","valueSize":1},{"declaration":6169,"isOffset":false,"isSlot":false,"src":"2848:6:10","valueSize":1}],"id":6187,"nodeType":"InlineAssembly","src":"2790:81:10"}]}}]},"id":6191,"implemented":true,"kind":"function","modifiers":[],"name":"_executeUserOp","nameLocation":"2302:14:10","nodeType":"FunctionDefinition","parameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6137,"mutability":"mutable","name":"callData","nameLocation":"2332:8:10","nodeType":"VariableDeclaration","scope":6191,"src":"2317:23:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6136,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2316:25:10"},"returnParameters":{"id":6139,"nodeType":"ParameterList","parameters":[],"src":"2351:0:10"},"scope":6196,"src":"2293:596:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":6194,"nodeType":"Block","src":"2965:2:10","statements":[]},"id":6195,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6192,"nodeType":"ParameterList","parameters":[],"src":"2945:2:10"},"returnParameters":{"id":6193,"nodeType":"ParameterList","parameters":[],"src":"2965:0:10"},"scope":6196,"src":"2938:29:10","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":6197,"src":"385:2585:10","usedErrors":[1642,1647,1652],"usedEvents":[5987]}],"src":"40:2930:10"},"id":10},"contracts/lib/core/Helpers.sol":{"ast":{"absolutePath":"contracts/lib/core/Helpers.sol","exportedSymbols":{"SIG_VALIDATION_FAILED":[6201],"SIG_VALIDATION_SUCCESS":[6204],"ValidationData":[6212],"_packValidationData":[6309,6347],"_parseValidationData":[6272],"calldataKeccak":[6357],"finalizeAllocation":[6385],"min":[6375]},"id":6386,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6198,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:11"},{"constant":true,"id":6201,"mutability":"constant","name":"SIG_VALIDATION_FAILED","nameLocation":"287:21:11","nodeType":"VariableDeclaration","scope":6386,"src":"270:42:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6199,"name":"uint256","nodeType":"ElementaryTypeName","src":"270:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":6200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":6204,"mutability":"constant","name":"SIG_VALIDATION_SUCCESS","nameLocation":"453:22:11","nodeType":"VariableDeclaration","scope":6386,"src":"436:43:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6202,"name":"uint256","nodeType":"ElementaryTypeName","src":"436:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"478:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"canonicalName":"ValidationData","documentation":{"id":6205,"nodeType":"StructuredDocumentation","src":"486:669:11","text":" Returned data from validateUserOp.\n validateUserOp returns a uint256, which is created by `_packedValidationData` and\n parsed by `_parseValidationData`.\n @param aggregator  - address(0) - The account validated the signature by itself.\n                      address(1) - The account failed to validate the signature.\n                      otherwise - This is an address of a signature aggregator that must\n                                  be used to validate the signature.\n @param validAfter  - This UserOp is valid only after this timestamp.\n @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"."},"id":6212,"members":[{"constant":false,"id":6207,"mutability":"mutable","name":"aggregator","nameLocation":"1194:10:11","nodeType":"VariableDeclaration","scope":6212,"src":"1186:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6206,"name":"address","nodeType":"ElementaryTypeName","src":"1186:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6209,"mutability":"mutable","name":"validAfter","nameLocation":"1218:10:11","nodeType":"VariableDeclaration","scope":6212,"src":"1211:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6208,"name":"uint48","nodeType":"ElementaryTypeName","src":"1211:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":6211,"mutability":"mutable","name":"validUntil","nameLocation":"1242:10:11","nodeType":"VariableDeclaration","scope":6212,"src":"1235:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6210,"name":"uint48","nodeType":"ElementaryTypeName","src":"1235:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"1164:14:11","nodeType":"StructDefinition","scope":6386,"src":"1157:99:11","visibility":"public"},{"body":{"id":6271,"nodeType":"Block","src":"1601:322:11","statements":[{"assignments":[6222],"declarations":[{"constant":false,"id":6222,"mutability":"mutable","name":"aggregator","nameLocation":"1616:10:11","nodeType":"VariableDeclaration","scope":6271,"src":"1608:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6221,"name":"address","nodeType":"ElementaryTypeName","src":"1608:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6230,"initialValue":{"arguments":[{"arguments":[{"id":6227,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"1645:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1637:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6225,"name":"uint160","nodeType":"ElementaryTypeName","src":"1637:7:11","typeDescriptions":{}}},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1637:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1629:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6223,"name":"address","nodeType":"ElementaryTypeName","src":"1629:7:11","typeDescriptions":{}}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1629:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1608:53:11"},{"assignments":[6232],"declarations":[{"constant":false,"id":6232,"mutability":"mutable","name":"validUntil","nameLocation":"1675:10:11","nodeType":"VariableDeclaration","scope":6271,"src":"1668:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6231,"name":"uint48","nodeType":"ElementaryTypeName","src":"1668:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":6239,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6235,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"1695:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":6236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1695:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1688:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6233,"name":"uint48","nodeType":"ElementaryTypeName","src":"1688:6:11","typeDescriptions":{}}},"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1688:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1668:49:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6240,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"1728:10:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1742:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1728:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6252,"nodeType":"IfStatement","src":"1724:69:11","trueBody":{"id":6251,"nodeType":"Block","src":"1745:48:11","statements":[{"expression":{"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6243,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"1756:10:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":6246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1774:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6245,"name":"uint48","nodeType":"ElementaryTypeName","src":"1774:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6244,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1769:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1782:3:11","memberName":"max","nodeType":"MemberAccess","src":"1769:16:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1756:29:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":6250,"nodeType":"ExpressionStatement","src":"1756:29:11"}]}},{"assignments":[6254],"declarations":[{"constant":false,"id":6254,"mutability":"mutable","name":"validAfter","nameLocation":"1806:10:11","nodeType":"VariableDeclaration","scope":6271,"src":"1799:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6253,"name":"uint48","nodeType":"ElementaryTypeName","src":"1799:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":6264,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6257,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"1826:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":6260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":6258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1845:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":6259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1850:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1845:8:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":6261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1844:10:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1826:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1819:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6255,"name":"uint48","nodeType":"ElementaryTypeName","src":"1819:6:11","typeDescriptions":{}}},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1819:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1799:56:11"},{"expression":{"arguments":[{"id":6266,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"1884:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6267,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6254,"src":"1896:10:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":6268,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"1908:10:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":6265,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"1869:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$6212_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1869:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$6212_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":6220,"id":6270,"nodeType":"Return","src":"1862:57:11"}]},"documentation":{"id":6213,"nodeType":"StructuredDocumentation","src":"1260:235:11","text":" Extract aggregator/sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data.\n @return data - The unpacked in-memory validation data."},"id":6272,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"1506:20:11","nodeType":"FunctionDefinition","parameters":{"id":6216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6215,"mutability":"mutable","name":"validationData","nameLocation":"1541:14:11","nodeType":"VariableDeclaration","scope":6272,"src":"1533:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1533:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1526:32:11"},"returnParameters":{"id":6220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6219,"mutability":"mutable","name":"data","nameLocation":"1595:4:11","nodeType":"VariableDeclaration","scope":6272,"src":"1573:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$6212_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":6218,"nodeType":"UserDefinedTypeName","pathNode":{"id":6217,"name":"ValidationData","nameLocations":["1573:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":6212,"src":"1573:14:11"},"referencedDeclaration":6212,"src":"1573:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$6212_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1572:28:11"},"scope":6386,"src":"1497:426:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6308,"nodeType":"Block","src":"2167:148:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":6283,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"2198:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$6212_memory_ptr","typeString":"struct ValidationData memory"}},"id":6284,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2203:10:11","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":6207,"src":"2198:15:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2190:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6281,"name":"uint160","nodeType":"ElementaryTypeName","src":"2190:7:11","typeDescriptions":{}}},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2190:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":6288,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"2235:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$6212_memory_ptr","typeString":"struct ValidationData memory"}},"id":6289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2240:10:11","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":6211,"src":"2235:15:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":6287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2227:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6286,"name":"uint256","nodeType":"ElementaryTypeName","src":"2227:7:11","typeDescriptions":{}}},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2227:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":6291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2255:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2227:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2226:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2190:69:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":6297,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"2280:4:11","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$6212_memory_ptr","typeString":"struct ValidationData memory"}},"id":6298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2285:10:11","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":6209,"src":"2280:15:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2272:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6295,"name":"uint256","nodeType":"ElementaryTypeName","src":"2272:7:11","typeDescriptions":{}}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2272:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":6302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":6300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2301:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":6301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2307:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2301:8:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":6303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2300:10:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2272:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6305,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2271:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2190:121:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6280,"id":6307,"nodeType":"Return","src":"2174:137:11"}]},"documentation":{"id":6273,"nodeType":"StructuredDocumentation","src":"1927:150:11","text":" Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack.\n @return the packed validation data."},"id":6309,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2088:19:11","nodeType":"FunctionDefinition","parameters":{"id":6277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6276,"mutability":"mutable","name":"data","nameLocation":"2136:4:11","nodeType":"VariableDeclaration","scope":6309,"src":"2114:26:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$6212_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":6275,"nodeType":"UserDefinedTypeName","pathNode":{"id":6274,"name":"ValidationData","nameLocations":["2114:14:11"],"nodeType":"IdentifierPath","referencedDeclaration":6212,"src":"2114:14:11"},"referencedDeclaration":6212,"src":"2114:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$6212_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2107:36:11"},"returnParameters":{"id":6280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6309,"src":"2158:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6278,"name":"uint256","nodeType":"ElementaryTypeName","src":"2158:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2157:9:11"},"scope":6386,"src":"2079:236:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6346,"nodeType":"Block","src":"2811:175:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":6321,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6312,"src":"2835:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6323,"name":"SIG_VALIDATION_SUCCESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"2872:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2835:59:11","trueExpression":{"id":6322,"name":"SIG_VALIDATION_FAILED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"2848:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2834:61:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6328,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"2916:10:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":6327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2908:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6326,"name":"uint256","nodeType":"ElementaryTypeName","src":"2908:7:11","typeDescriptions":{}}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2908:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":6330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2931:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2908:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2907:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2834:101:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6336,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"2956:10:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":6335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2948:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2948:7:11","typeDescriptions":{}}},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2948:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":6340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":6338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2972:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2972:8:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":6341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2971:10:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2948:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6343,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2947:35:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2834:148:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6320,"id":6345,"nodeType":"Return","src":"2818:164:11"}]},"documentation":{"id":6310,"nodeType":"StructuredDocumentation","src":"2319:366:11","text":" Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\".\n @param validAfter - First timestamp this UserOperation is valid.\n @return the packed validation data."},"id":6347,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2696:19:11","nodeType":"FunctionDefinition","parameters":{"id":6317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6312,"mutability":"mutable","name":"sigFailed","nameLocation":"2727:9:11","nodeType":"VariableDeclaration","scope":6347,"src":"2722:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6311,"name":"bool","nodeType":"ElementaryTypeName","src":"2722:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6314,"mutability":"mutable","name":"validUntil","nameLocation":"2750:10:11","nodeType":"VariableDeclaration","scope":6347,"src":"2743:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6313,"name":"uint48","nodeType":"ElementaryTypeName","src":"2743:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":6316,"mutability":"mutable","name":"validAfter","nameLocation":"2774:10:11","nodeType":"VariableDeclaration","scope":6347,"src":"2767:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6315,"name":"uint48","nodeType":"ElementaryTypeName","src":"2767:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2715:72:11"},"returnParameters":{"id":6320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6347,"src":"2802:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6318,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2801:9:11"},"scope":6386,"src":"2687:299:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6356,"nodeType":"Block","src":"3371:216:11","statements":[{"AST":{"nativeSrc":"3407:173:11","nodeType":"YulBlock","src":"3407:173:11","statements":[{"nativeSrc":"3422:22:11","nodeType":"YulVariableDeclaration","src":"3422:22:11","value":{"arguments":[{"kind":"number","nativeSrc":"3439:4:11","nodeType":"YulLiteral","src":"3439:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3433:5:11","nodeType":"YulIdentifier","src":"3433:5:11"},"nativeSrc":"3433:11:11","nodeType":"YulFunctionCall","src":"3433:11:11"},"variables":[{"name":"mem","nativeSrc":"3426:3:11","nodeType":"YulTypedName","src":"3426:3:11","type":""}]},{"nativeSrc":"3458:22:11","nodeType":"YulVariableDeclaration","src":"3458:22:11","value":{"name":"data.length","nativeSrc":"3469:11:11","nodeType":"YulIdentifier","src":"3469:11:11"},"variables":[{"name":"len","nativeSrc":"3462:3:11","nodeType":"YulTypedName","src":"3462:3:11","type":""}]},{"expression":{"arguments":[{"name":"mem","nativeSrc":"3507:3:11","nodeType":"YulIdentifier","src":"3507:3:11"},{"name":"data.offset","nativeSrc":"3512:11:11","nodeType":"YulIdentifier","src":"3512:11:11"},{"name":"len","nativeSrc":"3525:3:11","nodeType":"YulIdentifier","src":"3525:3:11"}],"functionName":{"name":"calldatacopy","nativeSrc":"3494:12:11","nodeType":"YulIdentifier","src":"3494:12:11"},"nativeSrc":"3494:35:11","nodeType":"YulFunctionCall","src":"3494:35:11"},"nativeSrc":"3494:35:11","nodeType":"YulExpressionStatement","src":"3494:35:11"},{"nativeSrc":"3543:26:11","nodeType":"YulAssignment","src":"3543:26:11","value":{"arguments":[{"name":"mem","nativeSrc":"3560:3:11","nodeType":"YulIdentifier","src":"3560:3:11"},{"name":"len","nativeSrc":"3565:3:11","nodeType":"YulIdentifier","src":"3565:3:11"}],"functionName":{"name":"keccak256","nativeSrc":"3550:9:11","nodeType":"YulIdentifier","src":"3550:9:11"},"nativeSrc":"3550:19:11","nodeType":"YulFunctionCall","src":"3550:19:11"},"variableNames":[{"name":"ret","nativeSrc":"3543:3:11","nodeType":"YulIdentifier","src":"3543:3:11"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":6350,"isOffset":false,"isSlot":false,"src":"3469:11:11","suffix":"length","valueSize":1},{"declaration":6350,"isOffset":true,"isSlot":false,"src":"3512:11:11","suffix":"offset","valueSize":1},{"declaration":6353,"isOffset":false,"isSlot":false,"src":"3543:3:11","valueSize":1}],"flags":["memory-safe"],"id":6355,"nodeType":"InlineAssembly","src":"3382:198:11"}]},"documentation":{"id":6348,"nodeType":"StructuredDocumentation","src":"2990:303:11","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n @param data - the calldata bytes array to perform keccak on.\n @return ret - the keccak hash of the 'data' array."},"id":6357,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3308:14:11","nodeType":"FunctionDefinition","parameters":{"id":6351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6350,"mutability":"mutable","name":"data","nameLocation":"3338:4:11","nodeType":"VariableDeclaration","scope":6357,"src":"3323:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6349,"name":"bytes","nodeType":"ElementaryTypeName","src":"3323:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3322:21:11"},"returnParameters":{"id":6354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6353,"mutability":"mutable","name":"ret","nameLocation":"3366:3:11","nodeType":"VariableDeclaration","scope":6357,"src":"3358:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3358:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3357:13:11"},"scope":6386,"src":"3299:288:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6374,"nodeType":"Block","src":"3789:39:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6367,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"3807:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6368,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"3811:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3807:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6371,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"3819:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3807:13:11","trueExpression":{"id":6370,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"3815:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6366,"id":6373,"nodeType":"Return","src":"3800:20:11"}]},"documentation":{"id":6358,"nodeType":"StructuredDocumentation","src":"3593:132:11","text":" The minimum of two numbers.\n @param a - First number.\n @param b - Second number.\n @return - the minimum value."},"id":6375,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"min","nameLocation":"3740:3:11","nodeType":"FunctionDefinition","parameters":{"id":6363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6360,"mutability":"mutable","name":"a","nameLocation":"3752:1:11","nodeType":"VariableDeclaration","scope":6375,"src":"3744:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6359,"name":"uint256","nodeType":"ElementaryTypeName","src":"3744:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6362,"mutability":"mutable","name":"b","nameLocation":"3763:1:11","nodeType":"VariableDeclaration","scope":6375,"src":"3755:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6361,"name":"uint256","nodeType":"ElementaryTypeName","src":"3755:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:22:11"},"returnParameters":{"id":6366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6375,"src":"3780:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6364,"name":"uint256","nodeType":"ElementaryTypeName","src":"3780:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3779:9:11"},"scope":6386,"src":"3731:97:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6384,"nodeType":"Block","src":"4129:444:11","statements":[{"AST":{"nativeSrc":"4166:400:11","nodeType":"YulBlock","src":"4166:400:11","statements":[{"expression":{"arguments":[{"name":"memPointer","nativeSrc":"4201:10:11","nodeType":"YulIdentifier","src":"4201:10:11"},{"name":"allocationSize","nativeSrc":"4213:14:11","nodeType":"YulIdentifier","src":"4213:14:11"}],"functionName":{"name":"finalize_allocation","nativeSrc":"4181:19:11","nodeType":"YulIdentifier","src":"4181:19:11"},"nativeSrc":"4181:47:11","nodeType":"YulFunctionCall","src":"4181:47:11"},"nativeSrc":"4181:47:11","nodeType":"YulExpressionStatement","src":"4181:47:11"},{"body":{"nativeSrc":"4287:132:11","nodeType":"YulBlock","src":"4287:132:11","statements":[{"nativeSrc":"4306:58:11","nodeType":"YulVariableDeclaration","src":"4306:58:11","value":{"arguments":[{"name":"memPtr","nativeSrc":"4328:6:11","nodeType":"YulIdentifier","src":"4328:6:11"},{"arguments":[{"name":"size","nativeSrc":"4358:4:11","nodeType":"YulIdentifier","src":"4358:4:11"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4336:21:11","nodeType":"YulIdentifier","src":"4336:21:11"},"nativeSrc":"4336:27:11","nodeType":"YulFunctionCall","src":"4336:27:11"}],"functionName":{"name":"add","nativeSrc":"4324:3:11","nodeType":"YulIdentifier","src":"4324:3:11"},"nativeSrc":"4324:40:11","nodeType":"YulFunctionCall","src":"4324:40:11"},"variables":[{"name":"newFreePtr","nativeSrc":"4310:10:11","nodeType":"YulTypedName","src":"4310:10:11","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4389:2:11","nodeType":"YulLiteral","src":"4389:2:11","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4393:10:11","nodeType":"YulIdentifier","src":"4393:10:11"}],"functionName":{"name":"mstore","nativeSrc":"4382:6:11","nodeType":"YulIdentifier","src":"4382:6:11"},"nativeSrc":"4382:22:11","nodeType":"YulFunctionCall","src":"4382:22:11"},"nativeSrc":"4382:22:11","nodeType":"YulExpressionStatement","src":"4382:22:11"}]},"name":"finalize_allocation","nativeSrc":"4244:175:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"4273:6:11","nodeType":"YulTypedName","src":"4273:6:11","type":""},{"name":"size","nativeSrc":"4281:4:11","nodeType":"YulTypedName","src":"4281:4:11","type":""}],"src":"4244:175:11"},{"body":{"nativeSrc":"4483:72:11","nodeType":"YulBlock","src":"4483:72:11","statements":[{"nativeSrc":"4502:38:11","nodeType":"YulAssignment","src":"4502:38:11","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4520:5:11","nodeType":"YulIdentifier","src":"4520:5:11"},{"kind":"number","nativeSrc":"4527:2:11","nodeType":"YulLiteral","src":"4527:2:11","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4516:3:11","nodeType":"YulIdentifier","src":"4516:3:11"},"nativeSrc":"4516:14:11","nodeType":"YulFunctionCall","src":"4516:14:11"},{"arguments":[{"kind":"number","nativeSrc":"4536:2:11","nodeType":"YulLiteral","src":"4536:2:11","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4532:3:11","nodeType":"YulIdentifier","src":"4532:3:11"},"nativeSrc":"4532:7:11","nodeType":"YulFunctionCall","src":"4532:7:11"}],"functionName":{"name":"and","nativeSrc":"4512:3:11","nodeType":"YulIdentifier","src":"4512:3:11"},"nativeSrc":"4512:28:11","nodeType":"YulFunctionCall","src":"4512:28:11"},"variableNames":[{"name":"result","nativeSrc":"4502:6:11","nodeType":"YulIdentifier","src":"4502:6:11"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"4435:120:11","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4466:5:11","nodeType":"YulTypedName","src":"4466:5:11","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4476:6:11","nodeType":"YulTypedName","src":"4476:6:11","type":""}],"src":"4435:120:11"}]},"evmVersion":"cancun","externalReferences":[{"declaration":6380,"isOffset":false,"isSlot":false,"src":"4213:14:11","valueSize":1},{"declaration":6378,"isOffset":false,"isSlot":false,"src":"4201:10:11","valueSize":1}],"flags":["memory-safe"],"id":6383,"nodeType":"InlineAssembly","src":"4142:424:11"}]},"documentation":{"id":6376,"nodeType":"StructuredDocumentation","src":"3832:214:11","text":" standard solidity memory allocation finalization.\n copied from solidity generated code\n @param memPointer - The current memory pointer\n @param allocationSize - Bytes allocated from memPointer."},"id":6385,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"finalizeAllocation","nameLocation":"4061:18:11","nodeType":"FunctionDefinition","parameters":{"id":6381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6378,"mutability":"mutable","name":"memPointer","nameLocation":"4088:10:11","nodeType":"VariableDeclaration","scope":6385,"src":"4080:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6377,"name":"uint256","nodeType":"ElementaryTypeName","src":"4080:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6380,"mutability":"mutable","name":"allocationSize","nameLocation":"4108:14:11","nodeType":"VariableDeclaration","scope":6385,"src":"4100:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6379,"name":"uint256","nodeType":"ElementaryTypeName","src":"4100:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4079:44:11"},"returnParameters":{"id":6382,"nodeType":"ParameterList","parameters":[],"src":"4129:0:11"},"scope":6386,"src":"4052:521:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"33:4542:11"},"id":11},"contracts/lib/core/UserOperationLib.sol":{"ast":{"absolutePath":"contracts/lib/core/UserOperationLib.sol","exportedSymbols":{"PackedUserOperation":[7171],"UserOperationLib":[6721],"calldataKeccak":[6357],"min":[6375]},"id":6722,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6387,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:12"},{"absolutePath":"contracts/lib/interfaces/PackedUserOperation.sol","file":"../interfaces/PackedUserOperation.sol","id":6388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6722,"sourceUnit":7172,"src":"100:47:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/core/Helpers.sol","file":"./Helpers.sol","id":6391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6722,"sourceUnit":6386,"src":"148:50:12","symbolAliases":[{"foreign":{"id":6389,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"156:14:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":6390,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"172:3:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":6392,"nodeType":"StructuredDocumentation","src":"200:77:12","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":6721,"linearizedBaseContracts":[6721],"name":"UserOperationLib","nameLocation":"286:16:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"b29a8ff4","id":6395,"mutability":"constant","name":"PAYMASTER_VALIDATION_GAS_OFFSET","nameLocation":"334:31:12","nodeType":"VariableDeclaration","scope":6721,"src":"310:60:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6393,"name":"uint256","nodeType":"ElementaryTypeName","src":"310:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"368:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"functionSelector":"25093e1b","id":6398,"mutability":"constant","name":"PAYMASTER_POSTOP_GAS_OFFSET","nameLocation":"400:27:12","nodeType":"VariableDeclaration","scope":6721,"src":"376:56:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6396,"name":"uint256","nodeType":"ElementaryTypeName","src":"376:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3336","id":6397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"430:2:12","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"36"},"visibility":"public"},{"constant":true,"functionSelector":"ede31502","id":6401,"mutability":"constant","name":"PAYMASTER_DATA_OFFSET","nameLocation":"462:21:12","nodeType":"VariableDeclaration","scope":6721,"src":"438:50:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6399,"name":"uint256","nodeType":"ElementaryTypeName","src":"438:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3532","id":6400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"486:2:12","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"visibility":"public"},{"body":{"id":6428,"nodeType":"Block","src":"795:209:12","statements":[{"id":6427,"nodeType":"UncheckedBlock","src":"805:193:12","statements":[{"assignments":[6411,6413],"declarations":[{"constant":false,"id":6411,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"838:20:12","nodeType":"VariableDeclaration","scope":6427,"src":"830:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6410,"name":"uint256","nodeType":"ElementaryTypeName","src":"830:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6413,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"868:12:12","nodeType":"VariableDeclaration","scope":6427,"src":"860:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6412,"name":"uint256","nodeType":"ElementaryTypeName","src":"860:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6418,"initialValue":{"arguments":[{"expression":{"id":6415,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"896:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"903:7:12","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":7166,"src":"896:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6414,"name":"unpackUints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"884:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"884:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"829:82:12"},{"expression":{"arguments":[{"id":6420,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6413,"src":"936:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6421,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"950:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":6422,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"973:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"979:7:12","memberName":"basefee","nodeType":"MemberAccess","src":"973:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"950:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6419,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"932:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6409,"id":6426,"nodeType":"Return","src":"925:62:12"}]}]},"documentation":{"id":6402,"nodeType":"StructuredDocumentation","src":"495:194:12","text":" Relayer/block builder might submit the TX with higher priorityFee,\n but the user should not pay above what he signed for.\n @param userOp - The user operation data."},"id":6429,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"703:8:12","nodeType":"FunctionDefinition","parameters":{"id":6406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6405,"mutability":"mutable","name":"userOp","nameLocation":"750:6:12","nodeType":"VariableDeclaration","scope":6429,"src":"721:35:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6404,"nodeType":"UserDefinedTypeName","pathNode":{"id":6403,"name":"PackedUserOperation","nameLocations":["721:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"721:19:12"},"referencedDeclaration":7171,"src":"721:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"711:51:12"},"returnParameters":{"id":6409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6429,"src":"786:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6407,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"785:9:12"},"scope":6721,"src":"694:310:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":true,"id":6434,"mutability":"constant","name":"PACKED_USEROP_TYPEHASH","nameLocation":"1036:22:12","nodeType":"VariableDeclaration","scope":6721,"src":"1010:252:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1010:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5061636b6564557365724f7065726174696f6e28616464726573732073656e6465722c75696e74323536206e6f6e63652c627974657320696e6974436f64652c62797465732063616c6c446174612c62797465733332206163636f756e744761734c696d6974732c75696e7432353620707265566572696669636174696f6e4761732c6279746573333220676173466565732c6279746573207061796d6173746572416e644461746129","id":6432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1084:172:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_29a0bca4af4be3421398da00295e58e6d7de38cb492214754cb6a47507dd6f8e","typeString":"literal_string \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\""},"value":"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_29a0bca4af4be3421398da00295e58e6d7de38cb492214754cb6a47507dd6f8e","typeString":"literal_string \"PackedUserOperation(address sender,uint256 nonce,bytes initCode,bytes callData,bytes32 accountGasLimits,uint256 preVerificationGas,bytes32 gasFees,bytes paymasterAndData)\""}],"id":6431,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1065:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1065:197:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"body":{"id":6510,"nodeType":"Block","src":"1641:761:12","statements":[{"assignments":[6446],"declarations":[{"constant":false,"id":6446,"mutability":"mutable","name":"sender","nameLocation":"1659:6:12","nodeType":"VariableDeclaration","scope":6510,"src":"1651:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6445,"name":"address","nodeType":"ElementaryTypeName","src":"1651:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6449,"initialValue":{"expression":{"id":6447,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"1668:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1675:6:12","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":7154,"src":"1668:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1651:30:12"},{"assignments":[6451],"declarations":[{"constant":false,"id":6451,"mutability":"mutable","name":"nonce","nameLocation":"1699:5:12","nodeType":"VariableDeclaration","scope":6510,"src":"1691:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1691:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6454,"initialValue":{"expression":{"id":6452,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"1707:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1714:5:12","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":7156,"src":"1707:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1691:28:12"},{"assignments":[6456],"declarations":[{"constant":false,"id":6456,"mutability":"mutable","name":"hashInitCode","nameLocation":"1737:12:12","nodeType":"VariableDeclaration","scope":6510,"src":"1729:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1729:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6466,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6457,"name":"overrideInitCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"1752:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1776:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1752:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"expression":{"id":6462,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"1818:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1825:8:12","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":7158,"src":"1818:15:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6461,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"1803:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1803:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1752:82:12","trueExpression":{"id":6460,"name":"overrideInitCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"1780:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1729:105:12"},{"assignments":[6468],"declarations":[{"constant":false,"id":6468,"mutability":"mutable","name":"hashCallData","nameLocation":"1852:12:12","nodeType":"VariableDeclaration","scope":6510,"src":"1844:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1844:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6473,"initialValue":{"arguments":[{"expression":{"id":6470,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"1882:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:8:12","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":7160,"src":"1882:15:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6469,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"1867:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1867:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1844:54:12"},{"assignments":[6475],"declarations":[{"constant":false,"id":6475,"mutability":"mutable","name":"accountGasLimits","nameLocation":"1916:16:12","nodeType":"VariableDeclaration","scope":6510,"src":"1908:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1908:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6478,"initialValue":{"expression":{"id":6476,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"1935:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1942:16:12","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":7162,"src":"1935:23:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1908:50:12"},{"assignments":[6480],"declarations":[{"constant":false,"id":6480,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1976:18:12","nodeType":"VariableDeclaration","scope":6510,"src":"1968:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1968:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6483,"initialValue":{"expression":{"id":6481,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"1997:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2004:18:12","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":7164,"src":"1997:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1968:54:12"},{"assignments":[6485],"declarations":[{"constant":false,"id":6485,"mutability":"mutable","name":"gasFees","nameLocation":"2040:7:12","nodeType":"VariableDeclaration","scope":6510,"src":"2032:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2032:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6488,"initialValue":{"expression":{"id":6486,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"2050:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2057:7:12","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":7166,"src":"2050:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2032:32:12"},{"assignments":[6490],"declarations":[{"constant":false,"id":6490,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"2082:20:12","nodeType":"VariableDeclaration","scope":6510,"src":"2074:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2074:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6495,"initialValue":{"arguments":[{"expression":{"id":6492,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"2120:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2127:16:12","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":7168,"src":"2120:23:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6491,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"2105:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2105:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2074:70:12"},{"expression":{"arguments":[{"expression":{"id":6498,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"2186:16:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$6721_$","typeString":"type(library UserOperationLib)"}},"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2203:22:12","memberName":"PACKED_USEROP_TYPEHASH","nodeType":"MemberAccess","referencedDeclaration":6434,"src":"2186:39:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6500,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"2239:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6501,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6451,"src":"2247:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6502,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"2266:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6503,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6468,"src":"2280:12:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6504,"name":"accountGasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"2306:16:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6505,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"2324:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6506,"name":"gasFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"2344:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6507,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"2365:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":6496,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2162:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2166:6:12","memberName":"encode","nodeType":"MemberAccess","src":"2162:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:233:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6444,"id":6509,"nodeType":"Return","src":"2155:240:12"}]},"documentation":{"id":6435,"nodeType":"StructuredDocumentation","src":"1269:221:12","text":" Pack the user operation data into bytes for hashing.\n @param userOp - The user operation data.\n @param overrideInitCodeHash - If set, encode this instead of the initCode field in the userOp."},"id":6511,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"1504:6:12","nodeType":"FunctionDefinition","parameters":{"id":6441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"userOp","nameLocation":"1549:6:12","nodeType":"VariableDeclaration","scope":6511,"src":"1520:35:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6437,"nodeType":"UserDefinedTypeName","pathNode":{"id":6436,"name":"PackedUserOperation","nameLocations":["1520:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"1520:19:12"},"referencedDeclaration":7171,"src":"1520:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":6440,"mutability":"mutable","name":"overrideInitCodeHash","nameLocation":"1573:20:12","nodeType":"VariableDeclaration","scope":6511,"src":"1565:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1565:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1510:89:12"},"returnParameters":{"id":6444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6443,"mutability":"mutable","name":"ret","nameLocation":"1636:3:12","nodeType":"VariableDeclaration","scope":6511,"src":"1623:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6442,"name":"bytes","nodeType":"ElementaryTypeName","src":"1623:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1622:18:12"},"scope":6721,"src":"1495:907:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6528,"nodeType":"Block","src":"2515:69:12","statements":[{"expression":{"components":[{"arguments":[{"id":6521,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"2547:6:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6520,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"2533:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6524,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"2569:6:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6523,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"2556:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2556:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2532:45:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":6519,"id":6527,"nodeType":"Return","src":"2525:52:12"}]},"id":6529,"implemented":true,"kind":"function","modifiers":[],"name":"unpackUints","nameLocation":"2417:11:12","nodeType":"FunctionDefinition","parameters":{"id":6514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6513,"mutability":"mutable","name":"packed","nameLocation":"2446:6:12","nodeType":"VariableDeclaration","scope":6529,"src":"2438:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2438:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2428:30:12"},"returnParameters":{"id":6519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"high128","nameLocation":"2490:7:12","nodeType":"VariableDeclaration","scope":6529,"src":"2482:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6515,"name":"uint256","nodeType":"ElementaryTypeName","src":"2482:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6518,"mutability":"mutable","name":"low128","nameLocation":"2507:6:12","nodeType":"VariableDeclaration","scope":6529,"src":"2499:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2499:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2481:33:12"},"scope":6721,"src":"2408:176:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6543,"nodeType":"Block","src":"2718:46:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6538,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"2743:6:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2735:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6536,"name":"uint256","nodeType":"ElementaryTypeName","src":"2735:7:12","typeDescriptions":{}}},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2754:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2735:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6535,"id":6542,"nodeType":"Return","src":"2728:29:12"}]},"id":6544,"implemented":true,"kind":"function","modifiers":[],"name":"unpackHigh128","nameLocation":"2656:13:12","nodeType":"FunctionDefinition","parameters":{"id":6532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6531,"mutability":"mutable","name":"packed","nameLocation":"2678:6:12","nodeType":"VariableDeclaration","scope":6544,"src":"2670:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2670:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2669:16:12"},"returnParameters":{"id":6535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6544,"src":"2709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6533,"name":"uint256","nodeType":"ElementaryTypeName","src":"2709:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2708:9:12"},"scope":6721,"src":"2647:117:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6559,"nodeType":"Block","src":"2896:48:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":6555,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6546,"src":"2929:6:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2921:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6553,"name":"uint256","nodeType":"ElementaryTypeName","src":"2921:7:12","typeDescriptions":{}}},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2921:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2913:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6551,"name":"uint128","nodeType":"ElementaryTypeName","src":"2913:7:12","typeDescriptions":{}}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2913:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6550,"id":6558,"nodeType":"Return","src":"2906:31:12"}]},"id":6560,"implemented":true,"kind":"function","modifiers":[],"name":"unpackLow128","nameLocation":"2835:12:12","nodeType":"FunctionDefinition","parameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"packed","nameLocation":"2856:6:12","nodeType":"VariableDeclaration","scope":6560,"src":"2848:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2848:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2847:16:12"},"returnParameters":{"id":6550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6560,"src":"2887:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6548,"name":"uint256","nodeType":"ElementaryTypeName","src":"2887:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2886:9:12"},"scope":6721,"src":"2826:118:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6573,"nodeType":"Block","src":"3059:53:12","statements":[{"expression":{"arguments":[{"expression":{"id":6569,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"3090:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3097:7:12","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":7166,"src":"3090:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6568,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"3076:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3076:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6567,"id":6572,"nodeType":"Return","src":"3069:36:12"}]},"id":6574,"implemented":true,"kind":"function","modifiers":[],"name":"unpackMaxPriorityFeePerGas","nameLocation":"2959:26:12","nodeType":"FunctionDefinition","parameters":{"id":6564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6563,"mutability":"mutable","name":"userOp","nameLocation":"3015:6:12","nodeType":"VariableDeclaration","scope":6574,"src":"2986:35:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6562,"nodeType":"UserDefinedTypeName","pathNode":{"id":6561,"name":"PackedUserOperation","nameLocations":["2986:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"2986:19:12"},"referencedDeclaration":7171,"src":"2986:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"2985:37:12"},"returnParameters":{"id":6567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6574,"src":"3050:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6565,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:12"},"scope":6721,"src":"2950:162:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6587,"nodeType":"Block","src":"3219:52:12","statements":[{"expression":{"arguments":[{"expression":{"id":6583,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"3249:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:7:12","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":7166,"src":"3249:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6582,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"3236:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6581,"id":6586,"nodeType":"Return","src":"3229:35:12"}]},"id":6588,"implemented":true,"kind":"function","modifiers":[],"name":"unpackMaxFeePerGas","nameLocation":"3127:18:12","nodeType":"FunctionDefinition","parameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"userOp","nameLocation":"3175:6:12","nodeType":"VariableDeclaration","scope":6588,"src":"3146:35:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6576,"nodeType":"UserDefinedTypeName","pathNode":{"id":6575,"name":"PackedUserOperation","nameLocations":["3146:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"3146:19:12"},"referencedDeclaration":7171,"src":"3146:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3145:37:12"},"returnParameters":{"id":6581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6588,"src":"3210:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6579,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:12"},"scope":6721,"src":"3118:153:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6601,"nodeType":"Block","src":"3386:62:12","statements":[{"expression":{"arguments":[{"expression":{"id":6597,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"3417:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3424:16:12","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":7162,"src":"3417:23:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6596,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"3403:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3403:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6595,"id":6600,"nodeType":"Return","src":"3396:45:12"}]},"id":6602,"implemented":true,"kind":"function","modifiers":[],"name":"unpackVerificationGasLimit","nameLocation":"3286:26:12","nodeType":"FunctionDefinition","parameters":{"id":6592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6591,"mutability":"mutable","name":"userOp","nameLocation":"3342:6:12","nodeType":"VariableDeclaration","scope":6602,"src":"3313:35:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6590,"nodeType":"UserDefinedTypeName","pathNode":{"id":6589,"name":"PackedUserOperation","nameLocations":["3313:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"3313:19:12"},"referencedDeclaration":7171,"src":"3313:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3312:37:12"},"returnParameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6602,"src":"3377:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6593,"name":"uint256","nodeType":"ElementaryTypeName","src":"3377:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3376:9:12"},"scope":6721,"src":"3277:171:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6615,"nodeType":"Block","src":"3555:61:12","statements":[{"expression":{"arguments":[{"expression":{"id":6611,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"3585:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3592:16:12","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":7162,"src":"3585:23:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6610,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"3572:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6609,"id":6614,"nodeType":"Return","src":"3565:44:12"}]},"id":6616,"implemented":true,"kind":"function","modifiers":[],"name":"unpackCallGasLimit","nameLocation":"3463:18:12","nodeType":"FunctionDefinition","parameters":{"id":6606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6605,"mutability":"mutable","name":"userOp","nameLocation":"3511:6:12","nodeType":"VariableDeclaration","scope":6616,"src":"3482:35:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6604,"nodeType":"UserDefinedTypeName","pathNode":{"id":6603,"name":"PackedUserOperation","nameLocations":["3482:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"3482:19:12"},"referencedDeclaration":7171,"src":"3482:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3481:37:12"},"returnParameters":{"id":6609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6616,"src":"3546:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6607,"name":"uint256","nodeType":"ElementaryTypeName","src":"3546:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3545:9:12"},"scope":6721,"src":"3454:162:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6636,"nodeType":"Block","src":"3740:128:12","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":6628,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"3773:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3780:16:12","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":7168,"src":"3773:23:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":6631,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"3831:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3773:86:12","startExpression":{"id":6630,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"3797:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":6627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3765:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":6626,"name":"bytes16","nodeType":"ElementaryTypeName","src":"3765:7:12","typeDescriptions":{}}},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3765:95:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":6625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3757:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6624,"name":"uint128","nodeType":"ElementaryTypeName","src":"3757:7:12","typeDescriptions":{}}},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3757:104:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6623,"id":6635,"nodeType":"Return","src":"3750:111:12"}]},"id":6637,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPaymasterVerificationGasLimit","nameLocation":"3631:35:12","nodeType":"FunctionDefinition","parameters":{"id":6620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6619,"mutability":"mutable","name":"userOp","nameLocation":"3696:6:12","nodeType":"VariableDeclaration","scope":6637,"src":"3667:35:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6618,"nodeType":"UserDefinedTypeName","pathNode":{"id":6617,"name":"PackedUserOperation","nameLocations":["3667:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"3667:19:12"},"referencedDeclaration":7171,"src":"3667:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3666:37:12"},"returnParameters":{"id":6623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6637,"src":"3731:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6621,"name":"uint256","nodeType":"ElementaryTypeName","src":"3731:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3730:9:12"},"scope":6721,"src":"3622:246:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6657,"nodeType":"Block","src":"3977:118:12","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":6649,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"4010:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4017:16:12","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":7168,"src":"4010:23:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":6652,"name":"PAYMASTER_DATA_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"4064:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4010:76:12","startExpression":{"id":6651,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"4034:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":6648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4002:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":6647,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4002:7:12","typeDescriptions":{}}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4002:85:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":6646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6645,"name":"uint128","nodeType":"ElementaryTypeName","src":"3994:7:12","typeDescriptions":{}}},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:94:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6644,"id":6656,"nodeType":"Return","src":"3987:101:12"}]},"id":6658,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPostOpGasLimit","nameLocation":"3883:20:12","nodeType":"FunctionDefinition","parameters":{"id":6641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6640,"mutability":"mutable","name":"userOp","nameLocation":"3933:6:12","nodeType":"VariableDeclaration","scope":6658,"src":"3904:35:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6639,"nodeType":"UserDefinedTypeName","pathNode":{"id":6638,"name":"PackedUserOperation","nameLocations":["3904:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"3904:19:12"},"referencedDeclaration":7171,"src":"3904:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3903:37:12"},"returnParameters":{"id":6644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6658,"src":"3968:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6642,"name":"uint256","nodeType":"ElementaryTypeName","src":"3968:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3967:9:12"},"scope":6721,"src":"3874:221:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6700,"nodeType":"Block","src":"4279:329:12","statements":[{"expression":{"components":[{"arguments":[{"arguments":[{"baseExpression":{"id":6673,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"4326:16:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":6674,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"4345:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4326:51:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":6672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4318:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":6671,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4318:7:12","typeDescriptions":{}}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":6670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4310:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6669,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:12","typeDescriptions":{}}},"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4310:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"baseExpression":{"id":6682,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"4409:16:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":6684,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"4460:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4409:79:12","startExpression":{"id":6683,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"4426:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":6681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4401:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":6680,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4401:7:12","typeDescriptions":{}}},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4401:88:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":6679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4393:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6678,"name":"uint128","nodeType":"ElementaryTypeName","src":"4393:7:12","typeDescriptions":{}}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4393:97:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"baseExpression":{"id":6692,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"4520:16:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":6694,"name":"PAYMASTER_DATA_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"4567:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4520:69:12","startExpression":{"id":6693,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"4537:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":6691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4512:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":6690,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4512:7:12","typeDescriptions":{}}},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4512:78:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":6689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6688,"name":"uint128","nodeType":"ElementaryTypeName","src":"4504:7:12","typeDescriptions":{}}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:87:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":6698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4296:305:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint128_$_t_uint128_$","typeString":"tuple(address,uint128,uint128)"}},"functionReturnParameters":6668,"id":6699,"nodeType":"Return","src":"4289:312:12"}]},"id":6701,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPaymasterStaticFields","nameLocation":"4110:27:12","nodeType":"FunctionDefinition","parameters":{"id":6661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6660,"mutability":"mutable","name":"paymasterAndData","nameLocation":"4162:16:12","nodeType":"VariableDeclaration","scope":6701,"src":"4147:31:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6659,"name":"bytes","nodeType":"ElementaryTypeName","src":"4147:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4137:47:12"},"returnParameters":{"id":6668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6663,"mutability":"mutable","name":"paymaster","nameLocation":"4216:9:12","nodeType":"VariableDeclaration","scope":6701,"src":"4208:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6662,"name":"address","nodeType":"ElementaryTypeName","src":"4208:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6665,"mutability":"mutable","name":"validationGasLimit","nameLocation":"4235:18:12","nodeType":"VariableDeclaration","scope":6701,"src":"4227:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6664,"name":"uint256","nodeType":"ElementaryTypeName","src":"4227:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6667,"mutability":"mutable","name":"postOpGasLimit","nameLocation":"4263:14:12","nodeType":"VariableDeclaration","scope":6701,"src":"4255:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6666,"name":"uint256","nodeType":"ElementaryTypeName","src":"4255:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4207:71:12"},"scope":6721,"src":"4101:507:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6719,"nodeType":"Block","src":"4971:71:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":6714,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"5005:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":6715,"name":"overrideInitCodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"5013:20:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6713,"name":"encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"4998:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PackedUserOperation_$7171_calldata_ptr_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct PackedUserOperation calldata,bytes32) pure returns (bytes memory)"}},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4998:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6712,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4988:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4988:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6711,"id":6718,"nodeType":"Return","src":"4981:54:12"}]},"documentation":{"id":6702,"nodeType":"StructuredDocumentation","src":"4614:217:12","text":" Hash the user operation data.\n @param userOp - The user operation data.\n @param overrideInitCodeHash - If set, the initCode hash will be replaced with this value just for UserOp hashing."},"id":6720,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"4845:4:12","nodeType":"FunctionDefinition","parameters":{"id":6708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6705,"mutability":"mutable","name":"userOp","nameLocation":"4888:6:12","nodeType":"VariableDeclaration","scope":6720,"src":"4859:35:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6704,"nodeType":"UserDefinedTypeName","pathNode":{"id":6703,"name":"PackedUserOperation","nameLocations":["4859:19:12"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"4859:19:12"},"referencedDeclaration":7171,"src":"4859:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":6707,"mutability":"mutable","name":"overrideInitCodeHash","nameLocation":"4912:20:12","nodeType":"VariableDeclaration","scope":6720,"src":"4904:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4904:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4849:89:12"},"returnParameters":{"id":6711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6720,"src":"4962:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4962:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4961:9:12"},"scope":6721,"src":"4836:206:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6722,"src":"278:4766:12","usedErrors":[],"usedEvents":[]}],"src":"32:5013:12"},"id":12},"contracts/lib/interfaces/IAccount.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/IAccount.sol","exportedSymbols":{"IAccount":[6738],"PackedUserOperation":[7171]},"id":6739,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6723,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:13"},{"absolutePath":"contracts/lib/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":6724,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6739,"sourceUnit":7172,"src":"61:35:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccount","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6738,"linearizedBaseContracts":[6738],"name":"IAccount","nameLocation":"110:8:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6725,"nodeType":"StructuredDocumentation","src":"126:2330:13","text":" Validate user's signature and nonce\n the entryPoint will make the call to the recipient only if this validation call returns successfully.\n signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n This allows making a \"simulation call\" without a valid signature\n Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n @dev Must validate caller is the entryPoint.\n      Must validate the signature and nonce\n @param userOp              - The operation that is about to be executed.\n @param userOpHash          - Hash of the user's request data. can be used as the basis for signature.\n @param missingAccountFunds - Missing funds on the account's deposit in the entrypoint.\n                              This is the minimum amount to transfer to the sender(entryPoint) to be\n                              able to make the call. The excess is left as a deposit in the entrypoint\n                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".\n                              In case there is a paymaster in the request (or the current deposit is high\n                              enough), this value will be zero.\n @return validationData       - Packaged ValidationData structure. use `_packValidationData` and\n                              `_unpackValidationData` to encode and decode.\n                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n                                 otherwise, an address of an \"aggregator\" contract.\n                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n                              <6-byte> validAfter - First timestamp this operation is valid\n                                                    If an account doesn't use time-range, it is enough to\n                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.\n                              Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"19822f7c","id":6737,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"2471:14:13","nodeType":"FunctionDefinition","parameters":{"id":6733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6728,"mutability":"mutable","name":"userOp","nameLocation":"2525:6:13","nodeType":"VariableDeclaration","scope":6737,"src":"2496:35:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6727,"nodeType":"UserDefinedTypeName","pathNode":{"id":6726,"name":"PackedUserOperation","nameLocations":["2496:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"2496:19:13"},"referencedDeclaration":7171,"src":"2496:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":6730,"mutability":"mutable","name":"userOpHash","nameLocation":"2550:10:13","nodeType":"VariableDeclaration","scope":6737,"src":"2542:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2542:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6732,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"2579:19:13","nodeType":"VariableDeclaration","scope":6737,"src":"2571:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6731,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2485:120:13"},"returnParameters":{"id":6736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6735,"mutability":"mutable","name":"validationData","nameLocation":"2632:14:13","nodeType":"VariableDeclaration","scope":6737,"src":"2624:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2624:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2623:24:13"},"scope":6738,"src":"2462:186:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6739,"src":"100:2551:13","usedErrors":[],"usedEvents":[]}],"src":"33:2620:13"},"id":13},"contracts/lib/interfaces/IAccountExecute.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/IAccountExecute.sol","exportedSymbols":{"IAccountExecute":[6751],"PackedUserOperation":[7171]},"id":6752,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6740,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:14"},{"absolutePath":"contracts/lib/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":6741,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6752,"sourceUnit":7172,"src":"61:35:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccountExecute","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6751,"linearizedBaseContracts":[6751],"name":"IAccountExecute","nameLocation":"110:15:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6742,"nodeType":"StructuredDocumentation","src":"133:468:14","text":" Account may implement this execute method.\n passing this methodSig at the beginning of callData will cause the entryPoint to pass the full UserOp (and hash)\n to the account.\n The account should skip the methodSig, and use the callData (and optionally, other UserOp fields)\n @param userOp              - The operation that was just validated.\n @param userOpHash          - Hash of the user's request data."},"functionSelector":"8dd7712f","id":6750,"implemented":false,"kind":"function","modifiers":[],"name":"executeUserOp","nameLocation":"616:13:14","nodeType":"FunctionDefinition","parameters":{"id":6748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"userOp","nameLocation":"669:6:14","nodeType":"VariableDeclaration","scope":6750,"src":"640:35:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6744,"nodeType":"UserDefinedTypeName","pathNode":{"id":6743,"name":"PackedUserOperation","nameLocations":["640:19:14"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"640:19:14"},"referencedDeclaration":7171,"src":"640:19:14","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":6747,"mutability":"mutable","name":"userOpHash","nameLocation":"694:10:14","nodeType":"VariableDeclaration","scope":6750,"src":"686:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"686:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"629:82:14"},"returnParameters":{"id":6749,"nodeType":"ParameterList","parameters":[],"src":"720:0:14"},"scope":6751,"src":"607:114:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6752,"src":"100:624:14","usedErrors":[],"usedEvents":[]}],"src":"33:693:14"},"id":14},"contracts/lib/interfaces/IAggregator.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[6785],"PackedUserOperation":[7171]},"id":6786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6753,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:15"},{"absolutePath":"contracts/lib/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":6754,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6786,"sourceUnit":7172,"src":"61:35:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":6755,"nodeType":"StructuredDocumentation","src":"100:45:15","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":6785,"linearizedBaseContracts":[6785],"name":"IAggregator","nameLocation":"157:11:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6756,"nodeType":"StructuredDocumentation","src":"176:281:15","text":" Validate an aggregated signature.\n Reverts if the aggregated signature does not match the given list of operations.\n @param userOps   - An array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."},"functionSelector":"2dd81133","id":6765,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"472:18:15","nodeType":"FunctionDefinition","parameters":{"id":6763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6760,"mutability":"mutable","name":"userOps","nameLocation":"532:7:15","nodeType":"VariableDeclaration","scope":6765,"src":"501:38:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$7171_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":6758,"nodeType":"UserDefinedTypeName","pathNode":{"id":6757,"name":"PackedUserOperation","nameLocations":["501:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"501:19:15"},"referencedDeclaration":7171,"src":"501:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"id":6759,"nodeType":"ArrayTypeName","src":"501:21:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$7171_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":6762,"mutability":"mutable","name":"signature","nameLocation":"565:9:15","nodeType":"VariableDeclaration","scope":6765,"src":"550:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6761,"name":"bytes","nodeType":"ElementaryTypeName","src":"550:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"490:91:15"},"returnParameters":{"id":6764,"nodeType":"ParameterList","parameters":[],"src":"590:0:15"},"scope":6785,"src":"463:128:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6766,"nodeType":"StructuredDocumentation","src":"599:622:15","text":" Validate the signature of a single userOp.\n This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n the aggregator this account uses.\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."},"functionSelector":"062a422b","id":6774,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1236:23:15","nodeType":"FunctionDefinition","parameters":{"id":6770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6769,"mutability":"mutable","name":"userOp","nameLocation":"1299:6:15","nodeType":"VariableDeclaration","scope":6774,"src":"1270:35:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6768,"nodeType":"UserDefinedTypeName","pathNode":{"id":6767,"name":"PackedUserOperation","nameLocations":["1270:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"1270:19:15"},"referencedDeclaration":7171,"src":"1270:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1259:53:15"},"returnParameters":{"id":6773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1349:12:15","nodeType":"VariableDeclaration","scope":6774,"src":"1336:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6771,"name":"bytes","nodeType":"ElementaryTypeName","src":"1336:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1335:27:15"},"scope":6785,"src":"1227:136:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6775,"nodeType":"StructuredDocumentation","src":"1371:399:15","text":" Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code to perform this aggregation.\n @param userOps              - An array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."},"functionSelector":"ae574a43","id":6784,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1785:19:15","nodeType":"FunctionDefinition","parameters":{"id":6780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6779,"mutability":"mutable","name":"userOps","nameLocation":"1846:7:15","nodeType":"VariableDeclaration","scope":6784,"src":"1815:38:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$7171_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":6777,"nodeType":"UserDefinedTypeName","pathNode":{"id":6776,"name":"PackedUserOperation","nameLocations":["1815:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"1815:19:15"},"referencedDeclaration":7171,"src":"1815:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"id":6778,"nodeType":"ArrayTypeName","src":"1815:21:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$7171_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"}],"src":"1804:56:15"},"returnParameters":{"id":6783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6782,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1897:19:15","nodeType":"VariableDeclaration","scope":6784,"src":"1884:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6781,"name":"bytes","nodeType":"ElementaryTypeName","src":"1884:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1883:34:15"},"scope":6785,"src":"1776:142:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6786,"src":"147:1774:15","usedErrors":[],"usedEvents":[]}],"src":"33:1890:15"},"id":15},"contracts/lib/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[6785],"IEntryPoint":[6970],"INonceManager":[6989],"ISenderCreator":[7045],"IStakeManager":[7149],"PackedUserOperation":[7171]},"id":6971,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6787,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"164:24:16"},{"absolutePath":"contracts/lib/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":6788,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6971,"sourceUnit":7172,"src":"318:35:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":6789,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6971,"sourceUnit":7150,"src":"355:29:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":6790,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6971,"sourceUnit":6786,"src":"386:27:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":6791,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6971,"sourceUnit":6990,"src":"415:29:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/interfaces/ISenderCreator.sol","file":"./ISenderCreator.sol","id":6792,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6971,"sourceUnit":7046,"src":"446:30:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6793,"name":"IStakeManager","nameLocations":["505:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":7149,"src":"505:13:16"},"id":6794,"nodeType":"InheritanceSpecifier","src":"505:13:16"},{"baseName":{"id":6795,"name":"INonceManager","nameLocations":["520:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":6989,"src":"520:13:16"},"id":6796,"nodeType":"InheritanceSpecifier","src":"520:13:16"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6970,"linearizedBaseContracts":[6970,6989,7149],"name":"IEntryPoint","nameLocation":"490:11:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":6812,"name":"UserOperationEvent","nameLocation":"1311:18:16","nodeType":"EventDefinition","parameters":{"id":6811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6798,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1356:10:16","nodeType":"VariableDeclaration","scope":6812,"src":"1340:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1340:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6800,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1393:6:16","nodeType":"VariableDeclaration","scope":6812,"src":"1377:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6799,"name":"address","nodeType":"ElementaryTypeName","src":"1377:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6802,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1426:9:16","nodeType":"VariableDeclaration","scope":6812,"src":"1410:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6801,"name":"address","nodeType":"ElementaryTypeName","src":"1410:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6804,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1454:5:16","nodeType":"VariableDeclaration","scope":6812,"src":"1446:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6803,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6806,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1475:7:16","nodeType":"VariableDeclaration","scope":6812,"src":"1470:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6805,"name":"bool","nodeType":"ElementaryTypeName","src":"1470:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6808,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1501:13:16","nodeType":"VariableDeclaration","scope":6812,"src":"1493:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6807,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6810,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1533:13:16","nodeType":"VariableDeclaration","scope":6812,"src":"1525:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1329:224:16"},"src":"1305:249:16"},{"anonymous":false,"documentation":{"id":6813,"nodeType":"StructuredDocumentation","src":"1562:355:16","text":" Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":6823,"name":"AccountDeployed","nameLocation":"1929:15:16","nodeType":"EventDefinition","parameters":{"id":6822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6815,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1971:10:16","nodeType":"VariableDeclaration","scope":6823,"src":"1955:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1955:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6817,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2008:6:16","nodeType":"VariableDeclaration","scope":6823,"src":"1992:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6816,"name":"address","nodeType":"ElementaryTypeName","src":"1992:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6819,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"2033:7:16","nodeType":"VariableDeclaration","scope":6823,"src":"2025:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6818,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6821,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"2059:9:16","nodeType":"VariableDeclaration","scope":6823,"src":"2051:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6820,"name":"address","nodeType":"ElementaryTypeName","src":"2051:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1944:131:16"},"src":"1923:153:16"},{"anonymous":false,"documentation":{"id":6824,"nodeType":"StructuredDocumentation","src":"2084:362:16","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the reverted \"callData\" call."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":6834,"name":"UserOperationRevertReason","nameLocation":"2458:25:16","nodeType":"EventDefinition","parameters":{"id":6833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6826,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2510:10:16","nodeType":"VariableDeclaration","scope":6834,"src":"2494:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2494:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6828,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2547:6:16","nodeType":"VariableDeclaration","scope":6834,"src":"2531:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6827,"name":"address","nodeType":"ElementaryTypeName","src":"2531:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6830,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2572:5:16","nodeType":"VariableDeclaration","scope":6834,"src":"2564:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6829,"name":"uint256","nodeType":"ElementaryTypeName","src":"2564:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6832,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2594:12:16","nodeType":"VariableDeclaration","scope":6834,"src":"2588:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6831,"name":"bytes","nodeType":"ElementaryTypeName","src":"2588:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2483:130:16"},"src":"2452:162:16"},{"anonymous":false,"documentation":{"id":6835,"nodeType":"StructuredDocumentation","src":"2622:378:16","text":" An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the reverted call to \"postOp\"."},"eventSelector":"f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792","id":6845,"name":"PostOpRevertReason","nameLocation":"3012:18:16","nodeType":"EventDefinition","parameters":{"id":6844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6837,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3057:10:16","nodeType":"VariableDeclaration","scope":6845,"src":"3041:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3041:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6839,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3094:6:16","nodeType":"VariableDeclaration","scope":6845,"src":"3078:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6838,"name":"address","nodeType":"ElementaryTypeName","src":"3078:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6841,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3119:5:16","nodeType":"VariableDeclaration","scope":6845,"src":"3111:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6840,"name":"uint256","nodeType":"ElementaryTypeName","src":"3111:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6843,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"3141:12:16","nodeType":"VariableDeclaration","scope":6845,"src":"3135:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6842,"name":"bytes","nodeType":"ElementaryTypeName","src":"3135:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3030:130:16"},"src":"3006:155:16"},{"anonymous":false,"documentation":{"id":6846,"nodeType":"StructuredDocumentation","src":"3169:289:16","text":" UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request."},"eventSelector":"67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e","id":6854,"name":"UserOperationPrefundTooLow","nameLocation":"3470:26:16","nodeType":"EventDefinition","parameters":{"id":6853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6848,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3523:10:16","nodeType":"VariableDeclaration","scope":6854,"src":"3507:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3507:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6850,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3560:6:16","nodeType":"VariableDeclaration","scope":6854,"src":"3544:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6849,"name":"address","nodeType":"ElementaryTypeName","src":"3544:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6852,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3585:5:16","nodeType":"VariableDeclaration","scope":6854,"src":"3577:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6851,"name":"uint256","nodeType":"ElementaryTypeName","src":"3577:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3496:101:16"},"src":"3464:134:16"},{"anonymous":false,"documentation":{"id":6855,"nodeType":"StructuredDocumentation","src":"3606:187:16","text":" An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":6857,"name":"BeforeExecution","nameLocation":"3805:15:16","nodeType":"EventDefinition","parameters":{"id":6856,"nodeType":"ParameterList","parameters":[],"src":"3820:2:16"},"src":"3799:24:16"},{"anonymous":false,"documentation":{"id":6858,"nodeType":"StructuredDocumentation","src":"3831:190:16","text":" Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":6862,"name":"SignatureAggregatorChanged","nameLocation":"4033:26:16","nodeType":"EventDefinition","parameters":{"id":6861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"4076:10:16","nodeType":"VariableDeclaration","scope":6862,"src":"4060:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6859,"name":"address","nodeType":"ElementaryTypeName","src":"4060:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4059:28:16"},"src":"4027:61:16"},{"documentation":{"id":6863,"nodeType":"StructuredDocumentation","src":"4096:828:16","text":" A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op.\n Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."},"errorSelector":"220266b6","id":6869,"name":"FailedOp","nameLocation":"4936:8:16","nodeType":"ErrorDefinition","parameters":{"id":6868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"opIndex","nameLocation":"4953:7:16","nodeType":"VariableDeclaration","scope":6869,"src":"4945:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6864,"name":"uint256","nodeType":"ElementaryTypeName","src":"4945:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6867,"mutability":"mutable","name":"reason","nameLocation":"4969:6:16","nodeType":"VariableDeclaration","scope":6869,"src":"4962:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6866,"name":"string","nodeType":"ElementaryTypeName","src":"4962:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4944:32:16"},"src":"4930:47:16"},{"documentation":{"id":6870,"nodeType":"StructuredDocumentation","src":"4985:435:16","text":" A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. see FailedOp(uint256,string), above\n @param inner   - data from inner cought revert reason\n @dev note that inner is truncated to 2048 bytes"},"errorSelector":"65c8fd4d","id":6878,"name":"FailedOpWithRevert","nameLocation":"5432:18:16","nodeType":"ErrorDefinition","parameters":{"id":6877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6872,"mutability":"mutable","name":"opIndex","nameLocation":"5459:7:16","nodeType":"VariableDeclaration","scope":6878,"src":"5451:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6871,"name":"uint256","nodeType":"ElementaryTypeName","src":"5451:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6874,"mutability":"mutable","name":"reason","nameLocation":"5475:6:16","nodeType":"VariableDeclaration","scope":6878,"src":"5468:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6873,"name":"string","nodeType":"ElementaryTypeName","src":"5468:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6876,"mutability":"mutable","name":"inner","nameLocation":"5489:5:16","nodeType":"VariableDeclaration","scope":6878,"src":"5483:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6875,"name":"bytes","nodeType":"ElementaryTypeName","src":"5483:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5450:45:16"},"src":"5426:70:16"},{"errorSelector":"ad7954bc","id":6882,"name":"PostOpReverted","nameLocation":"5510:14:16","nodeType":"ErrorDefinition","parameters":{"id":6881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6880,"mutability":"mutable","name":"returnData","nameLocation":"5531:10:16","nodeType":"VariableDeclaration","scope":6882,"src":"5525:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6879,"name":"bytes","nodeType":"ElementaryTypeName","src":"5525:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5524:18:16"},"src":"5504:39:16"},{"documentation":{"id":6883,"nodeType":"StructuredDocumentation","src":"5551:193:16","text":" Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"},"errorSelector":"86a9f750","id":6887,"name":"SignatureValidationFailed","nameLocation":"5756:25:16","nodeType":"ErrorDefinition","parameters":{"id":6886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6885,"mutability":"mutable","name":"aggregator","nameLocation":"5790:10:16","nodeType":"VariableDeclaration","scope":6887,"src":"5782:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6884,"name":"address","nodeType":"ElementaryTypeName","src":"5782:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5781:20:16"},"src":"5750:52:16"},{"errorSelector":"6ca7b806","id":6891,"name":"SenderAddressResult","nameLocation":"5858:19:16","nodeType":"ErrorDefinition","parameters":{"id":6890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6889,"mutability":"mutable","name":"sender","nameLocation":"5886:6:16","nodeType":"VariableDeclaration","scope":6891,"src":"5878:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6888,"name":"address","nodeType":"ElementaryTypeName","src":"5878:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5877:16:16"},"src":"5852:42:16"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":6901,"members":[{"constant":false,"id":6895,"mutability":"mutable","name":"userOps","nameLocation":"6004:7:16","nodeType":"VariableDeclaration","scope":6901,"src":"5982:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$7171_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":6893,"nodeType":"UserDefinedTypeName","pathNode":{"id":6892,"name":"PackedUserOperation","nameLocations":["5982:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"5982:19:16"},"referencedDeclaration":7171,"src":"5982:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"id":6894,"nodeType":"ArrayTypeName","src":"5982:21:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$7171_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":6898,"mutability":"mutable","name":"aggregator","nameLocation":"6065:10:16","nodeType":"VariableDeclaration","scope":6901,"src":"6053:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$6785","typeString":"contract IAggregator"},"typeName":{"id":6897,"nodeType":"UserDefinedTypeName","pathNode":{"id":6896,"name":"IAggregator","nameLocations":["6053:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":6785,"src":"6053:11:16"},"referencedDeclaration":6785,"src":"6053:11:16","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$6785","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":6900,"mutability":"mutable","name":"signature","nameLocation":"6125:9:16","nodeType":"VariableDeclaration","scope":6901,"src":"6119:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6899,"name":"bytes","nodeType":"ElementaryTypeName","src":"6119:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5950:20:16","nodeType":"StructDefinition","scope":6970,"src":"5943:199:16","visibility":"public"},{"documentation":{"id":6902,"nodeType":"StructuredDocumentation","src":"6150:390:16","text":" Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."},"functionSelector":"765e827f","id":6911,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"6555:9:16","nodeType":"FunctionDefinition","parameters":{"id":6909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6906,"mutability":"mutable","name":"ops","nameLocation":"6606:3:16","nodeType":"VariableDeclaration","scope":6911,"src":"6575:34:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$7171_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":6904,"nodeType":"UserDefinedTypeName","pathNode":{"id":6903,"name":"PackedUserOperation","nameLocations":["6575:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"6575:19:16"},"referencedDeclaration":7171,"src":"6575:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"id":6905,"nodeType":"ArrayTypeName","src":"6575:21:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$7171_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":6908,"mutability":"mutable","name":"beneficiary","nameLocation":"6636:11:16","nodeType":"VariableDeclaration","scope":6911,"src":"6620:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6907,"name":"address","nodeType":"ElementaryTypeName","src":"6620:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6564:90:16"},"returnParameters":{"id":6910,"nodeType":"ParameterList","parameters":[],"src":"6663:0:16"},"scope":6970,"src":"6546:118:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6912,"nodeType":"StructuredDocumentation","src":"6672:264:16","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."},"functionSelector":"dbed18e0","id":6921,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"6951:19:16","nodeType":"FunctionDefinition","parameters":{"id":6919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6916,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"7013:16:16","nodeType":"VariableDeclaration","scope":6921,"src":"6981:48:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$6901_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":6914,"nodeType":"UserDefinedTypeName","pathNode":{"id":6913,"name":"UserOpsPerAggregator","nameLocations":["6981:20:16"],"nodeType":"IdentifierPath","referencedDeclaration":6901,"src":"6981:20:16"},"referencedDeclaration":6901,"src":"6981:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$6901_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":6915,"nodeType":"ArrayTypeName","src":"6981:22:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$6901_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":6918,"mutability":"mutable","name":"beneficiary","nameLocation":"7056:11:16","nodeType":"VariableDeclaration","scope":6921,"src":"7040:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6917,"name":"address","nodeType":"ElementaryTypeName","src":"7040:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6970:104:16"},"returnParameters":{"id":6920,"nodeType":"ParameterList","parameters":[],"src":"7083:0:16"},"scope":6970,"src":"6942:142:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6922,"nodeType":"StructuredDocumentation","src":"7092:362:16","text":" Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\n @param userOp - The user operation to generate the request ID for.\n @return hash the hash of this UserOperation"},"functionSelector":"22cdde4c","id":6930,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"7469:13:16","nodeType":"FunctionDefinition","parameters":{"id":6926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6925,"mutability":"mutable","name":"userOp","nameLocation":"7522:6:16","nodeType":"VariableDeclaration","scope":6930,"src":"7493:35:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":6924,"nodeType":"UserDefinedTypeName","pathNode":{"id":6923,"name":"PackedUserOperation","nameLocations":["7493:19:16"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"7493:19:16"},"referencedDeclaration":7171,"src":"7493:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"7482:53:16"},"returnParameters":{"id":6929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6930,"src":"7559:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7559:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7558:9:16"},"scope":6970,"src":"7460:108:16","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":6931,"nodeType":"StructuredDocumentation","src":"7576:481:16","text":" Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param accountValidationData   - returned validationData from account.\n @param paymasterValidationData - return validationData from paymaster.\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"},"id":6942,"members":[{"constant":false,"id":6933,"mutability":"mutable","name":"preOpGas","nameLocation":"8100:8:16","nodeType":"VariableDeclaration","scope":6942,"src":"8092:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6932,"name":"uint256","nodeType":"ElementaryTypeName","src":"8092:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6935,"mutability":"mutable","name":"prefund","nameLocation":"8127:7:16","nodeType":"VariableDeclaration","scope":6942,"src":"8119:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6934,"name":"uint256","nodeType":"ElementaryTypeName","src":"8119:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6937,"mutability":"mutable","name":"accountValidationData","nameLocation":"8153:21:16","nodeType":"VariableDeclaration","scope":6942,"src":"8145:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6936,"name":"uint256","nodeType":"ElementaryTypeName","src":"8145:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6939,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"8193:23:16","nodeType":"VariableDeclaration","scope":6942,"src":"8185:31:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6938,"name":"uint256","nodeType":"ElementaryTypeName","src":"8185:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6941,"mutability":"mutable","name":"paymasterContext","nameLocation":"8233:16:16","nodeType":"VariableDeclaration","scope":6942,"src":"8227:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6940,"name":"bytes","nodeType":"ElementaryTypeName","src":"8227:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"8070:10:16","nodeType":"StructDefinition","scope":6970,"src":"8063:194:16","visibility":"public"},{"documentation":{"id":6943,"nodeType":"StructuredDocumentation","src":"8265:427:16","text":" Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error.\n @notice this method cannot be used for EIP-7702 derived contracts.\n @param initCode - The constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":6948,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8707:16:16","nodeType":"FunctionDefinition","parameters":{"id":6946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6945,"mutability":"mutable","name":"initCode","nameLocation":"8737:8:16","nodeType":"VariableDeclaration","scope":6948,"src":"8724:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6944,"name":"bytes","nodeType":"ElementaryTypeName","src":"8724:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8723:23:16"},"returnParameters":{"id":6947,"nodeType":"ParameterList","parameters":[],"src":"8755:0:16"},"scope":6970,"src":"8698:58:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"errorSelector":"99410554","id":6954,"name":"DelegateAndRevert","nameLocation":"8770:17:16","nodeType":"ErrorDefinition","parameters":{"id":6953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6950,"mutability":"mutable","name":"success","nameLocation":"8793:7:16","nodeType":"VariableDeclaration","scope":6954,"src":"8788:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6949,"name":"bool","nodeType":"ElementaryTypeName","src":"8788:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6952,"mutability":"mutable","name":"ret","nameLocation":"8808:3:16","nodeType":"VariableDeclaration","scope":6954,"src":"8802:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6951,"name":"bytes","nodeType":"ElementaryTypeName","src":"8802:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8787:25:16"},"src":"8764:49:16"},{"documentation":{"id":6955,"nodeType":"StructuredDocumentation","src":"8821:499:16","text":" Helper method for dry-run testing.\n @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n  actual EntryPoint code is less convenient.\n @param target a target contract to make a delegatecall from entrypoint\n @param data data to pass to target in a delegatecall"},"functionSelector":"850aaf62","id":6962,"implemented":false,"kind":"function","modifiers":[],"name":"delegateAndRevert","nameLocation":"9335:17:16","nodeType":"FunctionDefinition","parameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6957,"mutability":"mutable","name":"target","nameLocation":"9361:6:16","nodeType":"VariableDeclaration","scope":6962,"src":"9353:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6956,"name":"address","nodeType":"ElementaryTypeName","src":"9353:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6959,"mutability":"mutable","name":"data","nameLocation":"9384:4:16","nodeType":"VariableDeclaration","scope":6962,"src":"9369:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6958,"name":"bytes","nodeType":"ElementaryTypeName","src":"9369:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9352:37:16"},"returnParameters":{"id":6961,"nodeType":"ParameterList","parameters":[],"src":"9398:0:16"},"scope":6970,"src":"9326:73:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":6963,"nodeType":"StructuredDocumentation","src":"9407:132:16","text":" @notice Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts."},"functionSelector":"09ccb880","id":6969,"implemented":false,"kind":"function","modifiers":[],"name":"senderCreator","nameLocation":"9554:13:16","nodeType":"FunctionDefinition","parameters":{"id":6964,"nodeType":"ParameterList","parameters":[],"src":"9567:2:16"},"returnParameters":{"id":6968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6969,"src":"9593:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISenderCreator_$7045","typeString":"contract ISenderCreator"},"typeName":{"id":6966,"nodeType":"UserDefinedTypeName","pathNode":{"id":6965,"name":"ISenderCreator","nameLocations":["9593:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":7045,"src":"9593:14:16"},"referencedDeclaration":7045,"src":"9593:14:16","typeDescriptions":{"typeIdentifier":"t_contract$_ISenderCreator_$7045","typeString":"contract ISenderCreator"}},"visibility":"internal"}],"src":"9592:16:16"},"scope":6970,"src":"9545:64:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6971,"src":"480:9132:16","usedErrors":[6869,6878,6882,6887,6891,6954],"usedEvents":[6812,6823,6834,6845,6854,6857,6862,7054,7062,7070,7076,7084]}],"src":"164:9450:16"},"id":16},"contracts/lib/interfaces/INonceManager.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[6989]},"id":6990,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6972,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6989,"linearizedBaseContracts":[6989],"name":"INonceManager","nameLocation":"71:13:17","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6973,"nodeType":"StructuredDocumentation","src":"94:424:17","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":6982,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"533:8:17","nodeType":"FunctionDefinition","parameters":{"id":6978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6975,"mutability":"mutable","name":"sender","nameLocation":"550:6:17","nodeType":"VariableDeclaration","scope":6982,"src":"542:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6974,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6977,"mutability":"mutable","name":"key","nameLocation":"566:3:17","nodeType":"VariableDeclaration","scope":6982,"src":"558:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6976,"name":"uint192","nodeType":"ElementaryTypeName","src":"558:7:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"541:29:17"},"returnParameters":{"id":6981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6980,"mutability":"mutable","name":"nonce","nameLocation":"607:5:17","nodeType":"VariableDeclaration","scope":6982,"src":"599:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6979,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"598:15:17"},"scope":6989,"src":"524:90:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":6983,"nodeType":"StructuredDocumentation","src":"622:540:17","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key.\n @param key - the \"nonce key\" to increment the \"nonce sequence\" for."},"functionSelector":"0bd28e3b","id":6988,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1177:14:17","nodeType":"FunctionDefinition","parameters":{"id":6986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6985,"mutability":"mutable","name":"key","nameLocation":"1200:3:17","nodeType":"VariableDeclaration","scope":6988,"src":"1192:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6984,"name":"uint192","nodeType":"ElementaryTypeName","src":"1192:7:17","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1191:13:17"},"returnParameters":{"id":6987,"nodeType":"ParameterList","parameters":[],"src":"1213:0:17"},"scope":6989,"src":"1168:46:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6990,"src":"61:1156:17","usedErrors":[],"usedEvents":[]}],"src":"33:1186:17"},"id":17},"contracts/lib/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[7026],"PackedUserOperation":[7171]},"id":7027,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6991,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:18"},{"absolutePath":"contracts/lib/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":6992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7027,"sourceUnit":7172,"src":"61:35:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":6993,"nodeType":"StructuredDocumentation","src":"100:219:18","text":" The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":7026,"linearizedBaseContracts":[7026],"name":"IPaymaster","nameLocation":"331:10:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":6997,"members":[{"id":6994,"name":"opSucceeded","nameLocation":"407:11:18","nodeType":"EnumValue","src":"407:11:18"},{"id":6995,"name":"opReverted","nameLocation":"485:10:18","nodeType":"EnumValue","src":"485:10:18"},{"id":6996,"name":"postOpReverted","nameLocation":"629:14:18","nodeType":"EnumValue","src":"629:14:18"}],"name":"PostOpMode","nameLocation":"354:10:18","nodeType":"EnumDefinition","src":"349:301:18"},{"documentation":{"id":6998,"nodeType":"StructuredDocumentation","src":"658:1461:18","text":" Payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp          - The user operation.\n @param userOpHash      - Hash of the user's request data.\n @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n @return validationData - Signature and time-range of this operation, encoded the same as the return\n                          value of validateUserOperation.\n                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n                                                    other values are invalid for paymaster.\n                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \"indefinitely\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"52b7512c","id":7012,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"2134:23:18","nodeType":"FunctionDefinition","parameters":{"id":7006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7001,"mutability":"mutable","name":"userOp","nameLocation":"2197:6:18","nodeType":"VariableDeclaration","scope":7012,"src":"2168:35:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":7000,"nodeType":"UserDefinedTypeName","pathNode":{"id":6999,"name":"PackedUserOperation","nameLocations":["2168:19:18"],"nodeType":"IdentifierPath","referencedDeclaration":7171,"src":"2168:19:18"},"referencedDeclaration":7171,"src":"2168:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$7171_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":7003,"mutability":"mutable","name":"userOpHash","nameLocation":"2222:10:18","nodeType":"VariableDeclaration","scope":7012,"src":"2214:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7005,"mutability":"mutable","name":"maxCost","nameLocation":"2251:7:18","nodeType":"VariableDeclaration","scope":7012,"src":"2243:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7004,"name":"uint256","nodeType":"ElementaryTypeName","src":"2243:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2157:108:18"},"returnParameters":{"id":7011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"context","nameLocation":"2297:7:18","nodeType":"VariableDeclaration","scope":7012,"src":"2284:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7007,"name":"bytes","nodeType":"ElementaryTypeName","src":"2284:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7010,"mutability":"mutable","name":"validationData","nameLocation":"2314:14:18","nodeType":"VariableDeclaration","scope":7012,"src":"2306:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2306:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2283:46:18"},"scope":7026,"src":"2125:205:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7013,"nodeType":"StructuredDocumentation","src":"2338:869:18","text":" Post-operation handler.\n Must verify sender is the entryPoint.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n                        postOpReverted - never passed in a call to postOp().\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual cost of gas used so far (without this postOp call).\n @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n                        and maxPriorityFee (and basefee)\n                        It is not the same as tx.gasprice, which is what the bundler pays."},"functionSelector":"7c627b21","id":7025,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3222:6:18","nodeType":"FunctionDefinition","parameters":{"id":7023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7016,"mutability":"mutable","name":"mode","nameLocation":"3250:4:18","nodeType":"VariableDeclaration","scope":7025,"src":"3239:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$6997","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":7015,"nodeType":"UserDefinedTypeName","pathNode":{"id":7014,"name":"PostOpMode","nameLocations":["3239:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6997,"src":"3239:10:18"},"referencedDeclaration":6997,"src":"3239:10:18","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$6997","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":7018,"mutability":"mutable","name":"context","nameLocation":"3280:7:18","nodeType":"VariableDeclaration","scope":7025,"src":"3265:22:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7017,"name":"bytes","nodeType":"ElementaryTypeName","src":"3265:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7020,"mutability":"mutable","name":"actualGasCost","nameLocation":"3306:13:18","nodeType":"VariableDeclaration","scope":7025,"src":"3298:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7019,"name":"uint256","nodeType":"ElementaryTypeName","src":"3298:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7022,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"3338:21:18","nodeType":"VariableDeclaration","scope":7025,"src":"3330:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7021,"name":"uint256","nodeType":"ElementaryTypeName","src":"3330:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3228:138:18"},"returnParameters":{"id":7024,"nodeType":"ParameterList","parameters":[],"src":"3375:0:18"},"scope":7026,"src":"3213:163:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7027,"src":"321:3058:18","usedErrors":[],"usedEvents":[]}],"src":"33:3348:18"},"id":18},"contracts/lib/interfaces/ISenderCreator.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/ISenderCreator.sol","exportedSymbols":{"ISenderCreator":[7045]},"id":7046,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7028,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"35:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"ISenderCreator","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":7045,"linearizedBaseContracts":[7045],"name":"ISenderCreator","nameLocation":"73:14:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7029,"nodeType":"StructuredDocumentation","src":"95:125:19","text":" @dev Creates a new sender contract.\n @return sender Address of the newly created sender contract."},"functionSelector":"570e1a36","id":7036,"implemented":false,"kind":"function","modifiers":[],"name":"createSender","nameLocation":"235:12:19","nodeType":"FunctionDefinition","parameters":{"id":7032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7031,"mutability":"mutable","name":"initCode","nameLocation":"263:8:19","nodeType":"VariableDeclaration","scope":7036,"src":"248:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7030,"name":"bytes","nodeType":"ElementaryTypeName","src":"248:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"247:25:19"},"returnParameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7034,"mutability":"mutable","name":"sender","nameLocation":"299:6:19","nodeType":"VariableDeclaration","scope":7036,"src":"291:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7033,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:16:19"},"scope":7045,"src":"226:81:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7037,"nodeType":"StructuredDocumentation","src":"315:428:19","text":" Use initCallData to initialize an EIP-7702 account.\n The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account.\n Note: Can be called multiple times as long as an appropriate initCode is supplied\n @param sender - the 'sender' EIP-7702 account to be initialized.\n @param initCallData - the call data to be passed to the sender account call."},"functionSelector":"c09ad0d9","id":7044,"implemented":false,"kind":"function","modifiers":[],"name":"initEip7702Sender","nameLocation":"758:17:19","nodeType":"FunctionDefinition","parameters":{"id":7042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7039,"mutability":"mutable","name":"sender","nameLocation":"784:6:19","nodeType":"VariableDeclaration","scope":7044,"src":"776:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7038,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7041,"mutability":"mutable","name":"initCallData","nameLocation":"807:12:19","nodeType":"VariableDeclaration","scope":7044,"src":"792:27:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7040,"name":"bytes","nodeType":"ElementaryTypeName","src":"792:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"775:45:19"},"returnParameters":{"id":7043,"nodeType":"ParameterList","parameters":[],"src":"829:0:19"},"scope":7045,"src":"749:81:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7046,"src":"63:770:19","usedErrors":[],"usedEvents":[]}],"src":"35:800:19"},"id":19},"contracts/lib/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[7149]},"id":7150,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7047,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":7048,"nodeType":"StructuredDocumentation","src":"61:216:20","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":7149,"linearizedBaseContracts":[7149],"name":"IStakeManager","nameLocation":"289:13:20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":7054,"name":"Deposited","nameLocation":"316:9:20","nodeType":"EventDefinition","parameters":{"id":7053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7050,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"342:7:20","nodeType":"VariableDeclaration","scope":7054,"src":"326:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7049,"name":"address","nodeType":"ElementaryTypeName","src":"326:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7052,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"359:12:20","nodeType":"VariableDeclaration","scope":7054,"src":"351:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7051,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"325:47:20"},"src":"310:63:20"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":7062,"name":"Withdrawn","nameLocation":"387:9:20","nodeType":"EventDefinition","parameters":{"id":7061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7056,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"423:7:20","nodeType":"VariableDeclaration","scope":7062,"src":"407:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7055,"name":"address","nodeType":"ElementaryTypeName","src":"407:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7058,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"449:15:20","nodeType":"VariableDeclaration","scope":7062,"src":"441:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7057,"name":"address","nodeType":"ElementaryTypeName","src":"441:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7060,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"483:6:20","nodeType":"VariableDeclaration","scope":7062,"src":"475:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7059,"name":"uint256","nodeType":"ElementaryTypeName","src":"475:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"396:100:20"},"src":"381:116:20"},{"anonymous":false,"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":7070,"name":"StakeLocked","nameLocation":"569:11:20","nodeType":"EventDefinition","parameters":{"id":7069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"607:7:20","nodeType":"VariableDeclaration","scope":7070,"src":"591:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7063,"name":"address","nodeType":"ElementaryTypeName","src":"591:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7066,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"633:11:20","nodeType":"VariableDeclaration","scope":7070,"src":"625:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7065,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7068,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"663:15:20","nodeType":"VariableDeclaration","scope":7070,"src":"655:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7067,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"580:105:20"},"src":"563:123:20"},{"anonymous":false,"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":7076,"name":"StakeUnlocked","nameLocation":"758:13:20","nodeType":"EventDefinition","parameters":{"id":7075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7072,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"788:7:20","nodeType":"VariableDeclaration","scope":7076,"src":"772:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7071,"name":"address","nodeType":"ElementaryTypeName","src":"772:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7074,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"805:12:20","nodeType":"VariableDeclaration","scope":7076,"src":"797:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7073,"name":"uint256","nodeType":"ElementaryTypeName","src":"797:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"771:47:20"},"src":"752:67:20"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":7084,"name":"StakeWithdrawn","nameLocation":"833:14:20","nodeType":"EventDefinition","parameters":{"id":7083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7078,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"874:7:20","nodeType":"VariableDeclaration","scope":7084,"src":"858:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7077,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7080,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"900:15:20","nodeType":"VariableDeclaration","scope":7084,"src":"892:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7079,"name":"address","nodeType":"ElementaryTypeName","src":"892:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7082,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"934:6:20","nodeType":"VariableDeclaration","scope":7084,"src":"926:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7081,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"847:100:20"},"src":"827:121:20"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":7085,"nodeType":"StructuredDocumentation","src":"956:708:20","text":" @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n      and the rest fit into a 2nd cell (used during stake/unstake)\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"},"id":7096,"members":[{"constant":false,"id":7087,"mutability":"mutable","name":"deposit","nameLocation":"1708:7:20","nodeType":"VariableDeclaration","scope":7096,"src":"1700:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7086,"name":"uint256","nodeType":"ElementaryTypeName","src":"1700:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7089,"mutability":"mutable","name":"staked","nameLocation":"1731:6:20","nodeType":"VariableDeclaration","scope":7096,"src":"1726:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7088,"name":"bool","nodeType":"ElementaryTypeName","src":"1726:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7091,"mutability":"mutable","name":"stake","nameLocation":"1756:5:20","nodeType":"VariableDeclaration","scope":7096,"src":"1748:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7090,"name":"uint112","nodeType":"ElementaryTypeName","src":"1748:7:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":7093,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1779:15:20","nodeType":"VariableDeclaration","scope":7096,"src":"1772:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7092,"name":"uint32","nodeType":"ElementaryTypeName","src":"1772:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7095,"mutability":"mutable","name":"withdrawTime","nameLocation":"1812:12:20","nodeType":"VariableDeclaration","scope":7096,"src":"1805:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7094,"name":"uint48","nodeType":"ElementaryTypeName","src":"1805:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1677:11:20","nodeType":"StructDefinition","scope":7149,"src":"1670:162:20","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":7101,"members":[{"constant":false,"id":7098,"mutability":"mutable","name":"stake","nameLocation":"1940:5:20","nodeType":"VariableDeclaration","scope":7101,"src":"1932:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7100,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1964:15:20","nodeType":"VariableDeclaration","scope":7101,"src":"1956:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7099,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1911:9:20","nodeType":"StructDefinition","scope":7149,"src":"1904:83:20","visibility":"public"},{"documentation":{"id":7102,"nodeType":"StructuredDocumentation","src":"1995:153:20","text":" Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."},"functionSelector":"5287ce12","id":7110,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"2163:14:20","nodeType":"FunctionDefinition","parameters":{"id":7105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7104,"mutability":"mutable","name":"account","nameLocation":"2196:7:20","nodeType":"VariableDeclaration","scope":7110,"src":"2188:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7103,"name":"address","nodeType":"ElementaryTypeName","src":"2188:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2177:33:20"},"returnParameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"mutability":"mutable","name":"info","nameLocation":"2253:4:20","nodeType":"VariableDeclaration","scope":7110,"src":"2234:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$7096_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":7107,"nodeType":"UserDefinedTypeName","pathNode":{"id":7106,"name":"DepositInfo","nameLocations":["2234:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":7096,"src":"2234:11:20"},"referencedDeclaration":7096,"src":"2234:11:20","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$7096_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2233:25:20"},"scope":7149,"src":"2154:105:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7111,"nodeType":"StructuredDocumentation","src":"2267:159:20","text":" Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."},"functionSelector":"70a08231","id":7118,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2441:9:20","nodeType":"FunctionDefinition","parameters":{"id":7114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7113,"mutability":"mutable","name":"account","nameLocation":"2459:7:20","nodeType":"VariableDeclaration","scope":7118,"src":"2451:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7112,"name":"address","nodeType":"ElementaryTypeName","src":"2451:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2450:17:20"},"returnParameters":{"id":7117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7118,"src":"2491:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2491:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2490:9:20"},"scope":7149,"src":"2432:68:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7119,"nodeType":"StructuredDocumentation","src":"2508:109:20","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":7124,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2632:9:20","nodeType":"FunctionDefinition","parameters":{"id":7122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7121,"mutability":"mutable","name":"account","nameLocation":"2650:7:20","nodeType":"VariableDeclaration","scope":7124,"src":"2642:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7120,"name":"address","nodeType":"ElementaryTypeName","src":"2642:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2641:17:20"},"returnParameters":{"id":7123,"nodeType":"ParameterList","parameters":[],"src":"2675:0:20"},"scope":7149,"src":"2623:53:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":7125,"nodeType":"StructuredDocumentation","src":"2684:206:20","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param unstakeDelaySec - The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":7130,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2905:8:20","nodeType":"FunctionDefinition","parameters":{"id":7128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7127,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"2921:15:20","nodeType":"VariableDeclaration","scope":7130,"src":"2914:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7126,"name":"uint32","nodeType":"ElementaryTypeName","src":"2914:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2913:24:20"},"returnParameters":{"id":7129,"nodeType":"ParameterList","parameters":[],"src":"2954:0:20"},"scope":7149,"src":"2896:59:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":7131,"nodeType":"StructuredDocumentation","src":"2963:131:20","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":7134,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3109:11:20","nodeType":"FunctionDefinition","parameters":{"id":7132,"nodeType":"ParameterList","parameters":[],"src":"3120:2:20"},"returnParameters":{"id":7133,"nodeType":"ParameterList","parameters":[],"src":"3131:0:20"},"scope":7149,"src":"3100:32:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7135,"nodeType":"StructuredDocumentation","src":"3140:201:20","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":7140,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3356:13:20","nodeType":"FunctionDefinition","parameters":{"id":7138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7137,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3386:15:20","nodeType":"VariableDeclaration","scope":7140,"src":"3370:31:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7136,"name":"address","nodeType":"ElementaryTypeName","src":"3370:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3369:33:20"},"returnParameters":{"id":7139,"nodeType":"ParameterList","parameters":[],"src":"3411:0:20"},"scope":7149,"src":"3347:65:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7141,"nodeType":"StructuredDocumentation","src":"3420:174:20","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":7148,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3609:10:20","nodeType":"FunctionDefinition","parameters":{"id":7146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7143,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3646:15:20","nodeType":"VariableDeclaration","scope":7148,"src":"3630:31:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7142,"name":"address","nodeType":"ElementaryTypeName","src":"3630:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":7145,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3680:14:20","nodeType":"VariableDeclaration","scope":7148,"src":"3672:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7144,"name":"uint256","nodeType":"ElementaryTypeName","src":"3672:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3619:82:20"},"returnParameters":{"id":7147,"nodeType":"ParameterList","parameters":[],"src":"3710:0:20"},"scope":7149,"src":"3600:111:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7150,"src":"279:3435:20","usedErrors":[],"usedEvents":[7054,7062,7070,7076,7084]}],"src":"33:3683:20"},"id":20},"contracts/lib/interfaces/PackedUserOperation.sol":{"ast":{"absolutePath":"contracts/lib/interfaces/PackedUserOperation.sol","exportedSymbols":{"PackedUserOperation":[7171]},"id":7172,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7151,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"33:24:21"},{"canonicalName":"PackedUserOperation","documentation":{"id":7152,"nodeType":"StructuredDocumentation","src":"61:1176:21","text":" User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor\n @param callData              - The method call to execute on this account.\n @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":7171,"members":[{"constant":false,"id":7154,"mutability":"mutable","name":"sender","nameLocation":"1281:6:21","nodeType":"VariableDeclaration","scope":7171,"src":"1273:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7153,"name":"address","nodeType":"ElementaryTypeName","src":"1273:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7156,"mutability":"mutable","name":"nonce","nameLocation":"1302:5:21","nodeType":"VariableDeclaration","scope":7171,"src":"1294:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1294:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7158,"mutability":"mutable","name":"initCode","nameLocation":"1320:8:21","nodeType":"VariableDeclaration","scope":7171,"src":"1314:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7157,"name":"bytes","nodeType":"ElementaryTypeName","src":"1314:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7160,"mutability":"mutable","name":"callData","nameLocation":"1341:8:21","nodeType":"VariableDeclaration","scope":7171,"src":"1335:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7159,"name":"bytes","nodeType":"ElementaryTypeName","src":"1335:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7162,"mutability":"mutable","name":"accountGasLimits","nameLocation":"1364:16:21","nodeType":"VariableDeclaration","scope":7171,"src":"1356:24:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1356:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7164,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1395:18:21","nodeType":"VariableDeclaration","scope":7171,"src":"1387:26:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1387:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7166,"mutability":"mutable","name":"gasFees","nameLocation":"1428:7:21","nodeType":"VariableDeclaration","scope":7171,"src":"1420:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1420:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7168,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1448:16:21","nodeType":"VariableDeclaration","scope":7171,"src":"1442:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7167,"name":"bytes","nodeType":"ElementaryTypeName","src":"1442:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7170,"mutability":"mutable","name":"signature","nameLocation":"1477:9:21","nodeType":"VariableDeclaration","scope":7171,"src":"1471:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":7169,"name":"bytes","nodeType":"ElementaryTypeName","src":"1471:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PackedUserOperation","nameLocation":"1246:19:21","nodeType":"StructDefinition","scope":7172,"src":"1239:251:21","visibility":"public"}],"src":"33:1459:21"},"id":21}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cca8e34ba4a10a3072e457ee409c3e14973552ffad66786674cea596605f229764736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xA8 0xE3 0x4B LOG4 LOG1 EXP ADDRESS PUSH19 0xE457EE409C3E14973552FFAD66786674CEA596 PUSH1 0x5F 0x22 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:2;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cca8e34ba4a10a3072e457ee409c3e14973552ffad66786674cea596605f229764736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xA8 0xE3 0x4B LOG4 LOG1 EXP ADDRESS PUSH19 0xE457EE409C3E14973552FFAD66786674CEA596 PUSH1 0x5F 0x22 SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b3a52a1edc00f264a10131122419f3e0cbee127bc9d5d98a20ed65729d6a232a64736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xA5 0x2A 0x1E 0xDC STOP CALLCODE PUSH5 0xA101311224 NOT RETURN 0xE0 0xCB 0xEE SLT PUSH28 0xC9D5D98A20ED65729D6A232A64736F6C634300081C00330000000000 ","sourceMap":"297:18980:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18980:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b3a52a1edc00f264a10131122419f3e0cbee127bc9d5d98a20ed65729d6a232a64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xA5 0x2A 0x1E 0xDC STOP CALLCODE PUSH5 0xA101311224 NOT RETURN 0xE0 0xCB 0xEE SLT PUSH28 0xC9D5D98A20ED65729D6A232A64736F6C634300081C00330000000000 ","sourceMap":"297:18980:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202ef22f034d9ef93c3116f406f8a9011283259adf13a9fa2ff192c56c59d5435164736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E CALLCODE 0x2F SUB 0x4D SWAP15 0xF9 EXTCODECOPY BALANCE AND DELEGATECALL MOD 0xF8 0xA9 ADD SLT DUP4 0x25 SWAP11 0xDF SGT 0xA9 STATICCALL 0x2F CALL SWAP3 0xC5 PUSH13 0x59D5435164736F6C634300081C STOP CALLER ","sourceMap":"344:7470:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:4;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202ef22f034d9ef93c3116f406f8a9011283259adf13a9fa2ff192c56c59d5435164736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E CALLCODE 0x2F SUB 0x4D SWAP15 0xF9 EXTCODECOPY BALANCE AND DELEGATECALL MOD 0xF8 0xA9 ADD SLT DUP4 0x25 SWAP11 0xDF SGT 0xA9 STATICCALL 0x2F CALL SWAP3 0xC5 PUSH13 0x59D5435164736F6C634300081C STOP CALLER ","sourceMap":"344:7470:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d16d13e105f8f65b59b77c3a4171d84c0c7f3f1e869e32773d21c750d789751e64736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH14 0x13E105F8F65B59B77C3A4171D84C 0xC PUSH32 0x3F1E869E32773D21C750D789751E64736F6C634300081C003300000000000000 ","sourceMap":"521:3729:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3729:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d16d13e105f8f65b59b77c3a4171d84c0c7f3f1e869e32773d21c750d789751e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 PUSH14 0x13E105F8F65B59B77C3A4171D84C 0xC PUSH32 0x3F1E869E32773D21C750D789751E64736F6C634300081C003300000000000000 ","sourceMap":"521:3729:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe4e02625737cdc6e5df7a89e49f6326eee89d2e7f600f66a448560a69f761dc64736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x4E MUL PUSH3 0x5737CD 0xC6 0xE5 0xDF PUSH27 0x89E49F6326EEE89D2E7F600F66A448560A69F761DC64736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:31863:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe4e02625737cdc6e5df7a89e49f6326eee89d2e7f600f66a448560a69f761dc64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x4E MUL PUSH3 0x5737CD 0xC6 0xE5 0xDF PUSH27 0x89E49F6326EEE89D2E7F600F66A448560A69F761DC64736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:31863:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203f46a6ffb56326a473b5758acd55e32e99b937035796e94c7557579cea6fb9d464736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH CHAINID 0xA6 SELFDESTRUCT 0xB5 PUSH4 0x26A473B5 PUSH22 0x8ACD55E32E99B937035796E94C7557579CEA6FB9D464 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"769:34173:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203f46a6ffb56326a473b5758acd55e32e99b937035796e94c7557579cea6fb9d464736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH CHAINID 0xA6 SELFDESTRUCT 0xB5 PUSH4 0x26A473B5 PUSH22 0x8ACD55E32E99B937035796E94C7557579CEA6FB9D464 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"769:34173:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208a55ed03b5bd2a413c0af052249d29c7f889c11b46b32ff454a480fb14df671c64736f6c634300081c0033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 SSTORE 0xED SUB 0xB5 0xBD 0x2A COINBASE EXTCODECOPY EXP CREATE MSTORE 0x24 SWAP14 0x29 0xC7 0xF8 DUP10 0xC1 SHL CHAINID 0xB3 0x2F DELEGATECALL SLOAD LOG4 DUP1 0xFB EQ 0xDF PUSH8 0x1C64736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"258:2354:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208a55ed03b5bd2a413c0af052249d29c7f889c11b46b32ff454a480fb14df671c64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 SSTORE 0xED SUB 0xB5 0xBD 0x2A COINBASE EXTCODECOPY EXP CREATE MSTORE 0x24 SWAP14 0x29 0xC7 0xF8 DUP10 0xC1 SHL CHAINID 0xB3 0x2F DELEGATECALL SLOAD LOG4 DUP1 0xFB EQ 0xDF PUSH8 0x1C64736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"258:2354:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/Paymaster.sol":{"Paymaster":{"abi":[{"inputs":[{"internalType":"address","name":"_entryPoint","type":"address"},{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidPaymasterAndDataLength","type":"error"},{"inputs":[],"name":"InvalidTimestamp","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UnsupportedTarget","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"depositor","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsDeposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"bool","name":"supported","type":"bool"}],"name":"TargetSupportChanged","type":"event"},{"inputs":[{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"postOpGasLimit","type":"uint256"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"uint48","name":"validAfter","type":"uint48"}],"name":"createPaymasterAndData","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositToEntryPoint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"","type":"uint8"},{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bool","name":"supported","type":"bool"}],"name":"setSupportedTarget","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"supportedTargets","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_5651":{"entryPoint":null,"id":5651,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":120,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":199,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":226,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:699:22","nodeType":"YulBlock","src":"0:699:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"74:117:22","nodeType":"YulBlock","src":"74:117:22","statements":[{"nativeSrc":"84:22:22","nodeType":"YulAssignment","src":"84:22:22","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:22","nodeType":"YulIdentifier","src":"99:6:22"}],"functionName":{"name":"mload","nativeSrc":"93:5:22","nodeType":"YulIdentifier","src":"93:5:22"},"nativeSrc":"93:13:22","nodeType":"YulFunctionCall","src":"93:13:22"},"variableNames":[{"name":"value","nativeSrc":"84:5:22","nodeType":"YulIdentifier","src":"84:5:22"}]},{"body":{"nativeSrc":"169:16:22","nodeType":"YulBlock","src":"169:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:22","nodeType":"YulLiteral","src":"178:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:22","nodeType":"YulLiteral","src":"181:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:22","nodeType":"YulIdentifier","src":"171:6:22"},"nativeSrc":"171:12:22","nodeType":"YulFunctionCall","src":"171:12:22"},"nativeSrc":"171:12:22","nodeType":"YulExpressionStatement","src":"171:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:22","nodeType":"YulIdentifier","src":"128:5:22"},{"arguments":[{"name":"value","nativeSrc":"139:5:22","nodeType":"YulIdentifier","src":"139:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:22","nodeType":"YulLiteral","src":"154:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:22","nodeType":"YulLiteral","src":"159:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:22","nodeType":"YulIdentifier","src":"150:3:22"},"nativeSrc":"150:11:22","nodeType":"YulFunctionCall","src":"150:11:22"},{"kind":"number","nativeSrc":"163:1:22","nodeType":"YulLiteral","src":"163:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:22","nodeType":"YulIdentifier","src":"146:3:22"},"nativeSrc":"146:19:22","nodeType":"YulFunctionCall","src":"146:19:22"}],"functionName":{"name":"and","nativeSrc":"135:3:22","nodeType":"YulIdentifier","src":"135:3:22"},"nativeSrc":"135:31:22","nodeType":"YulFunctionCall","src":"135:31:22"}],"functionName":{"name":"eq","nativeSrc":"125:2:22","nodeType":"YulIdentifier","src":"125:2:22"},"nativeSrc":"125:42:22","nodeType":"YulFunctionCall","src":"125:42:22"}],"functionName":{"name":"iszero","nativeSrc":"118:6:22","nodeType":"YulIdentifier","src":"118:6:22"},"nativeSrc":"118:50:22","nodeType":"YulFunctionCall","src":"118:50:22"},"nativeSrc":"115:70:22","nodeType":"YulIf","src":"115:70:22"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:22","nodeType":"YulTypedName","src":"53:6:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:22","nodeType":"YulTypedName","src":"64:5:22","type":""}],"src":"14:177:22"},{"body":{"nativeSrc":"294:195:22","nodeType":"YulBlock","src":"294:195:22","statements":[{"body":{"nativeSrc":"340:16:22","nodeType":"YulBlock","src":"340:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"349:1:22","nodeType":"YulLiteral","src":"349:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"352:1:22","nodeType":"YulLiteral","src":"352:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"342:6:22","nodeType":"YulIdentifier","src":"342:6:22"},"nativeSrc":"342:12:22","nodeType":"YulFunctionCall","src":"342:12:22"},"nativeSrc":"342:12:22","nodeType":"YulExpressionStatement","src":"342:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"315:7:22","nodeType":"YulIdentifier","src":"315:7:22"},{"name":"headStart","nativeSrc":"324:9:22","nodeType":"YulIdentifier","src":"324:9:22"}],"functionName":{"name":"sub","nativeSrc":"311:3:22","nodeType":"YulIdentifier","src":"311:3:22"},"nativeSrc":"311:23:22","nodeType":"YulFunctionCall","src":"311:23:22"},{"kind":"number","nativeSrc":"336:2:22","nodeType":"YulLiteral","src":"336:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"307:3:22","nodeType":"YulIdentifier","src":"307:3:22"},"nativeSrc":"307:32:22","nodeType":"YulFunctionCall","src":"307:32:22"},"nativeSrc":"304:52:22","nodeType":"YulIf","src":"304:52:22"},{"nativeSrc":"365:50:22","nodeType":"YulAssignment","src":"365:50:22","value":{"arguments":[{"name":"headStart","nativeSrc":"405:9:22","nodeType":"YulIdentifier","src":"405:9:22"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"375:29:22","nodeType":"YulIdentifier","src":"375:29:22"},"nativeSrc":"375:40:22","nodeType":"YulFunctionCall","src":"375:40:22"},"variableNames":[{"name":"value0","nativeSrc":"365:6:22","nodeType":"YulIdentifier","src":"365:6:22"}]},{"nativeSrc":"424:59:22","nodeType":"YulAssignment","src":"424:59:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"468:9:22","nodeType":"YulIdentifier","src":"468:9:22"},{"kind":"number","nativeSrc":"479:2:22","nodeType":"YulLiteral","src":"479:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"464:3:22","nodeType":"YulIdentifier","src":"464:3:22"},"nativeSrc":"464:18:22","nodeType":"YulFunctionCall","src":"464:18:22"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"434:29:22","nodeType":"YulIdentifier","src":"434:29:22"},"nativeSrc":"434:49:22","nodeType":"YulFunctionCall","src":"434:49:22"},"variableNames":[{"name":"value1","nativeSrc":"424:6:22","nodeType":"YulIdentifier","src":"424:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"196:293:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"252:9:22","nodeType":"YulTypedName","src":"252:9:22","type":""},{"name":"dataEnd","nativeSrc":"263:7:22","nodeType":"YulTypedName","src":"263:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"275:6:22","nodeType":"YulTypedName","src":"275:6:22","type":""},{"name":"value1","nativeSrc":"283:6:22","nodeType":"YulTypedName","src":"283:6:22","type":""}],"src":"196:293:22"},{"body":{"nativeSrc":"595:102:22","nodeType":"YulBlock","src":"595:102:22","statements":[{"nativeSrc":"605:26:22","nodeType":"YulAssignment","src":"605:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"617:9:22","nodeType":"YulIdentifier","src":"617:9:22"},{"kind":"number","nativeSrc":"628:2:22","nodeType":"YulLiteral","src":"628:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"613:3:22","nodeType":"YulIdentifier","src":"613:3:22"},"nativeSrc":"613:18:22","nodeType":"YulFunctionCall","src":"613:18:22"},"variableNames":[{"name":"tail","nativeSrc":"605:4:22","nodeType":"YulIdentifier","src":"605:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"647:9:22","nodeType":"YulIdentifier","src":"647:9:22"},{"arguments":[{"name":"value0","nativeSrc":"662:6:22","nodeType":"YulIdentifier","src":"662:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"678:3:22","nodeType":"YulLiteral","src":"678:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"683:1:22","nodeType":"YulLiteral","src":"683:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"674:3:22","nodeType":"YulIdentifier","src":"674:3:22"},"nativeSrc":"674:11:22","nodeType":"YulFunctionCall","src":"674:11:22"},{"kind":"number","nativeSrc":"687:1:22","nodeType":"YulLiteral","src":"687:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"670:3:22","nodeType":"YulIdentifier","src":"670:3:22"},"nativeSrc":"670:19:22","nodeType":"YulFunctionCall","src":"670:19:22"}],"functionName":{"name":"and","nativeSrc":"658:3:22","nodeType":"YulIdentifier","src":"658:3:22"},"nativeSrc":"658:32:22","nodeType":"YulFunctionCall","src":"658:32:22"}],"functionName":{"name":"mstore","nativeSrc":"640:6:22","nodeType":"YulIdentifier","src":"640:6:22"},"nativeSrc":"640:51:22","nodeType":"YulFunctionCall","src":"640:51:22"},"nativeSrc":"640:51:22","nodeType":"YulExpressionStatement","src":"640:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"494:203:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"564:9:22","nodeType":"YulTypedName","src":"564:9:22","type":""},{"name":"value0","nativeSrc":"575:6:22","nodeType":"YulTypedName","src":"575:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"586:4:22","nodeType":"YulTypedName","src":"586:4:22","type":""}],"src":"494:203:22"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561000f575f5ffd5b50604051610cf3380380610cf383398101604081905261002e916100e2565b806001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61006581610078565b50506001600160a01b0316608052610113565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100dd575f5ffd5b919050565b5f5f604083850312156100f3575f5ffd5b6100fc836100c7565b915061010a602084016100c7565b90509250929050565b608051610bc16101325f395f818161020101526102950152610bc15ff3fe60806040526004361061008f575f3560e01c80638f8780a4116100575780638f8780a414610138578063a19f212f146101d1578063b0d691fe146101f0578063dc69c06f14610223578063f2fde38b14610261575f5ffd5b80631b3ba1011461009357806352b7512c1461009d578063715018a6146100d35780637c627b21146100e75780638da5cb5b14610108575b5f5ffd5b61009b610280565b005b3480156100a8575f5ffd5b506100bc6100b7366004610832565b61032f565b6040516100ca9291906108af565b60405180910390f35b3480156100de575f5ffd5b5061009b610510565b3480156100f2575f5ffd5b5061009b6101013660046108d0565b5050505050565b348015610113575f5ffd5b505f546001600160a01b03165b6040516001600160a01b0390911681526020016100ca565b348015610143575f5ffd5b506101c461015236600461097e565b6040805130606090811b6bffffffffffffffffffffffff19166020830152608096871b6001600160801b031990811660348401529590961b909416604485015260d092831b6001600160d01b031990811660548601529190921b16605a83015280518083038201815292909101905290565b6040516100ca91906109c1565b3480156101dc575f5ffd5b5061009b6101eb3660046109f0565b610523565b3480156101fb575f5ffd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b34801561022e575f5ffd5b5061025161023d366004610a29565b60016020525f908152604090205460ff1681565b60405190151581526020016100ca565b34801561026c575f5ffd5b5061009b61027b366004610a29565b610589565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024015f604051808303818588803b1580156102e0575f5ffd5b505af11580156102f2573d5f5f3e3d5ffd5b50506040513481523393507f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d4749250602001905060405180910390a2565b60605f80808061034a61034560e08a018a610a42565b6105c6565b919450925090506001600160a01b03831630146103ae5760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e644461746100000060448201526064015b60405180910390fd5b5f6103c46103bf60608b018b610a42565b610636565b6001600160a01b0381165f9081526001602052604090205490915060ff1661042e5760405162461bcd60e51b815260206004820152601f60248201527f5061796d61737465723a20746172676574206e6f7420737570706f727465640060448201526064016103a5565b5f8061044561044060e08d018d610a42565b6106b5565b915091508065ffffffffffff164210156104985760405162461bcd60e51b81526020600482015260146024820152735061796d61737465723a20746f6f206561726c7960601b60448201526064016103a5565b8165ffffffffffff164211156104e65760405162461bcd60e51b81526020600482015260136024820152725061796d61737465723a20746f6f206c61746560681b60448201526064016103a5565b6104f15f8383610779565b60408051602081019091525f81529c909b509950505050505050505050565b6105186107b7565b6105215f6107e3565b565b61052b6107b7565b6001600160a01b0382165f81815260016020908152604091829020805460ff191685151590811790915591519182527fe5239967f86bdfebd2052a7d2539a8359f2cdefacfbdeb04bdd72e854c994553910160405180910390a25050565b6105916107b7565b6001600160a01b0381166105ba57604051631e4fbdf760e01b81525f60048201526024016103a5565b6105c3816107e3565b50565b5f80806105d66014828688610a8c565b6105df91610ab3565b60601c6105f0602460148789610a8c565b6105f991610b00565b60801c61060a60346024888a610a8c565b61061391610b00565b9194506fffffffffffffffffffffffffffffffff16925060801c90509250925092565b5f60148210156106935760405162461bcd60e51b815260206004820152602260248201527f5061796d61737465723a20696e76616c69642063616c6c44617461206c656e676044820152610e8d60f31b60648201526084016103a5565b6106a060145f8486610a8c565b6106a991610ab3565b60601c90505b92915050565b5f806106c36034600c610b36565b8310156107125760405162461bcd60e51b815260206004820152601c60248201527f5061796d61737465723a20696e76616c69642074696d6520646174610000000060448201526064016103a5565b83603484610721826006610b36565b9261072e93929190610a8c565b61073791610b55565b60d01c9150838361074a60346006610b36565b906107576034600c610b36565b9261076493929190610a8c565b61076d91610b55565b60d01c90509250929050565b5f609084610787575f61078a565b60015b60ff16901b60ff1660608365ffffffffffff16901b60308565ffffffffffff16901b171790509392505050565b5f546001600160a01b031633146105215760405163118cdaa760e01b81523360048201526024016103a5565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5f5f60608486031215610844575f5ffd5b833567ffffffffffffffff81111561085a575f5ffd5b8401610120818703121561086c575f5ffd5b95602085013595506040909401359392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b604081525f6108c16040830185610881565b90508260208301529392505050565b5f5f5f5f5f608086880312156108e4575f5ffd5b8535600381106108f2575f5ffd5b9450602086013567ffffffffffffffff81111561090d575f5ffd5b8601601f8101881361091d575f5ffd5b803567ffffffffffffffff811115610933575f5ffd5b886020828401011115610944575f5ffd5b959860209190910197509495604081013595606090910135945092505050565b803565ffffffffffff81168114610979575f5ffd5b919050565b5f5f5f5f60808587031215610991575f5ffd5b84359350602085013592506109a860408601610964565b91506109b660608601610964565b905092959194509250565b602081525f6109d36020830184610881565b9392505050565b80356001600160a01b0381168114610979575f5ffd5b5f5f60408385031215610a01575f5ffd5b610a0a836109da565b915060208301358015158114610a1e575f5ffd5b809150509250929050565b5f60208284031215610a39575f5ffd5b6109d3826109da565b5f5f8335601e19843603018112610a57575f5ffd5b83018035915067ffffffffffffffff821115610a71575f5ffd5b602001915036819003821315610a85575f5ffd5b9250929050565b5f5f85851115610a9a575f5ffd5b83861115610aa6575f5ffd5b5050820193919092039150565b80356bffffffffffffffffffffffff198116906014841015610af9576bffffffffffffffffffffffff196bffffffffffffffffffffffff198560140360031b1b82161691505b5092915050565b80356001600160801b03198116906010841015610af9576001600160801b031960109490940360031b84901b1690921692915050565b808201808211156106af57634e487b7160e01b5f52601160045260245ffd5b80356001600160d01b03198116906006841015610af9576001600160d01b031960069490940360031b84901b169092169291505056fea2646970667358221220296eeac24636ea119210f213907b5e4a2be5be9746dacab280f4e9939848aa9a64736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCF3 CODESIZE SUB DUP1 PUSH2 0xCF3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xE2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65 DUP2 PUSH2 0x78 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x113 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDD JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFC DUP4 PUSH2 0xC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x10A PUSH1 0x20 DUP5 ADD PUSH2 0xC7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xBC1 PUSH2 0x132 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x201 ADD MSTORE PUSH2 0x295 ADD MSTORE PUSH2 0xBC1 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F8780A4 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0x8F8780A4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA19F212F EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xDC69C06F EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x261 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1B3BA101 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x52B7512C EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7C627B21 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x108 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9B PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xBC PUSH2 0xB7 CALLDATASIZE PUSH1 0x4 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP3 SWAP2 SWAP1 PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9B PUSH2 0x510 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9B PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x60 SWAP1 DUP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x80 SWAP7 DUP8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x34 DUP5 ADD MSTORE SWAP6 SWAP1 SWAP7 SHL SWAP1 SWAP5 AND PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0xD0 SWAP3 DUP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x54 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP3 SHL AND PUSH1 0x5A DUP4 ADD MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP3 SWAP1 SWAP2 ADD SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9B PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x120 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9B PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0xA29 JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB760FAF9 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP4 POP PUSH32 0x543BA50A5EEC5E6178218E364B1D0F396157B3C8FA278522C2CB7FD99407D474 SWAP3 POP PUSH1 0x20 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP1 DUP1 PUSH2 0x34A PUSH2 0x345 PUSH1 0xE0 DUP11 ADD DUP11 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x5C6 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ PUSH2 0x3AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4141393320696E76616C6964207061796D6173746572416E6444617461000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3C4 PUSH2 0x3BF PUSH1 0x60 DUP12 ADD DUP12 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x42E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D61737465723A20746172676574206E6F7420737570706F7274656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x445 PUSH2 0x440 PUSH1 0xE0 DUP14 ADD DUP14 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND TIMESTAMP LT ISZERO PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5061796D61737465723A20746F6F206561726C79 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST DUP2 PUSH6 0xFFFFFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5061796D61737465723A20746F6F206C617465 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x4F1 PUSH0 DUP4 DUP4 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP13 SWAP1 SWAP12 POP SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x518 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x521 PUSH0 PUSH2 0x7E3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x52B PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xE5239967F86BDFEBD2052A7D2539A8359F2CDEFACFBDEB04BDD72E854C994553 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x591 PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x5C3 DUP2 PUSH2 0x7E3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x5D6 PUSH1 0x14 DUP3 DUP7 DUP9 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x5DF SWAP2 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x60 SHR PUSH2 0x5F0 PUSH1 0x24 PUSH1 0x14 DUP8 DUP10 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x5F9 SWAP2 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x80 SHR PUSH2 0x60A PUSH1 0x34 PUSH1 0x24 DUP9 DUP11 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x613 SWAP2 PUSH2 0xB00 JUMP JUMPDEST SWAP2 SWAP5 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x80 SHR SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D61737465723A20696E76616C69642063616C6C44617461206C656E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xE8D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x6A0 PUSH1 0x14 PUSH0 DUP5 DUP7 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x6A9 SWAP2 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6C3 PUSH1 0x34 PUSH1 0xC PUSH2 0xB36 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D61737465723A20696E76616C69642074696D65206461746100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST DUP4 PUSH1 0x34 DUP5 PUSH2 0x721 DUP3 PUSH1 0x6 PUSH2 0xB36 JUMP JUMPDEST SWAP3 PUSH2 0x72E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x737 SWAP2 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0xD0 SHR SWAP2 POP DUP4 DUP4 PUSH2 0x74A PUSH1 0x34 PUSH1 0x6 PUSH2 0xB36 JUMP JUMPDEST SWAP1 PUSH2 0x757 PUSH1 0x34 PUSH1 0xC PUSH2 0xB36 JUMP JUMPDEST SWAP3 PUSH2 0x764 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x76D SWAP2 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0xD0 SHR SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x90 DUP5 PUSH2 0x787 JUMPI PUSH0 PUSH2 0x78A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 SHL PUSH1 0xFF AND PUSH1 0x60 DUP4 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL PUSH1 0x30 DUP6 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL OR OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x521 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x844 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x85A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x86C JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x8C1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x881 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x8E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x8F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x90D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x91D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x933 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x944 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP6 SWAP9 PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP8 POP SWAP5 SWAP6 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP6 PUSH1 0x60 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x979 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x991 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x9A8 PUSH1 0x40 DUP7 ADD PUSH2 0x964 JUMP JUMPDEST SWAP2 POP PUSH2 0x9B6 PUSH1 0x60 DUP7 ADD PUSH2 0x964 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x9D3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x881 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x979 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA01 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA0A DUP4 PUSH2 0x9DA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA1E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA39 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D3 DUP3 PUSH2 0x9DA JUMP JUMPDEST PUSH0 PUSH0 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xA57 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA71 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xA85 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP6 DUP6 GT ISZERO PUSH2 0xA9A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0xAA6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND SWAP1 PUSH1 0x14 DUP5 LT ISZERO PUSH2 0xAF9 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP6 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP3 AND AND SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND SWAP1 PUSH1 0x10 DUP5 LT ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT PUSH1 0x10 SWAP5 SWAP1 SWAP5 SUB PUSH1 0x3 SHL DUP5 SWAP1 SHL AND SWAP1 SWAP3 AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT DUP2 AND SWAP1 PUSH1 0x6 DUP5 LT ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT PUSH1 0x6 SWAP5 SWAP1 SWAP5 SUB PUSH1 0x3 SHL DUP5 SWAP1 SHL AND SWAP1 SWAP3 AND SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH15 0xEAC24636EA119210F213907B5E4A2B 0xE5 0xBE SWAP8 CHAINID 0xDA 0xCA 0xB2 DUP1 DELEGATECALL 0xE9 SWAP4 SWAP9 BASEFEE 0xAA SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"246:5333:9:-:0;;;795:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;852:6;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:22;613:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;;870:37:9::1;;::::0;246:5333;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:22:-;93:13;;-1:-1:-1;;;;;135:31:22;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;246:5333:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":1975,"id":84,"parameterSlots":0,"returnSlots":0},"@_extractTargetFromCallData_5830":{"entryPoint":1590,"id":5830,"parameterSlots":2,"returnSlots":1},"@_extractTimeValidation_5888":{"entryPoint":1717,"id":5888,"parameterSlots":2,"returnSlots":2},"@_msgSender_159":{"entryPoint":null,"id":159,"parameterSlots":0,"returnSlots":1},"@_packValidationData_5923":{"entryPoint":1913,"id":5923,"parameterSlots":3,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":2019,"id":146,"parameterSlots":1,"returnSlots":0},"@createPaymasterAndData_5956":{"entryPoint":null,"id":5956,"parameterSlots":4,"returnSlots":1},"@depositToEntryPoint_5697":{"entryPoint":640,"id":5697,"parameterSlots":0,"returnSlots":0},"@entryPoint_5612":{"entryPoint":null,"id":5612,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@postOp_5802":{"entryPoint":null,"id":5802,"parameterSlots":5,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1296,"id":98,"parameterSlots":0,"returnSlots":0},"@setSupportedTarget_5673":{"entryPoint":1315,"id":5673,"parameterSlots":2,"returnSlots":0},"@supportedTargets_5616":{"entryPoint":null,"id":5616,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1417,"id":126,"parameterSlots":1,"returnSlots":0},"@unpackPaymasterStaticFields_6701":{"entryPoint":1478,"id":6701,"parameterSlots":2,"returnSlots":3},"@validatePaymasterUserOp_5787":{"entryPoint":815,"id":5787,"parameterSlots":3,"returnSlots":2},"abi_decode_address":{"entryPoint":2522,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2601,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bool":{"entryPoint":2544,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_enum$_PostOpMode_$6997t_bytes_calldata_ptrt_uint256t_uint256":{"entryPoint":2256,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_struct$_PackedUserOperation_$7171_calldata_ptrt_bytes32t_uint256":{"entryPoint":2098,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256t_uint48t_uint48":{"entryPoint":2430,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_uint48":{"entryPoint":2404,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bytes":{"entryPoint":2177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address_t_uint128_t_uint128_t_uint48_t_uint48__to_t_address_t_uint128_t_uint128_t_uint48_t_uint48__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2497,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":2223,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$6970__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0aeb6dea3fb6ebb3aa45acbc0ba1c2e4c57c479e2534bc1d09a8b61331d0819d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4198d203aba495b14d35609df4e0fab0eed8b12794e2f6b08835d7724c3d50e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5a54aa21db6571c1440d4b763d749c53b0d2fc802899ecc9d8c8a51c8d19720f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6acf2faee47d8f5f17d2d14a94013a2abe488391abc435b18c87d9d0ab6edfc3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a46ef91c55b9678716a89f861b9adb2dd6f8902ada171d2da0533a3e4362fd32__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bed5bf2586bcf71963468f5a6e4def651dfab48dcb520989dbad3d1cd3cd8bdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":2626,"id":null,"parameterSlots":2,"returnSlots":2},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":2700,"id":null,"parameterSlots":4,"returnSlots":2},"checked_add_t_uint256":{"entryPoint":2870,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes16":{"entryPoint":2816,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20":{"entryPoint":2739,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes6":{"entryPoint":2901,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:9680:22","nodeType":"YulBlock","src":"0:9680:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"157:438:22","nodeType":"YulBlock","src":"157:438:22","statements":[{"body":{"nativeSrc":"203:16:22","nodeType":"YulBlock","src":"203:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"212:1:22","nodeType":"YulLiteral","src":"212:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"215:1:22","nodeType":"YulLiteral","src":"215:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"205:6:22","nodeType":"YulIdentifier","src":"205:6:22"},"nativeSrc":"205:12:22","nodeType":"YulFunctionCall","src":"205:12:22"},"nativeSrc":"205:12:22","nodeType":"YulExpressionStatement","src":"205:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"178:7:22","nodeType":"YulIdentifier","src":"178:7:22"},{"name":"headStart","nativeSrc":"187:9:22","nodeType":"YulIdentifier","src":"187:9:22"}],"functionName":{"name":"sub","nativeSrc":"174:3:22","nodeType":"YulIdentifier","src":"174:3:22"},"nativeSrc":"174:23:22","nodeType":"YulFunctionCall","src":"174:23:22"},{"kind":"number","nativeSrc":"199:2:22","nodeType":"YulLiteral","src":"199:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"170:3:22","nodeType":"YulIdentifier","src":"170:3:22"},"nativeSrc":"170:32:22","nodeType":"YulFunctionCall","src":"170:32:22"},"nativeSrc":"167:52:22","nodeType":"YulIf","src":"167:52:22"},{"nativeSrc":"228:37:22","nodeType":"YulVariableDeclaration","src":"228:37:22","value":{"arguments":[{"name":"headStart","nativeSrc":"255:9:22","nodeType":"YulIdentifier","src":"255:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"242:12:22","nodeType":"YulIdentifier","src":"242:12:22"},"nativeSrc":"242:23:22","nodeType":"YulFunctionCall","src":"242:23:22"},"variables":[{"name":"offset","nativeSrc":"232:6:22","nodeType":"YulTypedName","src":"232:6:22","type":""}]},{"body":{"nativeSrc":"308:16:22","nodeType":"YulBlock","src":"308:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:22","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:22","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:22","nodeType":"YulIdentifier","src":"310:6:22"},"nativeSrc":"310:12:22","nodeType":"YulFunctionCall","src":"310:12:22"},"nativeSrc":"310:12:22","nodeType":"YulExpressionStatement","src":"310:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"280:6:22","nodeType":"YulIdentifier","src":"280:6:22"},{"kind":"number","nativeSrc":"288:18:22","nodeType":"YulLiteral","src":"288:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"277:2:22","nodeType":"YulIdentifier","src":"277:2:22"},"nativeSrc":"277:30:22","nodeType":"YulFunctionCall","src":"277:30:22"},"nativeSrc":"274:50:22","nodeType":"YulIf","src":"274:50:22"},{"nativeSrc":"333:32:22","nodeType":"YulVariableDeclaration","src":"333:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"347:9:22","nodeType":"YulIdentifier","src":"347:9:22"},{"name":"offset","nativeSrc":"358:6:22","nodeType":"YulIdentifier","src":"358:6:22"}],"functionName":{"name":"add","nativeSrc":"343:3:22","nodeType":"YulIdentifier","src":"343:3:22"},"nativeSrc":"343:22:22","nodeType":"YulFunctionCall","src":"343:22:22"},"variables":[{"name":"_1","nativeSrc":"337:2:22","nodeType":"YulTypedName","src":"337:2:22","type":""}]},{"body":{"nativeSrc":"404:16:22","nodeType":"YulBlock","src":"404:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"413:1:22","nodeType":"YulLiteral","src":"413:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"416:1:22","nodeType":"YulLiteral","src":"416:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"406:6:22","nodeType":"YulIdentifier","src":"406:6:22"},"nativeSrc":"406:12:22","nodeType":"YulFunctionCall","src":"406:12:22"},"nativeSrc":"406:12:22","nodeType":"YulExpressionStatement","src":"406:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"385:7:22","nodeType":"YulIdentifier","src":"385:7:22"},{"name":"_1","nativeSrc":"394:2:22","nodeType":"YulIdentifier","src":"394:2:22"}],"functionName":{"name":"sub","nativeSrc":"381:3:22","nodeType":"YulIdentifier","src":"381:3:22"},"nativeSrc":"381:16:22","nodeType":"YulFunctionCall","src":"381:16:22"},{"kind":"number","nativeSrc":"399:3:22","nodeType":"YulLiteral","src":"399:3:22","type":"","value":"288"}],"functionName":{"name":"slt","nativeSrc":"377:3:22","nodeType":"YulIdentifier","src":"377:3:22"},"nativeSrc":"377:26:22","nodeType":"YulFunctionCall","src":"377:26:22"},"nativeSrc":"374:46:22","nodeType":"YulIf","src":"374:46:22"},{"nativeSrc":"429:12:22","nodeType":"YulAssignment","src":"429:12:22","value":{"name":"_1","nativeSrc":"439:2:22","nodeType":"YulIdentifier","src":"439:2:22"},"variableNames":[{"name":"value0","nativeSrc":"429:6:22","nodeType":"YulIdentifier","src":"429:6:22"}]},{"nativeSrc":"450:42:22","nodeType":"YulAssignment","src":"450:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"477:9:22","nodeType":"YulIdentifier","src":"477:9:22"},{"kind":"number","nativeSrc":"488:2:22","nodeType":"YulLiteral","src":"488:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"473:3:22","nodeType":"YulIdentifier","src":"473:3:22"},"nativeSrc":"473:18:22","nodeType":"YulFunctionCall","src":"473:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"460:12:22","nodeType":"YulIdentifier","src":"460:12:22"},"nativeSrc":"460:32:22","nodeType":"YulFunctionCall","src":"460:32:22"},"variableNames":[{"name":"value1","nativeSrc":"450:6:22","nodeType":"YulIdentifier","src":"450:6:22"}]},{"nativeSrc":"501:14:22","nodeType":"YulVariableDeclaration","src":"501:14:22","value":{"kind":"number","nativeSrc":"514:1:22","nodeType":"YulLiteral","src":"514:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"505:5:22","nodeType":"YulTypedName","src":"505:5:22","type":""}]},{"nativeSrc":"524:41:22","nodeType":"YulAssignment","src":"524:41:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"550:9:22","nodeType":"YulIdentifier","src":"550:9:22"},{"kind":"number","nativeSrc":"561:2:22","nodeType":"YulLiteral","src":"561:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"546:3:22","nodeType":"YulIdentifier","src":"546:3:22"},"nativeSrc":"546:18:22","nodeType":"YulFunctionCall","src":"546:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"533:12:22","nodeType":"YulIdentifier","src":"533:12:22"},"nativeSrc":"533:32:22","nodeType":"YulFunctionCall","src":"533:32:22"},"variableNames":[{"name":"value","nativeSrc":"524:5:22","nodeType":"YulIdentifier","src":"524:5:22"}]},{"nativeSrc":"574:15:22","nodeType":"YulAssignment","src":"574:15:22","value":{"name":"value","nativeSrc":"584:5:22","nodeType":"YulIdentifier","src":"584:5:22"},"variableNames":[{"name":"value2","nativeSrc":"574:6:22","nodeType":"YulIdentifier","src":"574:6:22"}]}]},"name":"abi_decode_tuple_t_struct$_PackedUserOperation_$7171_calldata_ptrt_bytes32t_uint256","nativeSrc":"14:581:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"107:9:22","nodeType":"YulTypedName","src":"107:9:22","type":""},{"name":"dataEnd","nativeSrc":"118:7:22","nodeType":"YulTypedName","src":"118:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"130:6:22","nodeType":"YulTypedName","src":"130:6:22","type":""},{"name":"value1","nativeSrc":"138:6:22","nodeType":"YulTypedName","src":"138:6:22","type":""},{"name":"value2","nativeSrc":"146:6:22","nodeType":"YulTypedName","src":"146:6:22","type":""}],"src":"14:581:22"},{"body":{"nativeSrc":"649:239:22","nodeType":"YulBlock","src":"649:239:22","statements":[{"nativeSrc":"659:26:22","nodeType":"YulVariableDeclaration","src":"659:26:22","value":{"arguments":[{"name":"value","nativeSrc":"679:5:22","nodeType":"YulIdentifier","src":"679:5:22"}],"functionName":{"name":"mload","nativeSrc":"673:5:22","nodeType":"YulIdentifier","src":"673:5:22"},"nativeSrc":"673:12:22","nodeType":"YulFunctionCall","src":"673:12:22"},"variables":[{"name":"length","nativeSrc":"663:6:22","nodeType":"YulTypedName","src":"663:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"701:3:22","nodeType":"YulIdentifier","src":"701:3:22"},{"name":"length","nativeSrc":"706:6:22","nodeType":"YulIdentifier","src":"706:6:22"}],"functionName":{"name":"mstore","nativeSrc":"694:6:22","nodeType":"YulIdentifier","src":"694:6:22"},"nativeSrc":"694:19:22","nodeType":"YulFunctionCall","src":"694:19:22"},"nativeSrc":"694:19:22","nodeType":"YulExpressionStatement","src":"694:19:22"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"732:3:22","nodeType":"YulIdentifier","src":"732:3:22"},{"kind":"number","nativeSrc":"737:4:22","nodeType":"YulLiteral","src":"737:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"728:3:22","nodeType":"YulIdentifier","src":"728:3:22"},"nativeSrc":"728:14:22","nodeType":"YulFunctionCall","src":"728:14:22"},{"arguments":[{"name":"value","nativeSrc":"748:5:22","nodeType":"YulIdentifier","src":"748:5:22"},{"kind":"number","nativeSrc":"755:4:22","nodeType":"YulLiteral","src":"755:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"744:3:22","nodeType":"YulIdentifier","src":"744:3:22"},"nativeSrc":"744:16:22","nodeType":"YulFunctionCall","src":"744:16:22"},{"name":"length","nativeSrc":"762:6:22","nodeType":"YulIdentifier","src":"762:6:22"}],"functionName":{"name":"mcopy","nativeSrc":"722:5:22","nodeType":"YulIdentifier","src":"722:5:22"},"nativeSrc":"722:47:22","nodeType":"YulFunctionCall","src":"722:47:22"},"nativeSrc":"722:47:22","nodeType":"YulExpressionStatement","src":"722:47:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"793:3:22","nodeType":"YulIdentifier","src":"793:3:22"},{"name":"length","nativeSrc":"798:6:22","nodeType":"YulIdentifier","src":"798:6:22"}],"functionName":{"name":"add","nativeSrc":"789:3:22","nodeType":"YulIdentifier","src":"789:3:22"},"nativeSrc":"789:16:22","nodeType":"YulFunctionCall","src":"789:16:22"},{"kind":"number","nativeSrc":"807:4:22","nodeType":"YulLiteral","src":"807:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"785:3:22","nodeType":"YulIdentifier","src":"785:3:22"},"nativeSrc":"785:27:22","nodeType":"YulFunctionCall","src":"785:27:22"},{"kind":"number","nativeSrc":"814:1:22","nodeType":"YulLiteral","src":"814:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"778:6:22","nodeType":"YulIdentifier","src":"778:6:22"},"nativeSrc":"778:38:22","nodeType":"YulFunctionCall","src":"778:38:22"},"nativeSrc":"778:38:22","nodeType":"YulExpressionStatement","src":"778:38:22"},{"nativeSrc":"825:57:22","nodeType":"YulAssignment","src":"825:57:22","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"840:3:22","nodeType":"YulIdentifier","src":"840:3:22"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"853:6:22","nodeType":"YulIdentifier","src":"853:6:22"},{"kind":"number","nativeSrc":"861:2:22","nodeType":"YulLiteral","src":"861:2:22","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"849:3:22","nodeType":"YulIdentifier","src":"849:3:22"},"nativeSrc":"849:15:22","nodeType":"YulFunctionCall","src":"849:15:22"},{"arguments":[{"kind":"number","nativeSrc":"870:2:22","nodeType":"YulLiteral","src":"870:2:22","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"866:3:22","nodeType":"YulIdentifier","src":"866:3:22"},"nativeSrc":"866:7:22","nodeType":"YulFunctionCall","src":"866:7:22"}],"functionName":{"name":"and","nativeSrc":"845:3:22","nodeType":"YulIdentifier","src":"845:3:22"},"nativeSrc":"845:29:22","nodeType":"YulFunctionCall","src":"845:29:22"}],"functionName":{"name":"add","nativeSrc":"836:3:22","nodeType":"YulIdentifier","src":"836:3:22"},"nativeSrc":"836:39:22","nodeType":"YulFunctionCall","src":"836:39:22"},{"kind":"number","nativeSrc":"877:4:22","nodeType":"YulLiteral","src":"877:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"832:3:22","nodeType":"YulIdentifier","src":"832:3:22"},"nativeSrc":"832:50:22","nodeType":"YulFunctionCall","src":"832:50:22"},"variableNames":[{"name":"end","nativeSrc":"825:3:22","nodeType":"YulIdentifier","src":"825:3:22"}]}]},"name":"abi_encode_bytes","nativeSrc":"600:288:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"626:5:22","nodeType":"YulTypedName","src":"626:5:22","type":""},{"name":"pos","nativeSrc":"633:3:22","nodeType":"YulTypedName","src":"633:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"641:3:22","nodeType":"YulTypedName","src":"641:3:22","type":""}],"src":"600:288:22"},{"body":{"nativeSrc":"1040:141:22","nodeType":"YulBlock","src":"1040:141:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1057:9:22","nodeType":"YulIdentifier","src":"1057:9:22"},{"kind":"number","nativeSrc":"1068:2:22","nodeType":"YulLiteral","src":"1068:2:22","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"1050:6:22","nodeType":"YulIdentifier","src":"1050:6:22"},"nativeSrc":"1050:21:22","nodeType":"YulFunctionCall","src":"1050:21:22"},"nativeSrc":"1050:21:22","nodeType":"YulExpressionStatement","src":"1050:21:22"},{"nativeSrc":"1080:52:22","nodeType":"YulAssignment","src":"1080:52:22","value":{"arguments":[{"name":"value0","nativeSrc":"1105:6:22","nodeType":"YulIdentifier","src":"1105:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"1117:9:22","nodeType":"YulIdentifier","src":"1117:9:22"},{"kind":"number","nativeSrc":"1128:2:22","nodeType":"YulLiteral","src":"1128:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1113:3:22","nodeType":"YulIdentifier","src":"1113:3:22"},"nativeSrc":"1113:18:22","nodeType":"YulFunctionCall","src":"1113:18:22"}],"functionName":{"name":"abi_encode_bytes","nativeSrc":"1088:16:22","nodeType":"YulIdentifier","src":"1088:16:22"},"nativeSrc":"1088:44:22","nodeType":"YulFunctionCall","src":"1088:44:22"},"variableNames":[{"name":"tail","nativeSrc":"1080:4:22","nodeType":"YulIdentifier","src":"1080:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1152:9:22","nodeType":"YulIdentifier","src":"1152:9:22"},{"kind":"number","nativeSrc":"1163:2:22","nodeType":"YulLiteral","src":"1163:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1148:3:22","nodeType":"YulIdentifier","src":"1148:3:22"},"nativeSrc":"1148:18:22","nodeType":"YulFunctionCall","src":"1148:18:22"},{"name":"value1","nativeSrc":"1168:6:22","nodeType":"YulIdentifier","src":"1168:6:22"}],"functionName":{"name":"mstore","nativeSrc":"1141:6:22","nodeType":"YulIdentifier","src":"1141:6:22"},"nativeSrc":"1141:34:22","nodeType":"YulFunctionCall","src":"1141:34:22"},"nativeSrc":"1141:34:22","nodeType":"YulExpressionStatement","src":"1141:34:22"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"893:288:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1001:9:22","nodeType":"YulTypedName","src":"1001:9:22","type":""},{"name":"value1","nativeSrc":"1012:6:22","nodeType":"YulTypedName","src":"1012:6:22","type":""},{"name":"value0","nativeSrc":"1020:6:22","nodeType":"YulTypedName","src":"1020:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1031:4:22","nodeType":"YulTypedName","src":"1031:4:22","type":""}],"src":"893:288:22"},{"body":{"nativeSrc":"1341:831:22","nodeType":"YulBlock","src":"1341:831:22","statements":[{"body":{"nativeSrc":"1388:16:22","nodeType":"YulBlock","src":"1388:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:1:22","nodeType":"YulLiteral","src":"1397:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1400:1:22","nodeType":"YulLiteral","src":"1400:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1390:6:22","nodeType":"YulIdentifier","src":"1390:6:22"},"nativeSrc":"1390:12:22","nodeType":"YulFunctionCall","src":"1390:12:22"},"nativeSrc":"1390:12:22","nodeType":"YulExpressionStatement","src":"1390:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1362:7:22","nodeType":"YulIdentifier","src":"1362:7:22"},{"name":"headStart","nativeSrc":"1371:9:22","nodeType":"YulIdentifier","src":"1371:9:22"}],"functionName":{"name":"sub","nativeSrc":"1358:3:22","nodeType":"YulIdentifier","src":"1358:3:22"},"nativeSrc":"1358:23:22","nodeType":"YulFunctionCall","src":"1358:23:22"},{"kind":"number","nativeSrc":"1383:3:22","nodeType":"YulLiteral","src":"1383:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1354:3:22","nodeType":"YulIdentifier","src":"1354:3:22"},"nativeSrc":"1354:33:22","nodeType":"YulFunctionCall","src":"1354:33:22"},"nativeSrc":"1351:53:22","nodeType":"YulIf","src":"1351:53:22"},{"nativeSrc":"1413:36:22","nodeType":"YulVariableDeclaration","src":"1413:36:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1439:9:22","nodeType":"YulIdentifier","src":"1439:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"1426:12:22","nodeType":"YulIdentifier","src":"1426:12:22"},"nativeSrc":"1426:23:22","nodeType":"YulFunctionCall","src":"1426:23:22"},"variables":[{"name":"value","nativeSrc":"1417:5:22","nodeType":"YulTypedName","src":"1417:5:22","type":""}]},{"body":{"nativeSrc":"1482:16:22","nodeType":"YulBlock","src":"1482:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1491:1:22","nodeType":"YulLiteral","src":"1491:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1494:1:22","nodeType":"YulLiteral","src":"1494:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1484:6:22","nodeType":"YulIdentifier","src":"1484:6:22"},"nativeSrc":"1484:12:22","nodeType":"YulFunctionCall","src":"1484:12:22"},"nativeSrc":"1484:12:22","nodeType":"YulExpressionStatement","src":"1484:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1471:5:22","nodeType":"YulIdentifier","src":"1471:5:22"},{"kind":"number","nativeSrc":"1478:1:22","nodeType":"YulLiteral","src":"1478:1:22","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"1468:2:22","nodeType":"YulIdentifier","src":"1468:2:22"},"nativeSrc":"1468:12:22","nodeType":"YulFunctionCall","src":"1468:12:22"}],"functionName":{"name":"iszero","nativeSrc":"1461:6:22","nodeType":"YulIdentifier","src":"1461:6:22"},"nativeSrc":"1461:20:22","nodeType":"YulFunctionCall","src":"1461:20:22"},"nativeSrc":"1458:40:22","nodeType":"YulIf","src":"1458:40:22"},{"nativeSrc":"1507:15:22","nodeType":"YulAssignment","src":"1507:15:22","value":{"name":"value","nativeSrc":"1517:5:22","nodeType":"YulIdentifier","src":"1517:5:22"},"variableNames":[{"name":"value0","nativeSrc":"1507:6:22","nodeType":"YulIdentifier","src":"1507:6:22"}]},{"nativeSrc":"1531:46:22","nodeType":"YulVariableDeclaration","src":"1531:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1562:9:22","nodeType":"YulIdentifier","src":"1562:9:22"},{"kind":"number","nativeSrc":"1573:2:22","nodeType":"YulLiteral","src":"1573:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1558:3:22","nodeType":"YulIdentifier","src":"1558:3:22"},"nativeSrc":"1558:18:22","nodeType":"YulFunctionCall","src":"1558:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"1545:12:22","nodeType":"YulIdentifier","src":"1545:12:22"},"nativeSrc":"1545:32:22","nodeType":"YulFunctionCall","src":"1545:32:22"},"variables":[{"name":"offset","nativeSrc":"1535:6:22","nodeType":"YulTypedName","src":"1535:6:22","type":""}]},{"body":{"nativeSrc":"1620:16:22","nodeType":"YulBlock","src":"1620:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1629:1:22","nodeType":"YulLiteral","src":"1629:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1632:1:22","nodeType":"YulLiteral","src":"1632:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1622:6:22","nodeType":"YulIdentifier","src":"1622:6:22"},"nativeSrc":"1622:12:22","nodeType":"YulFunctionCall","src":"1622:12:22"},"nativeSrc":"1622:12:22","nodeType":"YulExpressionStatement","src":"1622:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1592:6:22","nodeType":"YulIdentifier","src":"1592:6:22"},{"kind":"number","nativeSrc":"1600:18:22","nodeType":"YulLiteral","src":"1600:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1589:2:22","nodeType":"YulIdentifier","src":"1589:2:22"},"nativeSrc":"1589:30:22","nodeType":"YulFunctionCall","src":"1589:30:22"},"nativeSrc":"1586:50:22","nodeType":"YulIf","src":"1586:50:22"},{"nativeSrc":"1645:32:22","nodeType":"YulVariableDeclaration","src":"1645:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1659:9:22","nodeType":"YulIdentifier","src":"1659:9:22"},{"name":"offset","nativeSrc":"1670:6:22","nodeType":"YulIdentifier","src":"1670:6:22"}],"functionName":{"name":"add","nativeSrc":"1655:3:22","nodeType":"YulIdentifier","src":"1655:3:22"},"nativeSrc":"1655:22:22","nodeType":"YulFunctionCall","src":"1655:22:22"},"variables":[{"name":"_1","nativeSrc":"1649:2:22","nodeType":"YulTypedName","src":"1649:2:22","type":""}]},{"body":{"nativeSrc":"1725:16:22","nodeType":"YulBlock","src":"1725:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1734:1:22","nodeType":"YulLiteral","src":"1734:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1737:1:22","nodeType":"YulLiteral","src":"1737:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1727:6:22","nodeType":"YulIdentifier","src":"1727:6:22"},"nativeSrc":"1727:12:22","nodeType":"YulFunctionCall","src":"1727:12:22"},"nativeSrc":"1727:12:22","nodeType":"YulExpressionStatement","src":"1727:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1704:2:22","nodeType":"YulIdentifier","src":"1704:2:22"},{"kind":"number","nativeSrc":"1708:4:22","nodeType":"YulLiteral","src":"1708:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1700:3:22","nodeType":"YulIdentifier","src":"1700:3:22"},"nativeSrc":"1700:13:22","nodeType":"YulFunctionCall","src":"1700:13:22"},{"name":"dataEnd","nativeSrc":"1715:7:22","nodeType":"YulIdentifier","src":"1715:7:22"}],"functionName":{"name":"slt","nativeSrc":"1696:3:22","nodeType":"YulIdentifier","src":"1696:3:22"},"nativeSrc":"1696:27:22","nodeType":"YulFunctionCall","src":"1696:27:22"}],"functionName":{"name":"iszero","nativeSrc":"1689:6:22","nodeType":"YulIdentifier","src":"1689:6:22"},"nativeSrc":"1689:35:22","nodeType":"YulFunctionCall","src":"1689:35:22"},"nativeSrc":"1686:55:22","nodeType":"YulIf","src":"1686:55:22"},{"nativeSrc":"1750:30:22","nodeType":"YulVariableDeclaration","src":"1750:30:22","value":{"arguments":[{"name":"_1","nativeSrc":"1777:2:22","nodeType":"YulIdentifier","src":"1777:2:22"}],"functionName":{"name":"calldataload","nativeSrc":"1764:12:22","nodeType":"YulIdentifier","src":"1764:12:22"},"nativeSrc":"1764:16:22","nodeType":"YulFunctionCall","src":"1764:16:22"},"variables":[{"name":"length","nativeSrc":"1754:6:22","nodeType":"YulTypedName","src":"1754:6:22","type":""}]},{"body":{"nativeSrc":"1823:16:22","nodeType":"YulBlock","src":"1823:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1832:1:22","nodeType":"YulLiteral","src":"1832:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1835:1:22","nodeType":"YulLiteral","src":"1835:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1825:6:22","nodeType":"YulIdentifier","src":"1825:6:22"},"nativeSrc":"1825:12:22","nodeType":"YulFunctionCall","src":"1825:12:22"},"nativeSrc":"1825:12:22","nodeType":"YulExpressionStatement","src":"1825:12:22"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1795:6:22","nodeType":"YulIdentifier","src":"1795:6:22"},{"kind":"number","nativeSrc":"1803:18:22","nodeType":"YulLiteral","src":"1803:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1792:2:22","nodeType":"YulIdentifier","src":"1792:2:22"},"nativeSrc":"1792:30:22","nodeType":"YulFunctionCall","src":"1792:30:22"},"nativeSrc":"1789:50:22","nodeType":"YulIf","src":"1789:50:22"},{"body":{"nativeSrc":"1889:16:22","nodeType":"YulBlock","src":"1889:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1898:1:22","nodeType":"YulLiteral","src":"1898:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1901:1:22","nodeType":"YulLiteral","src":"1901:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1891:6:22","nodeType":"YulIdentifier","src":"1891:6:22"},"nativeSrc":"1891:12:22","nodeType":"YulFunctionCall","src":"1891:12:22"},"nativeSrc":"1891:12:22","nodeType":"YulExpressionStatement","src":"1891:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"1862:2:22","nodeType":"YulIdentifier","src":"1862:2:22"},{"name":"length","nativeSrc":"1866:6:22","nodeType":"YulIdentifier","src":"1866:6:22"}],"functionName":{"name":"add","nativeSrc":"1858:3:22","nodeType":"YulIdentifier","src":"1858:3:22"},"nativeSrc":"1858:15:22","nodeType":"YulFunctionCall","src":"1858:15:22"},{"kind":"number","nativeSrc":"1875:2:22","nodeType":"YulLiteral","src":"1875:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1854:3:22","nodeType":"YulIdentifier","src":"1854:3:22"},"nativeSrc":"1854:24:22","nodeType":"YulFunctionCall","src":"1854:24:22"},{"name":"dataEnd","nativeSrc":"1880:7:22","nodeType":"YulIdentifier","src":"1880:7:22"}],"functionName":{"name":"gt","nativeSrc":"1851:2:22","nodeType":"YulIdentifier","src":"1851:2:22"},"nativeSrc":"1851:37:22","nodeType":"YulFunctionCall","src":"1851:37:22"},"nativeSrc":"1848:57:22","nodeType":"YulIf","src":"1848:57:22"},{"nativeSrc":"1914:21:22","nodeType":"YulAssignment","src":"1914:21:22","value":{"arguments":[{"name":"_1","nativeSrc":"1928:2:22","nodeType":"YulIdentifier","src":"1928:2:22"},{"kind":"number","nativeSrc":"1932:2:22","nodeType":"YulLiteral","src":"1932:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1924:3:22","nodeType":"YulIdentifier","src":"1924:3:22"},"nativeSrc":"1924:11:22","nodeType":"YulFunctionCall","src":"1924:11:22"},"variableNames":[{"name":"value1","nativeSrc":"1914:6:22","nodeType":"YulIdentifier","src":"1914:6:22"}]},{"nativeSrc":"1944:16:22","nodeType":"YulAssignment","src":"1944:16:22","value":{"name":"length","nativeSrc":"1954:6:22","nodeType":"YulIdentifier","src":"1954:6:22"},"variableNames":[{"name":"value2","nativeSrc":"1944:6:22","nodeType":"YulIdentifier","src":"1944:6:22"}]},{"nativeSrc":"1969:16:22","nodeType":"YulVariableDeclaration","src":"1969:16:22","value":{"kind":"number","nativeSrc":"1984:1:22","nodeType":"YulLiteral","src":"1984:1:22","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"1973:7:22","nodeType":"YulTypedName","src":"1973:7:22","type":""}]},{"nativeSrc":"1994:43:22","nodeType":"YulAssignment","src":"1994:43:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2022:9:22","nodeType":"YulIdentifier","src":"2022:9:22"},{"kind":"number","nativeSrc":"2033:2:22","nodeType":"YulLiteral","src":"2033:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2018:3:22","nodeType":"YulIdentifier","src":"2018:3:22"},"nativeSrc":"2018:18:22","nodeType":"YulFunctionCall","src":"2018:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"2005:12:22","nodeType":"YulIdentifier","src":"2005:12:22"},"nativeSrc":"2005:32:22","nodeType":"YulFunctionCall","src":"2005:32:22"},"variableNames":[{"name":"value_1","nativeSrc":"1994:7:22","nodeType":"YulIdentifier","src":"1994:7:22"}]},{"nativeSrc":"2046:17:22","nodeType":"YulAssignment","src":"2046:17:22","value":{"name":"value_1","nativeSrc":"2056:7:22","nodeType":"YulIdentifier","src":"2056:7:22"},"variableNames":[{"name":"value3","nativeSrc":"2046:6:22","nodeType":"YulIdentifier","src":"2046:6:22"}]},{"nativeSrc":"2072:16:22","nodeType":"YulVariableDeclaration","src":"2072:16:22","value":{"kind":"number","nativeSrc":"2087:1:22","nodeType":"YulLiteral","src":"2087:1:22","type":"","value":"0"},"variables":[{"name":"value_2","nativeSrc":"2076:7:22","nodeType":"YulTypedName","src":"2076:7:22","type":""}]},{"nativeSrc":"2097:43:22","nodeType":"YulAssignment","src":"2097:43:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2125:9:22","nodeType":"YulIdentifier","src":"2125:9:22"},{"kind":"number","nativeSrc":"2136:2:22","nodeType":"YulLiteral","src":"2136:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2121:3:22","nodeType":"YulIdentifier","src":"2121:3:22"},"nativeSrc":"2121:18:22","nodeType":"YulFunctionCall","src":"2121:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"2108:12:22","nodeType":"YulIdentifier","src":"2108:12:22"},"nativeSrc":"2108:32:22","nodeType":"YulFunctionCall","src":"2108:32:22"},"variableNames":[{"name":"value_2","nativeSrc":"2097:7:22","nodeType":"YulIdentifier","src":"2097:7:22"}]},{"nativeSrc":"2149:17:22","nodeType":"YulAssignment","src":"2149:17:22","value":{"name":"value_2","nativeSrc":"2159:7:22","nodeType":"YulIdentifier","src":"2159:7:22"},"variableNames":[{"name":"value4","nativeSrc":"2149:6:22","nodeType":"YulIdentifier","src":"2149:6:22"}]}]},"name":"abi_decode_tuple_t_enum$_PostOpMode_$6997t_bytes_calldata_ptrt_uint256t_uint256","nativeSrc":"1186:986:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1275:9:22","nodeType":"YulTypedName","src":"1275:9:22","type":""},{"name":"dataEnd","nativeSrc":"1286:7:22","nodeType":"YulTypedName","src":"1286:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1298:6:22","nodeType":"YulTypedName","src":"1298:6:22","type":""},{"name":"value1","nativeSrc":"1306:6:22","nodeType":"YulTypedName","src":"1306:6:22","type":""},{"name":"value2","nativeSrc":"1314:6:22","nodeType":"YulTypedName","src":"1314:6:22","type":""},{"name":"value3","nativeSrc":"1322:6:22","nodeType":"YulTypedName","src":"1322:6:22","type":""},{"name":"value4","nativeSrc":"1330:6:22","nodeType":"YulTypedName","src":"1330:6:22","type":""}],"src":"1186:986:22"},{"body":{"nativeSrc":"2278:102:22","nodeType":"YulBlock","src":"2278:102:22","statements":[{"nativeSrc":"2288:26:22","nodeType":"YulAssignment","src":"2288:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2300:9:22","nodeType":"YulIdentifier","src":"2300:9:22"},{"kind":"number","nativeSrc":"2311:2:22","nodeType":"YulLiteral","src":"2311:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2296:3:22","nodeType":"YulIdentifier","src":"2296:3:22"},"nativeSrc":"2296:18:22","nodeType":"YulFunctionCall","src":"2296:18:22"},"variableNames":[{"name":"tail","nativeSrc":"2288:4:22","nodeType":"YulIdentifier","src":"2288:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2330:9:22","nodeType":"YulIdentifier","src":"2330:9:22"},{"arguments":[{"name":"value0","nativeSrc":"2345:6:22","nodeType":"YulIdentifier","src":"2345:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2361:3:22","nodeType":"YulLiteral","src":"2361:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"2366:1:22","nodeType":"YulLiteral","src":"2366:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2357:3:22","nodeType":"YulIdentifier","src":"2357:3:22"},"nativeSrc":"2357:11:22","nodeType":"YulFunctionCall","src":"2357:11:22"},{"kind":"number","nativeSrc":"2370:1:22","nodeType":"YulLiteral","src":"2370:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2353:3:22","nodeType":"YulIdentifier","src":"2353:3:22"},"nativeSrc":"2353:19:22","nodeType":"YulFunctionCall","src":"2353:19:22"}],"functionName":{"name":"and","nativeSrc":"2341:3:22","nodeType":"YulIdentifier","src":"2341:3:22"},"nativeSrc":"2341:32:22","nodeType":"YulFunctionCall","src":"2341:32:22"}],"functionName":{"name":"mstore","nativeSrc":"2323:6:22","nodeType":"YulIdentifier","src":"2323:6:22"},"nativeSrc":"2323:51:22","nodeType":"YulFunctionCall","src":"2323:51:22"},"nativeSrc":"2323:51:22","nodeType":"YulExpressionStatement","src":"2323:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2177:203:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2247:9:22","nodeType":"YulTypedName","src":"2247:9:22","type":""},{"name":"value0","nativeSrc":"2258:6:22","nodeType":"YulTypedName","src":"2258:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2269:4:22","nodeType":"YulTypedName","src":"2269:4:22","type":""}],"src":"2177:203:22"},{"body":{"nativeSrc":"2433:119:22","nodeType":"YulBlock","src":"2433:119:22","statements":[{"nativeSrc":"2443:29:22","nodeType":"YulAssignment","src":"2443:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"2465:6:22","nodeType":"YulIdentifier","src":"2465:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"2452:12:22","nodeType":"YulIdentifier","src":"2452:12:22"},"nativeSrc":"2452:20:22","nodeType":"YulFunctionCall","src":"2452:20:22"},"variableNames":[{"name":"value","nativeSrc":"2443:5:22","nodeType":"YulIdentifier","src":"2443:5:22"}]},{"body":{"nativeSrc":"2530:16:22","nodeType":"YulBlock","src":"2530:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2539:1:22","nodeType":"YulLiteral","src":"2539:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2542:1:22","nodeType":"YulLiteral","src":"2542:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2532:6:22","nodeType":"YulIdentifier","src":"2532:6:22"},"nativeSrc":"2532:12:22","nodeType":"YulFunctionCall","src":"2532:12:22"},"nativeSrc":"2532:12:22","nodeType":"YulExpressionStatement","src":"2532:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2494:5:22","nodeType":"YulIdentifier","src":"2494:5:22"},{"arguments":[{"name":"value","nativeSrc":"2505:5:22","nodeType":"YulIdentifier","src":"2505:5:22"},{"kind":"number","nativeSrc":"2512:14:22","nodeType":"YulLiteral","src":"2512:14:22","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2501:3:22","nodeType":"YulIdentifier","src":"2501:3:22"},"nativeSrc":"2501:26:22","nodeType":"YulFunctionCall","src":"2501:26:22"}],"functionName":{"name":"eq","nativeSrc":"2491:2:22","nodeType":"YulIdentifier","src":"2491:2:22"},"nativeSrc":"2491:37:22","nodeType":"YulFunctionCall","src":"2491:37:22"}],"functionName":{"name":"iszero","nativeSrc":"2484:6:22","nodeType":"YulIdentifier","src":"2484:6:22"},"nativeSrc":"2484:45:22","nodeType":"YulFunctionCall","src":"2484:45:22"},"nativeSrc":"2481:65:22","nodeType":"YulIf","src":"2481:65:22"}]},"name":"abi_decode_uint48","nativeSrc":"2385:167:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2412:6:22","nodeType":"YulTypedName","src":"2412:6:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2423:5:22","nodeType":"YulTypedName","src":"2423:5:22","type":""}],"src":"2385:167:22"},{"body":{"nativeSrc":"2676:372:22","nodeType":"YulBlock","src":"2676:372:22","statements":[{"body":{"nativeSrc":"2723:16:22","nodeType":"YulBlock","src":"2723:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2732:1:22","nodeType":"YulLiteral","src":"2732:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"2735:1:22","nodeType":"YulLiteral","src":"2735:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2725:6:22","nodeType":"YulIdentifier","src":"2725:6:22"},"nativeSrc":"2725:12:22","nodeType":"YulFunctionCall","src":"2725:12:22"},"nativeSrc":"2725:12:22","nodeType":"YulExpressionStatement","src":"2725:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2697:7:22","nodeType":"YulIdentifier","src":"2697:7:22"},{"name":"headStart","nativeSrc":"2706:9:22","nodeType":"YulIdentifier","src":"2706:9:22"}],"functionName":{"name":"sub","nativeSrc":"2693:3:22","nodeType":"YulIdentifier","src":"2693:3:22"},"nativeSrc":"2693:23:22","nodeType":"YulFunctionCall","src":"2693:23:22"},{"kind":"number","nativeSrc":"2718:3:22","nodeType":"YulLiteral","src":"2718:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"2689:3:22","nodeType":"YulIdentifier","src":"2689:3:22"},"nativeSrc":"2689:33:22","nodeType":"YulFunctionCall","src":"2689:33:22"},"nativeSrc":"2686:53:22","nodeType":"YulIf","src":"2686:53:22"},{"nativeSrc":"2748:14:22","nodeType":"YulVariableDeclaration","src":"2748:14:22","value":{"kind":"number","nativeSrc":"2761:1:22","nodeType":"YulLiteral","src":"2761:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2752:5:22","nodeType":"YulTypedName","src":"2752:5:22","type":""}]},{"nativeSrc":"2771:32:22","nodeType":"YulAssignment","src":"2771:32:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2793:9:22","nodeType":"YulIdentifier","src":"2793:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"2780:12:22","nodeType":"YulIdentifier","src":"2780:12:22"},"nativeSrc":"2780:23:22","nodeType":"YulFunctionCall","src":"2780:23:22"},"variableNames":[{"name":"value","nativeSrc":"2771:5:22","nodeType":"YulIdentifier","src":"2771:5:22"}]},{"nativeSrc":"2812:15:22","nodeType":"YulAssignment","src":"2812:15:22","value":{"name":"value","nativeSrc":"2822:5:22","nodeType":"YulIdentifier","src":"2822:5:22"},"variableNames":[{"name":"value0","nativeSrc":"2812:6:22","nodeType":"YulIdentifier","src":"2812:6:22"}]},{"nativeSrc":"2836:16:22","nodeType":"YulVariableDeclaration","src":"2836:16:22","value":{"kind":"number","nativeSrc":"2851:1:22","nodeType":"YulLiteral","src":"2851:1:22","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"2840:7:22","nodeType":"YulTypedName","src":"2840:7:22","type":""}]},{"nativeSrc":"2861:43:22","nodeType":"YulAssignment","src":"2861:43:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2889:9:22","nodeType":"YulIdentifier","src":"2889:9:22"},{"kind":"number","nativeSrc":"2900:2:22","nodeType":"YulLiteral","src":"2900:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2885:3:22","nodeType":"YulIdentifier","src":"2885:3:22"},"nativeSrc":"2885:18:22","nodeType":"YulFunctionCall","src":"2885:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"2872:12:22","nodeType":"YulIdentifier","src":"2872:12:22"},"nativeSrc":"2872:32:22","nodeType":"YulFunctionCall","src":"2872:32:22"},"variableNames":[{"name":"value_1","nativeSrc":"2861:7:22","nodeType":"YulIdentifier","src":"2861:7:22"}]},{"nativeSrc":"2913:17:22","nodeType":"YulAssignment","src":"2913:17:22","value":{"name":"value_1","nativeSrc":"2923:7:22","nodeType":"YulIdentifier","src":"2923:7:22"},"variableNames":[{"name":"value1","nativeSrc":"2913:6:22","nodeType":"YulIdentifier","src":"2913:6:22"}]},{"nativeSrc":"2939:47:22","nodeType":"YulAssignment","src":"2939:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2971:9:22","nodeType":"YulIdentifier","src":"2971:9:22"},{"kind":"number","nativeSrc":"2982:2:22","nodeType":"YulLiteral","src":"2982:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2967:3:22","nodeType":"YulIdentifier","src":"2967:3:22"},"nativeSrc":"2967:18:22","nodeType":"YulFunctionCall","src":"2967:18:22"}],"functionName":{"name":"abi_decode_uint48","nativeSrc":"2949:17:22","nodeType":"YulIdentifier","src":"2949:17:22"},"nativeSrc":"2949:37:22","nodeType":"YulFunctionCall","src":"2949:37:22"},"variableNames":[{"name":"value2","nativeSrc":"2939:6:22","nodeType":"YulIdentifier","src":"2939:6:22"}]},{"nativeSrc":"2995:47:22","nodeType":"YulAssignment","src":"2995:47:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3027:9:22","nodeType":"YulIdentifier","src":"3027:9:22"},{"kind":"number","nativeSrc":"3038:2:22","nodeType":"YulLiteral","src":"3038:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3023:3:22","nodeType":"YulIdentifier","src":"3023:3:22"},"nativeSrc":"3023:18:22","nodeType":"YulFunctionCall","src":"3023:18:22"}],"functionName":{"name":"abi_decode_uint48","nativeSrc":"3005:17:22","nodeType":"YulIdentifier","src":"3005:17:22"},"nativeSrc":"3005:37:22","nodeType":"YulFunctionCall","src":"3005:37:22"},"variableNames":[{"name":"value3","nativeSrc":"2995:6:22","nodeType":"YulIdentifier","src":"2995:6:22"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint48t_uint48","nativeSrc":"2557:491:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2618:9:22","nodeType":"YulTypedName","src":"2618:9:22","type":""},{"name":"dataEnd","nativeSrc":"2629:7:22","nodeType":"YulTypedName","src":"2629:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2641:6:22","nodeType":"YulTypedName","src":"2641:6:22","type":""},{"name":"value1","nativeSrc":"2649:6:22","nodeType":"YulTypedName","src":"2649:6:22","type":""},{"name":"value2","nativeSrc":"2657:6:22","nodeType":"YulTypedName","src":"2657:6:22","type":""},{"name":"value3","nativeSrc":"2665:6:22","nodeType":"YulTypedName","src":"2665:6:22","type":""}],"src":"2557:491:22"},{"body":{"nativeSrc":"3172:98:22","nodeType":"YulBlock","src":"3172:98:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3189:9:22","nodeType":"YulIdentifier","src":"3189:9:22"},{"kind":"number","nativeSrc":"3200:2:22","nodeType":"YulLiteral","src":"3200:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3182:6:22","nodeType":"YulIdentifier","src":"3182:6:22"},"nativeSrc":"3182:21:22","nodeType":"YulFunctionCall","src":"3182:21:22"},"nativeSrc":"3182:21:22","nodeType":"YulExpressionStatement","src":"3182:21:22"},{"nativeSrc":"3212:52:22","nodeType":"YulAssignment","src":"3212:52:22","value":{"arguments":[{"name":"value0","nativeSrc":"3237:6:22","nodeType":"YulIdentifier","src":"3237:6:22"},{"arguments":[{"name":"headStart","nativeSrc":"3249:9:22","nodeType":"YulIdentifier","src":"3249:9:22"},{"kind":"number","nativeSrc":"3260:2:22","nodeType":"YulLiteral","src":"3260:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3245:3:22","nodeType":"YulIdentifier","src":"3245:3:22"},"nativeSrc":"3245:18:22","nodeType":"YulFunctionCall","src":"3245:18:22"}],"functionName":{"name":"abi_encode_bytes","nativeSrc":"3220:16:22","nodeType":"YulIdentifier","src":"3220:16:22"},"nativeSrc":"3220:44:22","nodeType":"YulFunctionCall","src":"3220:44:22"},"variableNames":[{"name":"tail","nativeSrc":"3212:4:22","nodeType":"YulIdentifier","src":"3212:4:22"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"3053:217:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3141:9:22","nodeType":"YulTypedName","src":"3141:9:22","type":""},{"name":"value0","nativeSrc":"3152:6:22","nodeType":"YulTypedName","src":"3152:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3163:4:22","nodeType":"YulTypedName","src":"3163:4:22","type":""}],"src":"3053:217:22"},{"body":{"nativeSrc":"3324:124:22","nodeType":"YulBlock","src":"3324:124:22","statements":[{"nativeSrc":"3334:29:22","nodeType":"YulAssignment","src":"3334:29:22","value":{"arguments":[{"name":"offset","nativeSrc":"3356:6:22","nodeType":"YulIdentifier","src":"3356:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"3343:12:22","nodeType":"YulIdentifier","src":"3343:12:22"},"nativeSrc":"3343:20:22","nodeType":"YulFunctionCall","src":"3343:20:22"},"variableNames":[{"name":"value","nativeSrc":"3334:5:22","nodeType":"YulIdentifier","src":"3334:5:22"}]},{"body":{"nativeSrc":"3426:16:22","nodeType":"YulBlock","src":"3426:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3435:1:22","nodeType":"YulLiteral","src":"3435:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3438:1:22","nodeType":"YulLiteral","src":"3438:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3428:6:22","nodeType":"YulIdentifier","src":"3428:6:22"},"nativeSrc":"3428:12:22","nodeType":"YulFunctionCall","src":"3428:12:22"},"nativeSrc":"3428:12:22","nodeType":"YulExpressionStatement","src":"3428:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3385:5:22","nodeType":"YulIdentifier","src":"3385:5:22"},{"arguments":[{"name":"value","nativeSrc":"3396:5:22","nodeType":"YulIdentifier","src":"3396:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3411:3:22","nodeType":"YulLiteral","src":"3411:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"3416:1:22","nodeType":"YulLiteral","src":"3416:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3407:3:22","nodeType":"YulIdentifier","src":"3407:3:22"},"nativeSrc":"3407:11:22","nodeType":"YulFunctionCall","src":"3407:11:22"},{"kind":"number","nativeSrc":"3420:1:22","nodeType":"YulLiteral","src":"3420:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3403:3:22","nodeType":"YulIdentifier","src":"3403:3:22"},"nativeSrc":"3403:19:22","nodeType":"YulFunctionCall","src":"3403:19:22"}],"functionName":{"name":"and","nativeSrc":"3392:3:22","nodeType":"YulIdentifier","src":"3392:3:22"},"nativeSrc":"3392:31:22","nodeType":"YulFunctionCall","src":"3392:31:22"}],"functionName":{"name":"eq","nativeSrc":"3382:2:22","nodeType":"YulIdentifier","src":"3382:2:22"},"nativeSrc":"3382:42:22","nodeType":"YulFunctionCall","src":"3382:42:22"}],"functionName":{"name":"iszero","nativeSrc":"3375:6:22","nodeType":"YulIdentifier","src":"3375:6:22"},"nativeSrc":"3375:50:22","nodeType":"YulFunctionCall","src":"3375:50:22"},"nativeSrc":"3372:70:22","nodeType":"YulIf","src":"3372:70:22"}]},"name":"abi_decode_address","nativeSrc":"3275:173:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3303:6:22","nodeType":"YulTypedName","src":"3303:6:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3314:5:22","nodeType":"YulTypedName","src":"3314:5:22","type":""}],"src":"3275:173:22"},{"body":{"nativeSrc":"3537:263:22","nodeType":"YulBlock","src":"3537:263:22","statements":[{"body":{"nativeSrc":"3583:16:22","nodeType":"YulBlock","src":"3583:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3592:1:22","nodeType":"YulLiteral","src":"3592:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3595:1:22","nodeType":"YulLiteral","src":"3595:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3585:6:22","nodeType":"YulIdentifier","src":"3585:6:22"},"nativeSrc":"3585:12:22","nodeType":"YulFunctionCall","src":"3585:12:22"},"nativeSrc":"3585:12:22","nodeType":"YulExpressionStatement","src":"3585:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3558:7:22","nodeType":"YulIdentifier","src":"3558:7:22"},{"name":"headStart","nativeSrc":"3567:9:22","nodeType":"YulIdentifier","src":"3567:9:22"}],"functionName":{"name":"sub","nativeSrc":"3554:3:22","nodeType":"YulIdentifier","src":"3554:3:22"},"nativeSrc":"3554:23:22","nodeType":"YulFunctionCall","src":"3554:23:22"},{"kind":"number","nativeSrc":"3579:2:22","nodeType":"YulLiteral","src":"3579:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3550:3:22","nodeType":"YulIdentifier","src":"3550:3:22"},"nativeSrc":"3550:32:22","nodeType":"YulFunctionCall","src":"3550:32:22"},"nativeSrc":"3547:52:22","nodeType":"YulIf","src":"3547:52:22"},{"nativeSrc":"3608:39:22","nodeType":"YulAssignment","src":"3608:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3637:9:22","nodeType":"YulIdentifier","src":"3637:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3618:18:22","nodeType":"YulIdentifier","src":"3618:18:22"},"nativeSrc":"3618:29:22","nodeType":"YulFunctionCall","src":"3618:29:22"},"variableNames":[{"name":"value0","nativeSrc":"3608:6:22","nodeType":"YulIdentifier","src":"3608:6:22"}]},{"nativeSrc":"3656:45:22","nodeType":"YulVariableDeclaration","src":"3656:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3686:9:22","nodeType":"YulIdentifier","src":"3686:9:22"},{"kind":"number","nativeSrc":"3697:2:22","nodeType":"YulLiteral","src":"3697:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3682:3:22","nodeType":"YulIdentifier","src":"3682:3:22"},"nativeSrc":"3682:18:22","nodeType":"YulFunctionCall","src":"3682:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"3669:12:22","nodeType":"YulIdentifier","src":"3669:12:22"},"nativeSrc":"3669:32:22","nodeType":"YulFunctionCall","src":"3669:32:22"},"variables":[{"name":"value","nativeSrc":"3660:5:22","nodeType":"YulTypedName","src":"3660:5:22","type":""}]},{"body":{"nativeSrc":"3754:16:22","nodeType":"YulBlock","src":"3754:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3763:1:22","nodeType":"YulLiteral","src":"3763:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3766:1:22","nodeType":"YulLiteral","src":"3766:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3756:6:22","nodeType":"YulIdentifier","src":"3756:6:22"},"nativeSrc":"3756:12:22","nodeType":"YulFunctionCall","src":"3756:12:22"},"nativeSrc":"3756:12:22","nodeType":"YulExpressionStatement","src":"3756:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3723:5:22","nodeType":"YulIdentifier","src":"3723:5:22"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3744:5:22","nodeType":"YulIdentifier","src":"3744:5:22"}],"functionName":{"name":"iszero","nativeSrc":"3737:6:22","nodeType":"YulIdentifier","src":"3737:6:22"},"nativeSrc":"3737:13:22","nodeType":"YulFunctionCall","src":"3737:13:22"}],"functionName":{"name":"iszero","nativeSrc":"3730:6:22","nodeType":"YulIdentifier","src":"3730:6:22"},"nativeSrc":"3730:21:22","nodeType":"YulFunctionCall","src":"3730:21:22"}],"functionName":{"name":"eq","nativeSrc":"3720:2:22","nodeType":"YulIdentifier","src":"3720:2:22"},"nativeSrc":"3720:32:22","nodeType":"YulFunctionCall","src":"3720:32:22"}],"functionName":{"name":"iszero","nativeSrc":"3713:6:22","nodeType":"YulIdentifier","src":"3713:6:22"},"nativeSrc":"3713:40:22","nodeType":"YulFunctionCall","src":"3713:40:22"},"nativeSrc":"3710:60:22","nodeType":"YulIf","src":"3710:60:22"},{"nativeSrc":"3779:15:22","nodeType":"YulAssignment","src":"3779:15:22","value":{"name":"value","nativeSrc":"3789:5:22","nodeType":"YulIdentifier","src":"3789:5:22"},"variableNames":[{"name":"value1","nativeSrc":"3779:6:22","nodeType":"YulIdentifier","src":"3779:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"3453:347:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3495:9:22","nodeType":"YulTypedName","src":"3495:9:22","type":""},{"name":"dataEnd","nativeSrc":"3506:7:22","nodeType":"YulTypedName","src":"3506:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3518:6:22","nodeType":"YulTypedName","src":"3518:6:22","type":""},{"name":"value1","nativeSrc":"3526:6:22","nodeType":"YulTypedName","src":"3526:6:22","type":""}],"src":"3453:347:22"},{"body":{"nativeSrc":"3926:102:22","nodeType":"YulBlock","src":"3926:102:22","statements":[{"nativeSrc":"3936:26:22","nodeType":"YulAssignment","src":"3936:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"3948:9:22","nodeType":"YulIdentifier","src":"3948:9:22"},{"kind":"number","nativeSrc":"3959:2:22","nodeType":"YulLiteral","src":"3959:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3944:3:22","nodeType":"YulIdentifier","src":"3944:3:22"},"nativeSrc":"3944:18:22","nodeType":"YulFunctionCall","src":"3944:18:22"},"variableNames":[{"name":"tail","nativeSrc":"3936:4:22","nodeType":"YulIdentifier","src":"3936:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3978:9:22","nodeType":"YulIdentifier","src":"3978:9:22"},{"arguments":[{"name":"value0","nativeSrc":"3993:6:22","nodeType":"YulIdentifier","src":"3993:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4009:3:22","nodeType":"YulLiteral","src":"4009:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"4014:1:22","nodeType":"YulLiteral","src":"4014:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4005:3:22","nodeType":"YulIdentifier","src":"4005:3:22"},"nativeSrc":"4005:11:22","nodeType":"YulFunctionCall","src":"4005:11:22"},{"kind":"number","nativeSrc":"4018:1:22","nodeType":"YulLiteral","src":"4018:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4001:3:22","nodeType":"YulIdentifier","src":"4001:3:22"},"nativeSrc":"4001:19:22","nodeType":"YulFunctionCall","src":"4001:19:22"}],"functionName":{"name":"and","nativeSrc":"3989:3:22","nodeType":"YulIdentifier","src":"3989:3:22"},"nativeSrc":"3989:32:22","nodeType":"YulFunctionCall","src":"3989:32:22"}],"functionName":{"name":"mstore","nativeSrc":"3971:6:22","nodeType":"YulIdentifier","src":"3971:6:22"},"nativeSrc":"3971:51:22","nodeType":"YulFunctionCall","src":"3971:51:22"},"nativeSrc":"3971:51:22","nodeType":"YulExpressionStatement","src":"3971:51:22"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$6970__to_t_address__fromStack_reversed","nativeSrc":"3805:223:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3895:9:22","nodeType":"YulTypedName","src":"3895:9:22","type":""},{"name":"value0","nativeSrc":"3906:6:22","nodeType":"YulTypedName","src":"3906:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3917:4:22","nodeType":"YulTypedName","src":"3917:4:22","type":""}],"src":"3805:223:22"},{"body":{"nativeSrc":"4103:116:22","nodeType":"YulBlock","src":"4103:116:22","statements":[{"body":{"nativeSrc":"4149:16:22","nodeType":"YulBlock","src":"4149:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4158:1:22","nodeType":"YulLiteral","src":"4158:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"4161:1:22","nodeType":"YulLiteral","src":"4161:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4151:6:22","nodeType":"YulIdentifier","src":"4151:6:22"},"nativeSrc":"4151:12:22","nodeType":"YulFunctionCall","src":"4151:12:22"},"nativeSrc":"4151:12:22","nodeType":"YulExpressionStatement","src":"4151:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4124:7:22","nodeType":"YulIdentifier","src":"4124:7:22"},{"name":"headStart","nativeSrc":"4133:9:22","nodeType":"YulIdentifier","src":"4133:9:22"}],"functionName":{"name":"sub","nativeSrc":"4120:3:22","nodeType":"YulIdentifier","src":"4120:3:22"},"nativeSrc":"4120:23:22","nodeType":"YulFunctionCall","src":"4120:23:22"},{"kind":"number","nativeSrc":"4145:2:22","nodeType":"YulLiteral","src":"4145:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4116:3:22","nodeType":"YulIdentifier","src":"4116:3:22"},"nativeSrc":"4116:32:22","nodeType":"YulFunctionCall","src":"4116:32:22"},"nativeSrc":"4113:52:22","nodeType":"YulIf","src":"4113:52:22"},{"nativeSrc":"4174:39:22","nodeType":"YulAssignment","src":"4174:39:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4203:9:22","nodeType":"YulIdentifier","src":"4203:9:22"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4184:18:22","nodeType":"YulIdentifier","src":"4184:18:22"},"nativeSrc":"4184:29:22","nodeType":"YulFunctionCall","src":"4184:29:22"},"variableNames":[{"name":"value0","nativeSrc":"4174:6:22","nodeType":"YulIdentifier","src":"4174:6:22"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4033:186:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4069:9:22","nodeType":"YulTypedName","src":"4069:9:22","type":""},{"name":"dataEnd","nativeSrc":"4080:7:22","nodeType":"YulTypedName","src":"4080:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4092:6:22","nodeType":"YulTypedName","src":"4092:6:22","type":""}],"src":"4033:186:22"},{"body":{"nativeSrc":"4319:92:22","nodeType":"YulBlock","src":"4319:92:22","statements":[{"nativeSrc":"4329:26:22","nodeType":"YulAssignment","src":"4329:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4341:9:22","nodeType":"YulIdentifier","src":"4341:9:22"},{"kind":"number","nativeSrc":"4352:2:22","nodeType":"YulLiteral","src":"4352:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4337:3:22","nodeType":"YulIdentifier","src":"4337:3:22"},"nativeSrc":"4337:18:22","nodeType":"YulFunctionCall","src":"4337:18:22"},"variableNames":[{"name":"tail","nativeSrc":"4329:4:22","nodeType":"YulIdentifier","src":"4329:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4371:9:22","nodeType":"YulIdentifier","src":"4371:9:22"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"4396:6:22","nodeType":"YulIdentifier","src":"4396:6:22"}],"functionName":{"name":"iszero","nativeSrc":"4389:6:22","nodeType":"YulIdentifier","src":"4389:6:22"},"nativeSrc":"4389:14:22","nodeType":"YulFunctionCall","src":"4389:14:22"}],"functionName":{"name":"iszero","nativeSrc":"4382:6:22","nodeType":"YulIdentifier","src":"4382:6:22"},"nativeSrc":"4382:22:22","nodeType":"YulFunctionCall","src":"4382:22:22"}],"functionName":{"name":"mstore","nativeSrc":"4364:6:22","nodeType":"YulIdentifier","src":"4364:6:22"},"nativeSrc":"4364:41:22","nodeType":"YulFunctionCall","src":"4364:41:22"},"nativeSrc":"4364:41:22","nodeType":"YulExpressionStatement","src":"4364:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"4224:187:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4288:9:22","nodeType":"YulTypedName","src":"4288:9:22","type":""},{"name":"value0","nativeSrc":"4299:6:22","nodeType":"YulTypedName","src":"4299:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4310:4:22","nodeType":"YulTypedName","src":"4310:4:22","type":""}],"src":"4224:187:22"},{"body":{"nativeSrc":"4517:76:22","nodeType":"YulBlock","src":"4517:76:22","statements":[{"nativeSrc":"4527:26:22","nodeType":"YulAssignment","src":"4527:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4539:9:22","nodeType":"YulIdentifier","src":"4539:9:22"},{"kind":"number","nativeSrc":"4550:2:22","nodeType":"YulLiteral","src":"4550:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4535:3:22","nodeType":"YulIdentifier","src":"4535:3:22"},"nativeSrc":"4535:18:22","nodeType":"YulFunctionCall","src":"4535:18:22"},"variableNames":[{"name":"tail","nativeSrc":"4527:4:22","nodeType":"YulIdentifier","src":"4527:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4569:9:22","nodeType":"YulIdentifier","src":"4569:9:22"},{"name":"value0","nativeSrc":"4580:6:22","nodeType":"YulIdentifier","src":"4580:6:22"}],"functionName":{"name":"mstore","nativeSrc":"4562:6:22","nodeType":"YulIdentifier","src":"4562:6:22"},"nativeSrc":"4562:25:22","nodeType":"YulFunctionCall","src":"4562:25:22"},"nativeSrc":"4562:25:22","nodeType":"YulExpressionStatement","src":"4562:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4416:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4486:9:22","nodeType":"YulTypedName","src":"4486:9:22","type":""},{"name":"value0","nativeSrc":"4497:6:22","nodeType":"YulTypedName","src":"4497:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4508:4:22","nodeType":"YulTypedName","src":"4508:4:22","type":""}],"src":"4416:177:22"},{"body":{"nativeSrc":"4692:427:22","nodeType":"YulBlock","src":"4692:427:22","statements":[{"nativeSrc":"4702:51:22","nodeType":"YulVariableDeclaration","src":"4702:51:22","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"4741:11:22","nodeType":"YulIdentifier","src":"4741:11:22"}],"functionName":{"name":"calldataload","nativeSrc":"4728:12:22","nodeType":"YulIdentifier","src":"4728:12:22"},"nativeSrc":"4728:25:22","nodeType":"YulFunctionCall","src":"4728:25:22"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"4706:18:22","nodeType":"YulTypedName","src":"4706:18:22","type":""}]},{"body":{"nativeSrc":"4842:16:22","nodeType":"YulBlock","src":"4842:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4851:1:22","nodeType":"YulLiteral","src":"4851:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"4854:1:22","nodeType":"YulLiteral","src":"4854:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4844:6:22","nodeType":"YulIdentifier","src":"4844:6:22"},"nativeSrc":"4844:12:22","nodeType":"YulFunctionCall","src":"4844:12:22"},"nativeSrc":"4844:12:22","nodeType":"YulExpressionStatement","src":"4844:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"4776:18:22","nodeType":"YulIdentifier","src":"4776:18:22"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"4804:12:22","nodeType":"YulIdentifier","src":"4804:12:22"},"nativeSrc":"4804:14:22","nodeType":"YulFunctionCall","src":"4804:14:22"},{"name":"base_ref","nativeSrc":"4820:8:22","nodeType":"YulIdentifier","src":"4820:8:22"}],"functionName":{"name":"sub","nativeSrc":"4800:3:22","nodeType":"YulIdentifier","src":"4800:3:22"},"nativeSrc":"4800:29:22","nodeType":"YulFunctionCall","src":"4800:29:22"},{"arguments":[{"kind":"number","nativeSrc":"4835:2:22","nodeType":"YulLiteral","src":"4835:2:22","type":"","value":"30"}],"functionName":{"name":"not","nativeSrc":"4831:3:22","nodeType":"YulIdentifier","src":"4831:3:22"},"nativeSrc":"4831:7:22","nodeType":"YulFunctionCall","src":"4831:7:22"}],"functionName":{"name":"add","nativeSrc":"4796:3:22","nodeType":"YulIdentifier","src":"4796:3:22"},"nativeSrc":"4796:43:22","nodeType":"YulFunctionCall","src":"4796:43:22"}],"functionName":{"name":"slt","nativeSrc":"4772:3:22","nodeType":"YulIdentifier","src":"4772:3:22"},"nativeSrc":"4772:68:22","nodeType":"YulFunctionCall","src":"4772:68:22"}],"functionName":{"name":"iszero","nativeSrc":"4765:6:22","nodeType":"YulIdentifier","src":"4765:6:22"},"nativeSrc":"4765:76:22","nodeType":"YulFunctionCall","src":"4765:76:22"},"nativeSrc":"4762:96:22","nodeType":"YulIf","src":"4762:96:22"},{"nativeSrc":"4867:47:22","nodeType":"YulVariableDeclaration","src":"4867:47:22","value":{"arguments":[{"name":"base_ref","nativeSrc":"4885:8:22","nodeType":"YulIdentifier","src":"4885:8:22"},{"name":"rel_offset_of_tail","nativeSrc":"4895:18:22","nodeType":"YulIdentifier","src":"4895:18:22"}],"functionName":{"name":"add","nativeSrc":"4881:3:22","nodeType":"YulIdentifier","src":"4881:3:22"},"nativeSrc":"4881:33:22","nodeType":"YulFunctionCall","src":"4881:33:22"},"variables":[{"name":"addr_1","nativeSrc":"4871:6:22","nodeType":"YulTypedName","src":"4871:6:22","type":""}]},{"nativeSrc":"4923:30:22","nodeType":"YulAssignment","src":"4923:30:22","value":{"arguments":[{"name":"addr_1","nativeSrc":"4946:6:22","nodeType":"YulIdentifier","src":"4946:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"4933:12:22","nodeType":"YulIdentifier","src":"4933:12:22"},"nativeSrc":"4933:20:22","nodeType":"YulFunctionCall","src":"4933:20:22"},"variableNames":[{"name":"length","nativeSrc":"4923:6:22","nodeType":"YulIdentifier","src":"4923:6:22"}]},{"body":{"nativeSrc":"4996:16:22","nodeType":"YulBlock","src":"4996:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5005:1:22","nodeType":"YulLiteral","src":"5005:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5008:1:22","nodeType":"YulLiteral","src":"5008:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4998:6:22","nodeType":"YulIdentifier","src":"4998:6:22"},"nativeSrc":"4998:12:22","nodeType":"YulFunctionCall","src":"4998:12:22"},"nativeSrc":"4998:12:22","nodeType":"YulExpressionStatement","src":"4998:12:22"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4968:6:22","nodeType":"YulIdentifier","src":"4968:6:22"},{"kind":"number","nativeSrc":"4976:18:22","nodeType":"YulLiteral","src":"4976:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4965:2:22","nodeType":"YulIdentifier","src":"4965:2:22"},"nativeSrc":"4965:30:22","nodeType":"YulFunctionCall","src":"4965:30:22"},"nativeSrc":"4962:50:22","nodeType":"YulIf","src":"4962:50:22"},{"nativeSrc":"5021:25:22","nodeType":"YulAssignment","src":"5021:25:22","value":{"arguments":[{"name":"addr_1","nativeSrc":"5033:6:22","nodeType":"YulIdentifier","src":"5033:6:22"},{"kind":"number","nativeSrc":"5041:4:22","nodeType":"YulLiteral","src":"5041:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5029:3:22","nodeType":"YulIdentifier","src":"5029:3:22"},"nativeSrc":"5029:17:22","nodeType":"YulFunctionCall","src":"5029:17:22"},"variableNames":[{"name":"addr","nativeSrc":"5021:4:22","nodeType":"YulIdentifier","src":"5021:4:22"}]},{"body":{"nativeSrc":"5097:16:22","nodeType":"YulBlock","src":"5097:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5106:1:22","nodeType":"YulLiteral","src":"5106:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"5109:1:22","nodeType":"YulLiteral","src":"5109:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5099:6:22","nodeType":"YulIdentifier","src":"5099:6:22"},"nativeSrc":"5099:12:22","nodeType":"YulFunctionCall","src":"5099:12:22"},"nativeSrc":"5099:12:22","nodeType":"YulExpressionStatement","src":"5099:12:22"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"5062:4:22","nodeType":"YulIdentifier","src":"5062:4:22"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"5072:12:22","nodeType":"YulIdentifier","src":"5072:12:22"},"nativeSrc":"5072:14:22","nodeType":"YulFunctionCall","src":"5072:14:22"},{"name":"length","nativeSrc":"5088:6:22","nodeType":"YulIdentifier","src":"5088:6:22"}],"functionName":{"name":"sub","nativeSrc":"5068:3:22","nodeType":"YulIdentifier","src":"5068:3:22"},"nativeSrc":"5068:27:22","nodeType":"YulFunctionCall","src":"5068:27:22"}],"functionName":{"name":"sgt","nativeSrc":"5058:3:22","nodeType":"YulIdentifier","src":"5058:3:22"},"nativeSrc":"5058:38:22","nodeType":"YulFunctionCall","src":"5058:38:22"},"nativeSrc":"5055:58:22","nodeType":"YulIf","src":"5055:58:22"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nativeSrc":"4598:521:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"4649:8:22","nodeType":"YulTypedName","src":"4649:8:22","type":""},{"name":"ptr_to_tail","nativeSrc":"4659:11:22","nodeType":"YulTypedName","src":"4659:11:22","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"4675:4:22","nodeType":"YulTypedName","src":"4675:4:22","type":""},{"name":"length","nativeSrc":"4681:6:22","nodeType":"YulTypedName","src":"4681:6:22","type":""}],"src":"4598:521:22"},{"body":{"nativeSrc":"5298:179:22","nodeType":"YulBlock","src":"5298:179:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5315:9:22","nodeType":"YulIdentifier","src":"5315:9:22"},{"kind":"number","nativeSrc":"5326:2:22","nodeType":"YulLiteral","src":"5326:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5308:6:22","nodeType":"YulIdentifier","src":"5308:6:22"},"nativeSrc":"5308:21:22","nodeType":"YulFunctionCall","src":"5308:21:22"},"nativeSrc":"5308:21:22","nodeType":"YulExpressionStatement","src":"5308:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5349:9:22","nodeType":"YulIdentifier","src":"5349:9:22"},{"kind":"number","nativeSrc":"5360:2:22","nodeType":"YulLiteral","src":"5360:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5345:3:22","nodeType":"YulIdentifier","src":"5345:3:22"},"nativeSrc":"5345:18:22","nodeType":"YulFunctionCall","src":"5345:18:22"},{"kind":"number","nativeSrc":"5365:2:22","nodeType":"YulLiteral","src":"5365:2:22","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"5338:6:22","nodeType":"YulIdentifier","src":"5338:6:22"},"nativeSrc":"5338:30:22","nodeType":"YulFunctionCall","src":"5338:30:22"},"nativeSrc":"5338:30:22","nodeType":"YulExpressionStatement","src":"5338:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5388:9:22","nodeType":"YulIdentifier","src":"5388:9:22"},{"kind":"number","nativeSrc":"5399:2:22","nodeType":"YulLiteral","src":"5399:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5384:3:22","nodeType":"YulIdentifier","src":"5384:3:22"},"nativeSrc":"5384:18:22","nodeType":"YulFunctionCall","src":"5384:18:22"},{"hexValue":"4141393320696e76616c6964207061796d6173746572416e6444617461","kind":"string","nativeSrc":"5404:31:22","nodeType":"YulLiteral","src":"5404:31:22","type":"","value":"AA93 invalid paymasterAndData"}],"functionName":{"name":"mstore","nativeSrc":"5377:6:22","nodeType":"YulIdentifier","src":"5377:6:22"},"nativeSrc":"5377:59:22","nodeType":"YulFunctionCall","src":"5377:59:22"},"nativeSrc":"5377:59:22","nodeType":"YulExpressionStatement","src":"5377:59:22"},{"nativeSrc":"5445:26:22","nodeType":"YulAssignment","src":"5445:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5457:9:22","nodeType":"YulIdentifier","src":"5457:9:22"},{"kind":"number","nativeSrc":"5468:2:22","nodeType":"YulLiteral","src":"5468:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5453:3:22","nodeType":"YulIdentifier","src":"5453:3:22"},"nativeSrc":"5453:18:22","nodeType":"YulFunctionCall","src":"5453:18:22"},"variableNames":[{"name":"tail","nativeSrc":"5445:4:22","nodeType":"YulIdentifier","src":"5445:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_bed5bf2586bcf71963468f5a6e4def651dfab48dcb520989dbad3d1cd3cd8bdd__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5124:353:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5275:9:22","nodeType":"YulTypedName","src":"5275:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5289:4:22","nodeType":"YulTypedName","src":"5289:4:22","type":""}],"src":"5124:353:22"},{"body":{"nativeSrc":"5656:181:22","nodeType":"YulBlock","src":"5656:181:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5673:9:22","nodeType":"YulIdentifier","src":"5673:9:22"},{"kind":"number","nativeSrc":"5684:2:22","nodeType":"YulLiteral","src":"5684:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5666:6:22","nodeType":"YulIdentifier","src":"5666:6:22"},"nativeSrc":"5666:21:22","nodeType":"YulFunctionCall","src":"5666:21:22"},"nativeSrc":"5666:21:22","nodeType":"YulExpressionStatement","src":"5666:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5707:9:22","nodeType":"YulIdentifier","src":"5707:9:22"},{"kind":"number","nativeSrc":"5718:2:22","nodeType":"YulLiteral","src":"5718:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5703:3:22","nodeType":"YulIdentifier","src":"5703:3:22"},"nativeSrc":"5703:18:22","nodeType":"YulFunctionCall","src":"5703:18:22"},{"kind":"number","nativeSrc":"5723:2:22","nodeType":"YulLiteral","src":"5723:2:22","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"5696:6:22","nodeType":"YulIdentifier","src":"5696:6:22"},"nativeSrc":"5696:30:22","nodeType":"YulFunctionCall","src":"5696:30:22"},"nativeSrc":"5696:30:22","nodeType":"YulExpressionStatement","src":"5696:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5746:9:22","nodeType":"YulIdentifier","src":"5746:9:22"},{"kind":"number","nativeSrc":"5757:2:22","nodeType":"YulLiteral","src":"5757:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5742:3:22","nodeType":"YulIdentifier","src":"5742:3:22"},"nativeSrc":"5742:18:22","nodeType":"YulFunctionCall","src":"5742:18:22"},{"hexValue":"5061796d61737465723a20746172676574206e6f7420737570706f72746564","kind":"string","nativeSrc":"5762:33:22","nodeType":"YulLiteral","src":"5762:33:22","type":"","value":"Paymaster: target not supported"}],"functionName":{"name":"mstore","nativeSrc":"5735:6:22","nodeType":"YulIdentifier","src":"5735:6:22"},"nativeSrc":"5735:61:22","nodeType":"YulFunctionCall","src":"5735:61:22"},"nativeSrc":"5735:61:22","nodeType":"YulExpressionStatement","src":"5735:61:22"},{"nativeSrc":"5805:26:22","nodeType":"YulAssignment","src":"5805:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5817:9:22","nodeType":"YulIdentifier","src":"5817:9:22"},{"kind":"number","nativeSrc":"5828:2:22","nodeType":"YulLiteral","src":"5828:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5813:3:22","nodeType":"YulIdentifier","src":"5813:3:22"},"nativeSrc":"5813:18:22","nodeType":"YulFunctionCall","src":"5813:18:22"},"variableNames":[{"name":"tail","nativeSrc":"5805:4:22","nodeType":"YulIdentifier","src":"5805:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6acf2faee47d8f5f17d2d14a94013a2abe488391abc435b18c87d9d0ab6edfc3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5482:355:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5633:9:22","nodeType":"YulTypedName","src":"5633:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5647:4:22","nodeType":"YulTypedName","src":"5647:4:22","type":""}],"src":"5482:355:22"},{"body":{"nativeSrc":"6016:170:22","nodeType":"YulBlock","src":"6016:170:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6033:9:22","nodeType":"YulIdentifier","src":"6033:9:22"},{"kind":"number","nativeSrc":"6044:2:22","nodeType":"YulLiteral","src":"6044:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6026:6:22","nodeType":"YulIdentifier","src":"6026:6:22"},"nativeSrc":"6026:21:22","nodeType":"YulFunctionCall","src":"6026:21:22"},"nativeSrc":"6026:21:22","nodeType":"YulExpressionStatement","src":"6026:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6067:9:22","nodeType":"YulIdentifier","src":"6067:9:22"},{"kind":"number","nativeSrc":"6078:2:22","nodeType":"YulLiteral","src":"6078:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6063:3:22","nodeType":"YulIdentifier","src":"6063:3:22"},"nativeSrc":"6063:18:22","nodeType":"YulFunctionCall","src":"6063:18:22"},{"kind":"number","nativeSrc":"6083:2:22","nodeType":"YulLiteral","src":"6083:2:22","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"6056:6:22","nodeType":"YulIdentifier","src":"6056:6:22"},"nativeSrc":"6056:30:22","nodeType":"YulFunctionCall","src":"6056:30:22"},"nativeSrc":"6056:30:22","nodeType":"YulExpressionStatement","src":"6056:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6106:9:22","nodeType":"YulIdentifier","src":"6106:9:22"},{"kind":"number","nativeSrc":"6117:2:22","nodeType":"YulLiteral","src":"6117:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6102:3:22","nodeType":"YulIdentifier","src":"6102:3:22"},"nativeSrc":"6102:18:22","nodeType":"YulFunctionCall","src":"6102:18:22"},{"hexValue":"5061796d61737465723a20746f6f206561726c79","kind":"string","nativeSrc":"6122:22:22","nodeType":"YulLiteral","src":"6122:22:22","type":"","value":"Paymaster: too early"}],"functionName":{"name":"mstore","nativeSrc":"6095:6:22","nodeType":"YulIdentifier","src":"6095:6:22"},"nativeSrc":"6095:50:22","nodeType":"YulFunctionCall","src":"6095:50:22"},"nativeSrc":"6095:50:22","nodeType":"YulExpressionStatement","src":"6095:50:22"},{"nativeSrc":"6154:26:22","nodeType":"YulAssignment","src":"6154:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6166:9:22","nodeType":"YulIdentifier","src":"6166:9:22"},{"kind":"number","nativeSrc":"6177:2:22","nodeType":"YulLiteral","src":"6177:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6162:3:22","nodeType":"YulIdentifier","src":"6162:3:22"},"nativeSrc":"6162:18:22","nodeType":"YulFunctionCall","src":"6162:18:22"},"variableNames":[{"name":"tail","nativeSrc":"6154:4:22","nodeType":"YulIdentifier","src":"6154:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_4198d203aba495b14d35609df4e0fab0eed8b12794e2f6b08835d7724c3d50e2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5842:344:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5993:9:22","nodeType":"YulTypedName","src":"5993:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6007:4:22","nodeType":"YulTypedName","src":"6007:4:22","type":""}],"src":"5842:344:22"},{"body":{"nativeSrc":"6365:169:22","nodeType":"YulBlock","src":"6365:169:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6382:9:22","nodeType":"YulIdentifier","src":"6382:9:22"},{"kind":"number","nativeSrc":"6393:2:22","nodeType":"YulLiteral","src":"6393:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6375:6:22","nodeType":"YulIdentifier","src":"6375:6:22"},"nativeSrc":"6375:21:22","nodeType":"YulFunctionCall","src":"6375:21:22"},"nativeSrc":"6375:21:22","nodeType":"YulExpressionStatement","src":"6375:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6416:9:22","nodeType":"YulIdentifier","src":"6416:9:22"},{"kind":"number","nativeSrc":"6427:2:22","nodeType":"YulLiteral","src":"6427:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6412:3:22","nodeType":"YulIdentifier","src":"6412:3:22"},"nativeSrc":"6412:18:22","nodeType":"YulFunctionCall","src":"6412:18:22"},{"kind":"number","nativeSrc":"6432:2:22","nodeType":"YulLiteral","src":"6432:2:22","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"6405:6:22","nodeType":"YulIdentifier","src":"6405:6:22"},"nativeSrc":"6405:30:22","nodeType":"YulFunctionCall","src":"6405:30:22"},"nativeSrc":"6405:30:22","nodeType":"YulExpressionStatement","src":"6405:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6455:9:22","nodeType":"YulIdentifier","src":"6455:9:22"},{"kind":"number","nativeSrc":"6466:2:22","nodeType":"YulLiteral","src":"6466:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6451:3:22","nodeType":"YulIdentifier","src":"6451:3:22"},"nativeSrc":"6451:18:22","nodeType":"YulFunctionCall","src":"6451:18:22"},{"hexValue":"5061796d61737465723a20746f6f206c617465","kind":"string","nativeSrc":"6471:21:22","nodeType":"YulLiteral","src":"6471:21:22","type":"","value":"Paymaster: too late"}],"functionName":{"name":"mstore","nativeSrc":"6444:6:22","nodeType":"YulIdentifier","src":"6444:6:22"},"nativeSrc":"6444:49:22","nodeType":"YulFunctionCall","src":"6444:49:22"},"nativeSrc":"6444:49:22","nodeType":"YulExpressionStatement","src":"6444:49:22"},{"nativeSrc":"6502:26:22","nodeType":"YulAssignment","src":"6502:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"6514:9:22","nodeType":"YulIdentifier","src":"6514:9:22"},{"kind":"number","nativeSrc":"6525:2:22","nodeType":"YulLiteral","src":"6525:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6510:3:22","nodeType":"YulIdentifier","src":"6510:3:22"},"nativeSrc":"6510:18:22","nodeType":"YulFunctionCall","src":"6510:18:22"},"variableNames":[{"name":"tail","nativeSrc":"6502:4:22","nodeType":"YulIdentifier","src":"6502:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_0aeb6dea3fb6ebb3aa45acbc0ba1c2e4c57c479e2534bc1d09a8b61331d0819d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6191:343:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6342:9:22","nodeType":"YulTypedName","src":"6342:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6356:4:22","nodeType":"YulTypedName","src":"6356:4:22","type":""}],"src":"6191:343:22"},{"body":{"nativeSrc":"6766:452:22","nodeType":"YulBlock","src":"6766:452:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6783:3:22","nodeType":"YulIdentifier","src":"6783:3:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6796:2:22","nodeType":"YulLiteral","src":"6796:2:22","type":"","value":"96"},{"name":"value0","nativeSrc":"6800:6:22","nodeType":"YulIdentifier","src":"6800:6:22"}],"functionName":{"name":"shl","nativeSrc":"6792:3:22","nodeType":"YulIdentifier","src":"6792:3:22"},"nativeSrc":"6792:15:22","nodeType":"YulFunctionCall","src":"6792:15:22"},{"arguments":[{"kind":"number","nativeSrc":"6813:26:22","nodeType":"YulLiteral","src":"6813:26:22","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"6809:3:22","nodeType":"YulIdentifier","src":"6809:3:22"},"nativeSrc":"6809:31:22","nodeType":"YulFunctionCall","src":"6809:31:22"}],"functionName":{"name":"and","nativeSrc":"6788:3:22","nodeType":"YulIdentifier","src":"6788:3:22"},"nativeSrc":"6788:53:22","nodeType":"YulFunctionCall","src":"6788:53:22"}],"functionName":{"name":"mstore","nativeSrc":"6776:6:22","nodeType":"YulIdentifier","src":"6776:6:22"},"nativeSrc":"6776:66:22","nodeType":"YulFunctionCall","src":"6776:66:22"},"nativeSrc":"6776:66:22","nodeType":"YulExpressionStatement","src":"6776:66:22"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"6862:3:22","nodeType":"YulIdentifier","src":"6862:3:22"},{"kind":"number","nativeSrc":"6867:2:22","nodeType":"YulLiteral","src":"6867:2:22","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"6858:3:22","nodeType":"YulIdentifier","src":"6858:3:22"},"nativeSrc":"6858:12:22","nodeType":"YulFunctionCall","src":"6858:12:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6880:3:22","nodeType":"YulLiteral","src":"6880:3:22","type":"","value":"128"},{"name":"value1","nativeSrc":"6885:6:22","nodeType":"YulIdentifier","src":"6885:6:22"}],"functionName":{"name":"shl","nativeSrc":"6876:3:22","nodeType":"YulIdentifier","src":"6876:3:22"},"nativeSrc":"6876:16:22","nodeType":"YulFunctionCall","src":"6876:16:22"},{"arguments":[{"kind":"number","nativeSrc":"6898:34:22","nodeType":"YulLiteral","src":"6898:34:22","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"6894:3:22","nodeType":"YulIdentifier","src":"6894:3:22"},"nativeSrc":"6894:39:22","nodeType":"YulFunctionCall","src":"6894:39:22"}],"functionName":{"name":"and","nativeSrc":"6872:3:22","nodeType":"YulIdentifier","src":"6872:3:22"},"nativeSrc":"6872:62:22","nodeType":"YulFunctionCall","src":"6872:62:22"}],"functionName":{"name":"mstore","nativeSrc":"6851:6:22","nodeType":"YulIdentifier","src":"6851:6:22"},"nativeSrc":"6851:84:22","nodeType":"YulFunctionCall","src":"6851:84:22"},"nativeSrc":"6851:84:22","nodeType":"YulExpressionStatement","src":"6851:84:22"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"6955:3:22","nodeType":"YulIdentifier","src":"6955:3:22"},{"kind":"number","nativeSrc":"6960:2:22","nodeType":"YulLiteral","src":"6960:2:22","type":"","value":"36"}],"functionName":{"name":"add","nativeSrc":"6951:3:22","nodeType":"YulIdentifier","src":"6951:3:22"},"nativeSrc":"6951:12:22","nodeType":"YulFunctionCall","src":"6951:12:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6973:3:22","nodeType":"YulLiteral","src":"6973:3:22","type":"","value":"128"},{"name":"value2","nativeSrc":"6978:6:22","nodeType":"YulIdentifier","src":"6978:6:22"}],"functionName":{"name":"shl","nativeSrc":"6969:3:22","nodeType":"YulIdentifier","src":"6969:3:22"},"nativeSrc":"6969:16:22","nodeType":"YulFunctionCall","src":"6969:16:22"},{"arguments":[{"kind":"number","nativeSrc":"6991:34:22","nodeType":"YulLiteral","src":"6991:34:22","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"6987:3:22","nodeType":"YulIdentifier","src":"6987:3:22"},"nativeSrc":"6987:39:22","nodeType":"YulFunctionCall","src":"6987:39:22"}],"functionName":{"name":"and","nativeSrc":"6965:3:22","nodeType":"YulIdentifier","src":"6965:3:22"},"nativeSrc":"6965:62:22","nodeType":"YulFunctionCall","src":"6965:62:22"}],"functionName":{"name":"mstore","nativeSrc":"6944:6:22","nodeType":"YulIdentifier","src":"6944:6:22"},"nativeSrc":"6944:84:22","nodeType":"YulFunctionCall","src":"6944:84:22"},"nativeSrc":"6944:84:22","nodeType":"YulExpressionStatement","src":"6944:84:22"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"7048:3:22","nodeType":"YulIdentifier","src":"7048:3:22"},{"kind":"number","nativeSrc":"7053:2:22","nodeType":"YulLiteral","src":"7053:2:22","type":"","value":"52"}],"functionName":{"name":"add","nativeSrc":"7044:3:22","nodeType":"YulIdentifier","src":"7044:3:22"},"nativeSrc":"7044:12:22","nodeType":"YulFunctionCall","src":"7044:12:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7066:3:22","nodeType":"YulLiteral","src":"7066:3:22","type":"","value":"208"},{"name":"value3","nativeSrc":"7071:6:22","nodeType":"YulIdentifier","src":"7071:6:22"}],"functionName":{"name":"shl","nativeSrc":"7062:3:22","nodeType":"YulIdentifier","src":"7062:3:22"},"nativeSrc":"7062:16:22","nodeType":"YulFunctionCall","src":"7062:16:22"},{"arguments":[{"kind":"number","nativeSrc":"7084:3:22","nodeType":"YulLiteral","src":"7084:3:22","type":"","value":"208"},{"kind":"number","nativeSrc":"7089:14:22","nodeType":"YulLiteral","src":"7089:14:22","type":"","value":"0xffffffffffff"}],"functionName":{"name":"shl","nativeSrc":"7080:3:22","nodeType":"YulIdentifier","src":"7080:3:22"},"nativeSrc":"7080:24:22","nodeType":"YulFunctionCall","src":"7080:24:22"}],"functionName":{"name":"and","nativeSrc":"7058:3:22","nodeType":"YulIdentifier","src":"7058:3:22"},"nativeSrc":"7058:47:22","nodeType":"YulFunctionCall","src":"7058:47:22"}],"functionName":{"name":"mstore","nativeSrc":"7037:6:22","nodeType":"YulIdentifier","src":"7037:6:22"},"nativeSrc":"7037:69:22","nodeType":"YulFunctionCall","src":"7037:69:22"},"nativeSrc":"7037:69:22","nodeType":"YulExpressionStatement","src":"7037:69:22"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"7126:3:22","nodeType":"YulIdentifier","src":"7126:3:22"},{"kind":"number","nativeSrc":"7131:2:22","nodeType":"YulLiteral","src":"7131:2:22","type":"","value":"58"}],"functionName":{"name":"add","nativeSrc":"7122:3:22","nodeType":"YulIdentifier","src":"7122:3:22"},"nativeSrc":"7122:12:22","nodeType":"YulFunctionCall","src":"7122:12:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7144:3:22","nodeType":"YulLiteral","src":"7144:3:22","type":"","value":"208"},{"name":"value4","nativeSrc":"7149:6:22","nodeType":"YulIdentifier","src":"7149:6:22"}],"functionName":{"name":"shl","nativeSrc":"7140:3:22","nodeType":"YulIdentifier","src":"7140:3:22"},"nativeSrc":"7140:16:22","nodeType":"YulFunctionCall","src":"7140:16:22"},{"arguments":[{"kind":"number","nativeSrc":"7162:3:22","nodeType":"YulLiteral","src":"7162:3:22","type":"","value":"208"},{"kind":"number","nativeSrc":"7167:14:22","nodeType":"YulLiteral","src":"7167:14:22","type":"","value":"0xffffffffffff"}],"functionName":{"name":"shl","nativeSrc":"7158:3:22","nodeType":"YulIdentifier","src":"7158:3:22"},"nativeSrc":"7158:24:22","nodeType":"YulFunctionCall","src":"7158:24:22"}],"functionName":{"name":"and","nativeSrc":"7136:3:22","nodeType":"YulIdentifier","src":"7136:3:22"},"nativeSrc":"7136:47:22","nodeType":"YulFunctionCall","src":"7136:47:22"}],"functionName":{"name":"mstore","nativeSrc":"7115:6:22","nodeType":"YulIdentifier","src":"7115:6:22"},"nativeSrc":"7115:69:22","nodeType":"YulFunctionCall","src":"7115:69:22"},"nativeSrc":"7115:69:22","nodeType":"YulExpressionStatement","src":"7115:69:22"},{"nativeSrc":"7193:19:22","nodeType":"YulAssignment","src":"7193:19:22","value":{"arguments":[{"name":"pos","nativeSrc":"7204:3:22","nodeType":"YulIdentifier","src":"7204:3:22"},{"kind":"number","nativeSrc":"7209:2:22","nodeType":"YulLiteral","src":"7209:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7200:3:22","nodeType":"YulIdentifier","src":"7200:3:22"},"nativeSrc":"7200:12:22","nodeType":"YulFunctionCall","src":"7200:12:22"},"variableNames":[{"name":"end","nativeSrc":"7193:3:22","nodeType":"YulIdentifier","src":"7193:3:22"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint128_t_uint128_t_uint48_t_uint48__to_t_address_t_uint128_t_uint128_t_uint48_t_uint48__nonPadded_inplace_fromStack_reversed","nativeSrc":"6539:679:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6710:3:22","nodeType":"YulTypedName","src":"6710:3:22","type":""},{"name":"value4","nativeSrc":"6715:6:22","nodeType":"YulTypedName","src":"6715:6:22","type":""},{"name":"value3","nativeSrc":"6723:6:22","nodeType":"YulTypedName","src":"6723:6:22","type":""},{"name":"value2","nativeSrc":"6731:6:22","nodeType":"YulTypedName","src":"6731:6:22","type":""},{"name":"value1","nativeSrc":"6739:6:22","nodeType":"YulTypedName","src":"6739:6:22","type":""},{"name":"value0","nativeSrc":"6747:6:22","nodeType":"YulTypedName","src":"6747:6:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6758:3:22","nodeType":"YulTypedName","src":"6758:3:22","type":""}],"src":"6539:679:22"},{"body":{"nativeSrc":"7353:201:22","nodeType":"YulBlock","src":"7353:201:22","statements":[{"body":{"nativeSrc":"7391:16:22","nodeType":"YulBlock","src":"7391:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7400:1:22","nodeType":"YulLiteral","src":"7400:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"7403:1:22","nodeType":"YulLiteral","src":"7403:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7393:6:22","nodeType":"YulIdentifier","src":"7393:6:22"},"nativeSrc":"7393:12:22","nodeType":"YulFunctionCall","src":"7393:12:22"},"nativeSrc":"7393:12:22","nodeType":"YulExpressionStatement","src":"7393:12:22"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"7369:10:22","nodeType":"YulIdentifier","src":"7369:10:22"},{"name":"endIndex","nativeSrc":"7381:8:22","nodeType":"YulIdentifier","src":"7381:8:22"}],"functionName":{"name":"gt","nativeSrc":"7366:2:22","nodeType":"YulIdentifier","src":"7366:2:22"},"nativeSrc":"7366:24:22","nodeType":"YulFunctionCall","src":"7366:24:22"},"nativeSrc":"7363:44:22","nodeType":"YulIf","src":"7363:44:22"},{"body":{"nativeSrc":"7440:16:22","nodeType":"YulBlock","src":"7440:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7449:1:22","nodeType":"YulLiteral","src":"7449:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"7452:1:22","nodeType":"YulLiteral","src":"7452:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7442:6:22","nodeType":"YulIdentifier","src":"7442:6:22"},"nativeSrc":"7442:12:22","nodeType":"YulFunctionCall","src":"7442:12:22"},"nativeSrc":"7442:12:22","nodeType":"YulExpressionStatement","src":"7442:12:22"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"7422:8:22","nodeType":"YulIdentifier","src":"7422:8:22"},{"name":"length","nativeSrc":"7432:6:22","nodeType":"YulIdentifier","src":"7432:6:22"}],"functionName":{"name":"gt","nativeSrc":"7419:2:22","nodeType":"YulIdentifier","src":"7419:2:22"},"nativeSrc":"7419:20:22","nodeType":"YulFunctionCall","src":"7419:20:22"},"nativeSrc":"7416:40:22","nodeType":"YulIf","src":"7416:40:22"},{"nativeSrc":"7465:36:22","nodeType":"YulAssignment","src":"7465:36:22","value":{"arguments":[{"name":"offset","nativeSrc":"7482:6:22","nodeType":"YulIdentifier","src":"7482:6:22"},{"name":"startIndex","nativeSrc":"7490:10:22","nodeType":"YulIdentifier","src":"7490:10:22"}],"functionName":{"name":"add","nativeSrc":"7478:3:22","nodeType":"YulIdentifier","src":"7478:3:22"},"nativeSrc":"7478:23:22","nodeType":"YulFunctionCall","src":"7478:23:22"},"variableNames":[{"name":"offsetOut","nativeSrc":"7465:9:22","nodeType":"YulIdentifier","src":"7465:9:22"}]},{"nativeSrc":"7510:38:22","nodeType":"YulAssignment","src":"7510:38:22","value":{"arguments":[{"name":"endIndex","nativeSrc":"7527:8:22","nodeType":"YulIdentifier","src":"7527:8:22"},{"name":"startIndex","nativeSrc":"7537:10:22","nodeType":"YulIdentifier","src":"7537:10:22"}],"functionName":{"name":"sub","nativeSrc":"7523:3:22","nodeType":"YulIdentifier","src":"7523:3:22"},"nativeSrc":"7523:25:22","nodeType":"YulFunctionCall","src":"7523:25:22"},"variableNames":[{"name":"lengthOut","nativeSrc":"7510:9:22","nodeType":"YulIdentifier","src":"7510:9:22"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"7223:331:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7287:6:22","nodeType":"YulTypedName","src":"7287:6:22","type":""},{"name":"length","nativeSrc":"7295:6:22","nodeType":"YulTypedName","src":"7295:6:22","type":""},{"name":"startIndex","nativeSrc":"7303:10:22","nodeType":"YulTypedName","src":"7303:10:22","type":""},{"name":"endIndex","nativeSrc":"7315:8:22","nodeType":"YulTypedName","src":"7315:8:22","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"7328:9:22","nodeType":"YulTypedName","src":"7328:9:22","type":""},{"name":"lengthOut","nativeSrc":"7339:9:22","nodeType":"YulTypedName","src":"7339:9:22","type":""}],"src":"7223:331:22"},{"body":{"nativeSrc":"7660:273:22","nodeType":"YulBlock","src":"7660:273:22","statements":[{"nativeSrc":"7670:29:22","nodeType":"YulVariableDeclaration","src":"7670:29:22","value":{"arguments":[{"name":"array","nativeSrc":"7693:5:22","nodeType":"YulIdentifier","src":"7693:5:22"}],"functionName":{"name":"calldataload","nativeSrc":"7680:12:22","nodeType":"YulIdentifier","src":"7680:12:22"},"nativeSrc":"7680:19:22","nodeType":"YulFunctionCall","src":"7680:19:22"},"variables":[{"name":"_1","nativeSrc":"7674:2:22","nodeType":"YulTypedName","src":"7674:2:22","type":""}]},{"nativeSrc":"7708:49:22","nodeType":"YulAssignment","src":"7708:49:22","value":{"arguments":[{"name":"_1","nativeSrc":"7721:2:22","nodeType":"YulIdentifier","src":"7721:2:22"},{"arguments":[{"kind":"number","nativeSrc":"7729:26:22","nodeType":"YulLiteral","src":"7729:26:22","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"7725:3:22","nodeType":"YulIdentifier","src":"7725:3:22"},"nativeSrc":"7725:31:22","nodeType":"YulFunctionCall","src":"7725:31:22"}],"functionName":{"name":"and","nativeSrc":"7717:3:22","nodeType":"YulIdentifier","src":"7717:3:22"},"nativeSrc":"7717:40:22","nodeType":"YulFunctionCall","src":"7717:40:22"},"variableNames":[{"name":"value","nativeSrc":"7708:5:22","nodeType":"YulIdentifier","src":"7708:5:22"}]},{"body":{"nativeSrc":"7789:138:22","nodeType":"YulBlock","src":"7789:138:22","statements":[{"nativeSrc":"7803:114:22","nodeType":"YulAssignment","src":"7803:114:22","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"7820:2:22","nodeType":"YulIdentifier","src":"7820:2:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7832:1:22","nodeType":"YulLiteral","src":"7832:1:22","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"7839:2:22","nodeType":"YulLiteral","src":"7839:2:22","type":"","value":"20"},{"name":"len","nativeSrc":"7843:3:22","nodeType":"YulIdentifier","src":"7843:3:22"}],"functionName":{"name":"sub","nativeSrc":"7835:3:22","nodeType":"YulIdentifier","src":"7835:3:22"},"nativeSrc":"7835:12:22","nodeType":"YulFunctionCall","src":"7835:12:22"}],"functionName":{"name":"shl","nativeSrc":"7828:3:22","nodeType":"YulIdentifier","src":"7828:3:22"},"nativeSrc":"7828:20:22","nodeType":"YulFunctionCall","src":"7828:20:22"},{"arguments":[{"kind":"number","nativeSrc":"7854:26:22","nodeType":"YulLiteral","src":"7854:26:22","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"7850:3:22","nodeType":"YulIdentifier","src":"7850:3:22"},"nativeSrc":"7850:31:22","nodeType":"YulFunctionCall","src":"7850:31:22"}],"functionName":{"name":"shl","nativeSrc":"7824:3:22","nodeType":"YulIdentifier","src":"7824:3:22"},"nativeSrc":"7824:58:22","nodeType":"YulFunctionCall","src":"7824:58:22"}],"functionName":{"name":"and","nativeSrc":"7816:3:22","nodeType":"YulIdentifier","src":"7816:3:22"},"nativeSrc":"7816:67:22","nodeType":"YulFunctionCall","src":"7816:67:22"},{"arguments":[{"kind":"number","nativeSrc":"7889:26:22","nodeType":"YulLiteral","src":"7889:26:22","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"7885:3:22","nodeType":"YulIdentifier","src":"7885:3:22"},"nativeSrc":"7885:31:22","nodeType":"YulFunctionCall","src":"7885:31:22"}],"functionName":{"name":"and","nativeSrc":"7812:3:22","nodeType":"YulIdentifier","src":"7812:3:22"},"nativeSrc":"7812:105:22","nodeType":"YulFunctionCall","src":"7812:105:22"},"variableNames":[{"name":"value","nativeSrc":"7803:5:22","nodeType":"YulIdentifier","src":"7803:5:22"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"7772:3:22","nodeType":"YulIdentifier","src":"7772:3:22"},{"kind":"number","nativeSrc":"7777:2:22","nodeType":"YulLiteral","src":"7777:2:22","type":"","value":"20"}],"functionName":{"name":"lt","nativeSrc":"7769:2:22","nodeType":"YulIdentifier","src":"7769:2:22"},"nativeSrc":"7769:11:22","nodeType":"YulFunctionCall","src":"7769:11:22"},"nativeSrc":"7766:161:22","nodeType":"YulIf","src":"7766:161:22"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20","nativeSrc":"7559:374:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"7635:5:22","nodeType":"YulTypedName","src":"7635:5:22","type":""},{"name":"len","nativeSrc":"7642:3:22","nodeType":"YulTypedName","src":"7642:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7650:5:22","nodeType":"YulTypedName","src":"7650:5:22","type":""}],"src":"7559:374:22"},{"body":{"nativeSrc":"8039:297:22","nodeType":"YulBlock","src":"8039:297:22","statements":[{"nativeSrc":"8049:29:22","nodeType":"YulVariableDeclaration","src":"8049:29:22","value":{"arguments":[{"name":"array","nativeSrc":"8072:5:22","nodeType":"YulIdentifier","src":"8072:5:22"}],"functionName":{"name":"calldataload","nativeSrc":"8059:12:22","nodeType":"YulIdentifier","src":"8059:12:22"},"nativeSrc":"8059:19:22","nodeType":"YulFunctionCall","src":"8059:19:22"},"variables":[{"name":"_1","nativeSrc":"8053:2:22","nodeType":"YulTypedName","src":"8053:2:22","type":""}]},{"nativeSrc":"8087:57:22","nodeType":"YulAssignment","src":"8087:57:22","value":{"arguments":[{"name":"_1","nativeSrc":"8100:2:22","nodeType":"YulIdentifier","src":"8100:2:22"},{"arguments":[{"kind":"number","nativeSrc":"8108:34:22","nodeType":"YulLiteral","src":"8108:34:22","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"8104:3:22","nodeType":"YulIdentifier","src":"8104:3:22"},"nativeSrc":"8104:39:22","nodeType":"YulFunctionCall","src":"8104:39:22"}],"functionName":{"name":"and","nativeSrc":"8096:3:22","nodeType":"YulIdentifier","src":"8096:3:22"},"nativeSrc":"8096:48:22","nodeType":"YulFunctionCall","src":"8096:48:22"},"variableNames":[{"name":"value","nativeSrc":"8087:5:22","nodeType":"YulIdentifier","src":"8087:5:22"}]},{"body":{"nativeSrc":"8176:154:22","nodeType":"YulBlock","src":"8176:154:22","statements":[{"nativeSrc":"8190:130:22","nodeType":"YulAssignment","src":"8190:130:22","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"8207:2:22","nodeType":"YulIdentifier","src":"8207:2:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8219:1:22","nodeType":"YulLiteral","src":"8219:1:22","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"8226:2:22","nodeType":"YulLiteral","src":"8226:2:22","type":"","value":"16"},{"name":"len","nativeSrc":"8230:3:22","nodeType":"YulIdentifier","src":"8230:3:22"}],"functionName":{"name":"sub","nativeSrc":"8222:3:22","nodeType":"YulIdentifier","src":"8222:3:22"},"nativeSrc":"8222:12:22","nodeType":"YulFunctionCall","src":"8222:12:22"}],"functionName":{"name":"shl","nativeSrc":"8215:3:22","nodeType":"YulIdentifier","src":"8215:3:22"},"nativeSrc":"8215:20:22","nodeType":"YulFunctionCall","src":"8215:20:22"},{"arguments":[{"kind":"number","nativeSrc":"8241:34:22","nodeType":"YulLiteral","src":"8241:34:22","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"8237:3:22","nodeType":"YulIdentifier","src":"8237:3:22"},"nativeSrc":"8237:39:22","nodeType":"YulFunctionCall","src":"8237:39:22"}],"functionName":{"name":"shl","nativeSrc":"8211:3:22","nodeType":"YulIdentifier","src":"8211:3:22"},"nativeSrc":"8211:66:22","nodeType":"YulFunctionCall","src":"8211:66:22"}],"functionName":{"name":"and","nativeSrc":"8203:3:22","nodeType":"YulIdentifier","src":"8203:3:22"},"nativeSrc":"8203:75:22","nodeType":"YulFunctionCall","src":"8203:75:22"},{"arguments":[{"kind":"number","nativeSrc":"8284:34:22","nodeType":"YulLiteral","src":"8284:34:22","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"8280:3:22","nodeType":"YulIdentifier","src":"8280:3:22"},"nativeSrc":"8280:39:22","nodeType":"YulFunctionCall","src":"8280:39:22"}],"functionName":{"name":"and","nativeSrc":"8199:3:22","nodeType":"YulIdentifier","src":"8199:3:22"},"nativeSrc":"8199:121:22","nodeType":"YulFunctionCall","src":"8199:121:22"},"variableNames":[{"name":"value","nativeSrc":"8190:5:22","nodeType":"YulIdentifier","src":"8190:5:22"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"8159:3:22","nodeType":"YulIdentifier","src":"8159:3:22"},{"kind":"number","nativeSrc":"8164:2:22","nodeType":"YulLiteral","src":"8164:2:22","type":"","value":"16"}],"functionName":{"name":"lt","nativeSrc":"8156:2:22","nodeType":"YulIdentifier","src":"8156:2:22"},"nativeSrc":"8156:11:22","nodeType":"YulFunctionCall","src":"8156:11:22"},"nativeSrc":"8153:177:22","nodeType":"YulIf","src":"8153:177:22"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes16","nativeSrc":"7938:398:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"8014:5:22","nodeType":"YulTypedName","src":"8014:5:22","type":""},{"name":"len","nativeSrc":"8021:3:22","nodeType":"YulTypedName","src":"8021:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"8029:5:22","nodeType":"YulTypedName","src":"8029:5:22","type":""}],"src":"7938:398:22"},{"body":{"nativeSrc":"8515:224:22","nodeType":"YulBlock","src":"8515:224:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8532:9:22","nodeType":"YulIdentifier","src":"8532:9:22"},{"kind":"number","nativeSrc":"8543:2:22","nodeType":"YulLiteral","src":"8543:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8525:6:22","nodeType":"YulIdentifier","src":"8525:6:22"},"nativeSrc":"8525:21:22","nodeType":"YulFunctionCall","src":"8525:21:22"},"nativeSrc":"8525:21:22","nodeType":"YulExpressionStatement","src":"8525:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8566:9:22","nodeType":"YulIdentifier","src":"8566:9:22"},{"kind":"number","nativeSrc":"8577:2:22","nodeType":"YulLiteral","src":"8577:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8562:3:22","nodeType":"YulIdentifier","src":"8562:3:22"},"nativeSrc":"8562:18:22","nodeType":"YulFunctionCall","src":"8562:18:22"},{"kind":"number","nativeSrc":"8582:2:22","nodeType":"YulLiteral","src":"8582:2:22","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"8555:6:22","nodeType":"YulIdentifier","src":"8555:6:22"},"nativeSrc":"8555:30:22","nodeType":"YulFunctionCall","src":"8555:30:22"},"nativeSrc":"8555:30:22","nodeType":"YulExpressionStatement","src":"8555:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8605:9:22","nodeType":"YulIdentifier","src":"8605:9:22"},{"kind":"number","nativeSrc":"8616:2:22","nodeType":"YulLiteral","src":"8616:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8601:3:22","nodeType":"YulIdentifier","src":"8601:3:22"},"nativeSrc":"8601:18:22","nodeType":"YulFunctionCall","src":"8601:18:22"},{"hexValue":"5061796d61737465723a20696e76616c69642063616c6c44617461206c656e67","kind":"string","nativeSrc":"8621:34:22","nodeType":"YulLiteral","src":"8621:34:22","type":"","value":"Paymaster: invalid callData leng"}],"functionName":{"name":"mstore","nativeSrc":"8594:6:22","nodeType":"YulIdentifier","src":"8594:6:22"},"nativeSrc":"8594:62:22","nodeType":"YulFunctionCall","src":"8594:62:22"},"nativeSrc":"8594:62:22","nodeType":"YulExpressionStatement","src":"8594:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8676:9:22","nodeType":"YulIdentifier","src":"8676:9:22"},{"kind":"number","nativeSrc":"8687:2:22","nodeType":"YulLiteral","src":"8687:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8672:3:22","nodeType":"YulIdentifier","src":"8672:3:22"},"nativeSrc":"8672:18:22","nodeType":"YulFunctionCall","src":"8672:18:22"},{"hexValue":"7468","kind":"string","nativeSrc":"8692:4:22","nodeType":"YulLiteral","src":"8692:4:22","type":"","value":"th"}],"functionName":{"name":"mstore","nativeSrc":"8665:6:22","nodeType":"YulIdentifier","src":"8665:6:22"},"nativeSrc":"8665:32:22","nodeType":"YulFunctionCall","src":"8665:32:22"},"nativeSrc":"8665:32:22","nodeType":"YulExpressionStatement","src":"8665:32:22"},{"nativeSrc":"8706:27:22","nodeType":"YulAssignment","src":"8706:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"8718:9:22","nodeType":"YulIdentifier","src":"8718:9:22"},{"kind":"number","nativeSrc":"8729:3:22","nodeType":"YulLiteral","src":"8729:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8714:3:22","nodeType":"YulIdentifier","src":"8714:3:22"},"nativeSrc":"8714:19:22","nodeType":"YulFunctionCall","src":"8714:19:22"},"variableNames":[{"name":"tail","nativeSrc":"8706:4:22","nodeType":"YulIdentifier","src":"8706:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_a46ef91c55b9678716a89f861b9adb2dd6f8902ada171d2da0533a3e4362fd32__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8341:398:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8492:9:22","nodeType":"YulTypedName","src":"8492:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8506:4:22","nodeType":"YulTypedName","src":"8506:4:22","type":""}],"src":"8341:398:22"},{"body":{"nativeSrc":"8792:174:22","nodeType":"YulBlock","src":"8792:174:22","statements":[{"nativeSrc":"8802:16:22","nodeType":"YulAssignment","src":"8802:16:22","value":{"arguments":[{"name":"x","nativeSrc":"8813:1:22","nodeType":"YulIdentifier","src":"8813:1:22"},{"name":"y","nativeSrc":"8816:1:22","nodeType":"YulIdentifier","src":"8816:1:22"}],"functionName":{"name":"add","nativeSrc":"8809:3:22","nodeType":"YulIdentifier","src":"8809:3:22"},"nativeSrc":"8809:9:22","nodeType":"YulFunctionCall","src":"8809:9:22"},"variableNames":[{"name":"sum","nativeSrc":"8802:3:22","nodeType":"YulIdentifier","src":"8802:3:22"}]},{"body":{"nativeSrc":"8849:111:22","nodeType":"YulBlock","src":"8849:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8870:1:22","nodeType":"YulLiteral","src":"8870:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"8877:3:22","nodeType":"YulLiteral","src":"8877:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"8882:10:22","nodeType":"YulLiteral","src":"8882:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"8873:3:22","nodeType":"YulIdentifier","src":"8873:3:22"},"nativeSrc":"8873:20:22","nodeType":"YulFunctionCall","src":"8873:20:22"}],"functionName":{"name":"mstore","nativeSrc":"8863:6:22","nodeType":"YulIdentifier","src":"8863:6:22"},"nativeSrc":"8863:31:22","nodeType":"YulFunctionCall","src":"8863:31:22"},"nativeSrc":"8863:31:22","nodeType":"YulExpressionStatement","src":"8863:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8914:1:22","nodeType":"YulLiteral","src":"8914:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"8917:4:22","nodeType":"YulLiteral","src":"8917:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"8907:6:22","nodeType":"YulIdentifier","src":"8907:6:22"},"nativeSrc":"8907:15:22","nodeType":"YulFunctionCall","src":"8907:15:22"},"nativeSrc":"8907:15:22","nodeType":"YulExpressionStatement","src":"8907:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8942:1:22","nodeType":"YulLiteral","src":"8942:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"8945:4:22","nodeType":"YulLiteral","src":"8945:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8935:6:22","nodeType":"YulIdentifier","src":"8935:6:22"},"nativeSrc":"8935:15:22","nodeType":"YulFunctionCall","src":"8935:15:22"},"nativeSrc":"8935:15:22","nodeType":"YulExpressionStatement","src":"8935:15:22"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"8833:1:22","nodeType":"YulIdentifier","src":"8833:1:22"},{"name":"sum","nativeSrc":"8836:3:22","nodeType":"YulIdentifier","src":"8836:3:22"}],"functionName":{"name":"gt","nativeSrc":"8830:2:22","nodeType":"YulIdentifier","src":"8830:2:22"},"nativeSrc":"8830:10:22","nodeType":"YulFunctionCall","src":"8830:10:22"},"nativeSrc":"8827:133:22","nodeType":"YulIf","src":"8827:133:22"}]},"name":"checked_add_t_uint256","nativeSrc":"8744:222:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8775:1:22","nodeType":"YulTypedName","src":"8775:1:22","type":""},{"name":"y","nativeSrc":"8778:1:22","nodeType":"YulTypedName","src":"8778:1:22","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"8784:3:22","nodeType":"YulTypedName","src":"8784:3:22","type":""}],"src":"8744:222:22"},{"body":{"nativeSrc":"9145:178:22","nodeType":"YulBlock","src":"9145:178:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9162:9:22","nodeType":"YulIdentifier","src":"9162:9:22"},{"kind":"number","nativeSrc":"9173:2:22","nodeType":"YulLiteral","src":"9173:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9155:6:22","nodeType":"YulIdentifier","src":"9155:6:22"},"nativeSrc":"9155:21:22","nodeType":"YulFunctionCall","src":"9155:21:22"},"nativeSrc":"9155:21:22","nodeType":"YulExpressionStatement","src":"9155:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9196:9:22","nodeType":"YulIdentifier","src":"9196:9:22"},{"kind":"number","nativeSrc":"9207:2:22","nodeType":"YulLiteral","src":"9207:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9192:3:22","nodeType":"YulIdentifier","src":"9192:3:22"},"nativeSrc":"9192:18:22","nodeType":"YulFunctionCall","src":"9192:18:22"},{"kind":"number","nativeSrc":"9212:2:22","nodeType":"YulLiteral","src":"9212:2:22","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"9185:6:22","nodeType":"YulIdentifier","src":"9185:6:22"},"nativeSrc":"9185:30:22","nodeType":"YulFunctionCall","src":"9185:30:22"},"nativeSrc":"9185:30:22","nodeType":"YulExpressionStatement","src":"9185:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9235:9:22","nodeType":"YulIdentifier","src":"9235:9:22"},{"kind":"number","nativeSrc":"9246:2:22","nodeType":"YulLiteral","src":"9246:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9231:3:22","nodeType":"YulIdentifier","src":"9231:3:22"},"nativeSrc":"9231:18:22","nodeType":"YulFunctionCall","src":"9231:18:22"},{"hexValue":"5061796d61737465723a20696e76616c69642074696d652064617461","kind":"string","nativeSrc":"9251:30:22","nodeType":"YulLiteral","src":"9251:30:22","type":"","value":"Paymaster: invalid time data"}],"functionName":{"name":"mstore","nativeSrc":"9224:6:22","nodeType":"YulIdentifier","src":"9224:6:22"},"nativeSrc":"9224:58:22","nodeType":"YulFunctionCall","src":"9224:58:22"},"nativeSrc":"9224:58:22","nodeType":"YulExpressionStatement","src":"9224:58:22"},{"nativeSrc":"9291:26:22","nodeType":"YulAssignment","src":"9291:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"9303:9:22","nodeType":"YulIdentifier","src":"9303:9:22"},{"kind":"number","nativeSrc":"9314:2:22","nodeType":"YulLiteral","src":"9314:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9299:3:22","nodeType":"YulIdentifier","src":"9299:3:22"},"nativeSrc":"9299:18:22","nodeType":"YulFunctionCall","src":"9299:18:22"},"variableNames":[{"name":"tail","nativeSrc":"9291:4:22","nodeType":"YulIdentifier","src":"9291:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_5a54aa21db6571c1440d4b763d749c53b0d2fc802899ecc9d8c8a51c8d19720f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8971:352:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9122:9:22","nodeType":"YulTypedName","src":"9122:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9136:4:22","nodeType":"YulTypedName","src":"9136:4:22","type":""}],"src":"8971:352:22"},{"body":{"nativeSrc":"9428:250:22","nodeType":"YulBlock","src":"9428:250:22","statements":[{"nativeSrc":"9438:29:22","nodeType":"YulVariableDeclaration","src":"9438:29:22","value":{"arguments":[{"name":"array","nativeSrc":"9461:5:22","nodeType":"YulIdentifier","src":"9461:5:22"}],"functionName":{"name":"calldataload","nativeSrc":"9448:12:22","nodeType":"YulIdentifier","src":"9448:12:22"},"nativeSrc":"9448:19:22","nodeType":"YulFunctionCall","src":"9448:19:22"},"variables":[{"name":"_1","nativeSrc":"9442:2:22","nodeType":"YulTypedName","src":"9442:2:22","type":""}]},{"nativeSrc":"9476:42:22","nodeType":"YulAssignment","src":"9476:42:22","value":{"arguments":[{"name":"_1","nativeSrc":"9489:2:22","nodeType":"YulIdentifier","src":"9489:2:22"},{"arguments":[{"kind":"number","nativeSrc":"9497:3:22","nodeType":"YulLiteral","src":"9497:3:22","type":"","value":"208"},{"kind":"number","nativeSrc":"9502:14:22","nodeType":"YulLiteral","src":"9502:14:22","type":"","value":"0xffffffffffff"}],"functionName":{"name":"shl","nativeSrc":"9493:3:22","nodeType":"YulIdentifier","src":"9493:3:22"},"nativeSrc":"9493:24:22","nodeType":"YulFunctionCall","src":"9493:24:22"}],"functionName":{"name":"and","nativeSrc":"9485:3:22","nodeType":"YulIdentifier","src":"9485:3:22"},"nativeSrc":"9485:33:22","nodeType":"YulFunctionCall","src":"9485:33:22"},"variableNames":[{"name":"value","nativeSrc":"9476:5:22","nodeType":"YulIdentifier","src":"9476:5:22"}]},{"body":{"nativeSrc":"9549:123:22","nodeType":"YulBlock","src":"9549:123:22","statements":[{"nativeSrc":"9563:99:22","nodeType":"YulAssignment","src":"9563:99:22","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"9580:2:22","nodeType":"YulIdentifier","src":"9580:2:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9592:1:22","nodeType":"YulLiteral","src":"9592:1:22","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"9599:1:22","nodeType":"YulLiteral","src":"9599:1:22","type":"","value":"6"},{"name":"len","nativeSrc":"9602:3:22","nodeType":"YulIdentifier","src":"9602:3:22"}],"functionName":{"name":"sub","nativeSrc":"9595:3:22","nodeType":"YulIdentifier","src":"9595:3:22"},"nativeSrc":"9595:11:22","nodeType":"YulFunctionCall","src":"9595:11:22"}],"functionName":{"name":"shl","nativeSrc":"9588:3:22","nodeType":"YulIdentifier","src":"9588:3:22"},"nativeSrc":"9588:19:22","nodeType":"YulFunctionCall","src":"9588:19:22"},{"arguments":[{"kind":"number","nativeSrc":"9613:3:22","nodeType":"YulLiteral","src":"9613:3:22","type":"","value":"208"},{"kind":"number","nativeSrc":"9618:14:22","nodeType":"YulLiteral","src":"9618:14:22","type":"","value":"0xffffffffffff"}],"functionName":{"name":"shl","nativeSrc":"9609:3:22","nodeType":"YulIdentifier","src":"9609:3:22"},"nativeSrc":"9609:24:22","nodeType":"YulFunctionCall","src":"9609:24:22"}],"functionName":{"name":"shl","nativeSrc":"9584:3:22","nodeType":"YulIdentifier","src":"9584:3:22"},"nativeSrc":"9584:50:22","nodeType":"YulFunctionCall","src":"9584:50:22"}],"functionName":{"name":"and","nativeSrc":"9576:3:22","nodeType":"YulIdentifier","src":"9576:3:22"},"nativeSrc":"9576:59:22","nodeType":"YulFunctionCall","src":"9576:59:22"},{"arguments":[{"kind":"number","nativeSrc":"9641:3:22","nodeType":"YulLiteral","src":"9641:3:22","type":"","value":"208"},{"kind":"number","nativeSrc":"9646:14:22","nodeType":"YulLiteral","src":"9646:14:22","type":"","value":"0xffffffffffff"}],"functionName":{"name":"shl","nativeSrc":"9637:3:22","nodeType":"YulIdentifier","src":"9637:3:22"},"nativeSrc":"9637:24:22","nodeType":"YulFunctionCall","src":"9637:24:22"}],"functionName":{"name":"and","nativeSrc":"9572:3:22","nodeType":"YulIdentifier","src":"9572:3:22"},"nativeSrc":"9572:90:22","nodeType":"YulFunctionCall","src":"9572:90:22"},"variableNames":[{"name":"value","nativeSrc":"9563:5:22","nodeType":"YulIdentifier","src":"9563:5:22"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"9533:3:22","nodeType":"YulIdentifier","src":"9533:3:22"},{"kind":"number","nativeSrc":"9538:1:22","nodeType":"YulLiteral","src":"9538:1:22","type":"","value":"6"}],"functionName":{"name":"lt","nativeSrc":"9530:2:22","nodeType":"YulIdentifier","src":"9530:2:22"},"nativeSrc":"9530:10:22","nodeType":"YulFunctionCall","src":"9530:10:22"},"nativeSrc":"9527:145:22","nodeType":"YulIf","src":"9527:145:22"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes6","nativeSrc":"9328:350:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"9403:5:22","nodeType":"YulTypedName","src":"9403:5:22","type":""},{"name":"len","nativeSrc":"9410:3:22","nodeType":"YulTypedName","src":"9410:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9418:5:22","nodeType":"YulTypedName","src":"9418:5:22","type":""}],"src":"9328:350:22"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_struct$_PackedUserOperation_$7171_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 288) { revert(0, 0) }\n        value0 := _1\n        value1 := calldataload(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_bytes(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_enum$_PostOpMode_$6997t_bytes_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_1, 32)\n        value2 := length\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value3 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 96))\n        value4 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_uint48(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint48t_uint48(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        value2 := abi_decode_uint48(add(headStart, 64))\n        value3 := abi_decode_uint48(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$6970__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_t_stringliteral_bed5bf2586bcf71963468f5a6e4def651dfab48dcb520989dbad3d1cd3cd8bdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"AA93 invalid paymasterAndData\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6acf2faee47d8f5f17d2d14a94013a2abe488391abc435b18c87d9d0ab6edfc3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Paymaster: target not supported\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4198d203aba495b14d35609df4e0fab0eed8b12794e2f6b08835d7724c3d50e2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Paymaster: too early\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0aeb6dea3fb6ebb3aa45acbc0ba1c2e4c57c479e2534bc1d09a8b61331d0819d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Paymaster: too late\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint128_t_uint128_t_uint48_t_uint48__to_t_address_t_uint128_t_uint128_t_uint48_t_uint48__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), and(shl(128, value1), not(0xffffffffffffffffffffffffffffffff)))\n        mstore(add(pos, 36), and(shl(128, value2), not(0xffffffffffffffffffffffffffffffff)))\n        mstore(add(pos, 52), and(shl(208, value3), shl(208, 0xffffffffffff)))\n        mstore(add(pos, 58), and(shl(208, value4), shl(208, 0xffffffffffff)))\n        end := add(pos, 64)\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20(array, len) -> value\n    {\n        let _1 := calldataload(array)\n        value := and(_1, not(0xffffffffffffffffffffffff))\n        if lt(len, 20)\n        {\n            value := and(and(_1, shl(shl(3, sub(20, len)), not(0xffffffffffffffffffffffff))), not(0xffffffffffffffffffffffff))\n        }\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes16(array, len) -> value\n    {\n        let _1 := calldataload(array)\n        value := and(_1, not(0xffffffffffffffffffffffffffffffff))\n        if lt(len, 16)\n        {\n            value := and(and(_1, shl(shl(3, sub(16, len)), not(0xffffffffffffffffffffffffffffffff))), not(0xffffffffffffffffffffffffffffffff))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_a46ef91c55b9678716a89f861b9adb2dd6f8902ada171d2da0533a3e4362fd32__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Paymaster: invalid callData leng\")\n        mstore(add(headStart, 96), \"th\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_5a54aa21db6571c1440d4b763d749c53b0d2fc802899ecc9d8c8a51c8d19720f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Paymaster: invalid time data\")\n        tail := add(headStart, 96)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes6(array, len) -> value\n    {\n        let _1 := calldataload(array)\n        value := and(_1, shl(208, 0xffffffffffff))\n        if lt(len, 6)\n        {\n            value := and(and(_1, shl(shl(3, sub(6, len)), shl(208, 0xffffffffffff))), shl(208, 0xffffffffffff))\n        }\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"5612":[{"length":32,"start":513},{"length":32,"start":661}]},"linkReferences":{},"object":"60806040526004361061008f575f3560e01c80638f8780a4116100575780638f8780a414610138578063a19f212f146101d1578063b0d691fe146101f0578063dc69c06f14610223578063f2fde38b14610261575f5ffd5b80631b3ba1011461009357806352b7512c1461009d578063715018a6146100d35780637c627b21146100e75780638da5cb5b14610108575b5f5ffd5b61009b610280565b005b3480156100a8575f5ffd5b506100bc6100b7366004610832565b61032f565b6040516100ca9291906108af565b60405180910390f35b3480156100de575f5ffd5b5061009b610510565b3480156100f2575f5ffd5b5061009b6101013660046108d0565b5050505050565b348015610113575f5ffd5b505f546001600160a01b03165b6040516001600160a01b0390911681526020016100ca565b348015610143575f5ffd5b506101c461015236600461097e565b6040805130606090811b6bffffffffffffffffffffffff19166020830152608096871b6001600160801b031990811660348401529590961b909416604485015260d092831b6001600160d01b031990811660548601529190921b16605a83015280518083038201815292909101905290565b6040516100ca91906109c1565b3480156101dc575f5ffd5b5061009b6101eb3660046109f0565b610523565b3480156101fb575f5ffd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b34801561022e575f5ffd5b5061025161023d366004610a29565b60016020525f908152604090205460ff1681565b60405190151581526020016100ca565b34801561026c575f5ffd5b5061009b61027b366004610a29565b610589565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024015f604051808303818588803b1580156102e0575f5ffd5b505af11580156102f2573d5f5f3e3d5ffd5b50506040513481523393507f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d4749250602001905060405180910390a2565b60605f80808061034a61034560e08a018a610a42565b6105c6565b919450925090506001600160a01b03831630146103ae5760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e644461746100000060448201526064015b60405180910390fd5b5f6103c46103bf60608b018b610a42565b610636565b6001600160a01b0381165f9081526001602052604090205490915060ff1661042e5760405162461bcd60e51b815260206004820152601f60248201527f5061796d61737465723a20746172676574206e6f7420737570706f727465640060448201526064016103a5565b5f8061044561044060e08d018d610a42565b6106b5565b915091508065ffffffffffff164210156104985760405162461bcd60e51b81526020600482015260146024820152735061796d61737465723a20746f6f206561726c7960601b60448201526064016103a5565b8165ffffffffffff164211156104e65760405162461bcd60e51b81526020600482015260136024820152725061796d61737465723a20746f6f206c61746560681b60448201526064016103a5565b6104f15f8383610779565b60408051602081019091525f81529c909b509950505050505050505050565b6105186107b7565b6105215f6107e3565b565b61052b6107b7565b6001600160a01b0382165f81815260016020908152604091829020805460ff191685151590811790915591519182527fe5239967f86bdfebd2052a7d2539a8359f2cdefacfbdeb04bdd72e854c994553910160405180910390a25050565b6105916107b7565b6001600160a01b0381166105ba57604051631e4fbdf760e01b81525f60048201526024016103a5565b6105c3816107e3565b50565b5f80806105d66014828688610a8c565b6105df91610ab3565b60601c6105f0602460148789610a8c565b6105f991610b00565b60801c61060a60346024888a610a8c565b61061391610b00565b9194506fffffffffffffffffffffffffffffffff16925060801c90509250925092565b5f60148210156106935760405162461bcd60e51b815260206004820152602260248201527f5061796d61737465723a20696e76616c69642063616c6c44617461206c656e676044820152610e8d60f31b60648201526084016103a5565b6106a060145f8486610a8c565b6106a991610ab3565b60601c90505b92915050565b5f806106c36034600c610b36565b8310156107125760405162461bcd60e51b815260206004820152601c60248201527f5061796d61737465723a20696e76616c69642074696d6520646174610000000060448201526064016103a5565b83603484610721826006610b36565b9261072e93929190610a8c565b61073791610b55565b60d01c9150838361074a60346006610b36565b906107576034600c610b36565b9261076493929190610a8c565b61076d91610b55565b60d01c90509250929050565b5f609084610787575f61078a565b60015b60ff16901b60ff1660608365ffffffffffff16901b60308565ffffffffffff16901b171790509392505050565b5f546001600160a01b031633146105215760405163118cdaa760e01b81523360048201526024016103a5565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5f5f60608486031215610844575f5ffd5b833567ffffffffffffffff81111561085a575f5ffd5b8401610120818703121561086c575f5ffd5b95602085013595506040909401359392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b604081525f6108c16040830185610881565b90508260208301529392505050565b5f5f5f5f5f608086880312156108e4575f5ffd5b8535600381106108f2575f5ffd5b9450602086013567ffffffffffffffff81111561090d575f5ffd5b8601601f8101881361091d575f5ffd5b803567ffffffffffffffff811115610933575f5ffd5b886020828401011115610944575f5ffd5b959860209190910197509495604081013595606090910135945092505050565b803565ffffffffffff81168114610979575f5ffd5b919050565b5f5f5f5f60808587031215610991575f5ffd5b84359350602085013592506109a860408601610964565b91506109b660608601610964565b905092959194509250565b602081525f6109d36020830184610881565b9392505050565b80356001600160a01b0381168114610979575f5ffd5b5f5f60408385031215610a01575f5ffd5b610a0a836109da565b915060208301358015158114610a1e575f5ffd5b809150509250929050565b5f60208284031215610a39575f5ffd5b6109d3826109da565b5f5f8335601e19843603018112610a57575f5ffd5b83018035915067ffffffffffffffff821115610a71575f5ffd5b602001915036819003821315610a85575f5ffd5b9250929050565b5f5f85851115610a9a575f5ffd5b83861115610aa6575f5ffd5b5050820193919092039150565b80356bffffffffffffffffffffffff198116906014841015610af9576bffffffffffffffffffffffff196bffffffffffffffffffffffff198560140360031b1b82161691505b5092915050565b80356001600160801b03198116906010841015610af9576001600160801b031960109490940360031b84901b1690921692915050565b808201808211156106af57634e487b7160e01b5f52601160045260245ffd5b80356001600160d01b03198116906006841015610af9576001600160d01b031960069490940360031b84901b169092169291505056fea2646970667358221220296eeac24636ea119210f213907b5e4a2be5be9746dacab280f4e9939848aa9a64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F8780A4 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0x8F8780A4 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xA19F212F EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0xDC69C06F EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x261 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1B3BA101 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x52B7512C EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7C627B21 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x108 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9B PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xBC PUSH2 0xB7 CALLDATASIZE PUSH1 0x4 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP3 SWAP2 SWAP1 PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9B PUSH2 0x510 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9B PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x60 SWAP1 DUP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x80 SWAP7 DUP8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x34 DUP5 ADD MSTORE SWAP6 SWAP1 SWAP7 SHL SWAP1 SWAP5 AND PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0xD0 SWAP3 DUP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x54 DUP7 ADD MSTORE SWAP2 SWAP1 SWAP3 SHL AND PUSH1 0x5A DUP4 ADD MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP3 SWAP1 SWAP2 ADD SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x9C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9B PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x120 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9B PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0xA29 JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB760FAF9 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP4 POP PUSH32 0x543BA50A5EEC5E6178218E364B1D0F396157B3C8FA278522C2CB7FD99407D474 SWAP3 POP PUSH1 0x20 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP1 DUP1 PUSH2 0x34A PUSH2 0x345 PUSH1 0xE0 DUP11 ADD DUP11 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x5C6 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ PUSH2 0x3AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4141393320696E76616C6964207061796D6173746572416E6444617461000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3C4 PUSH2 0x3BF PUSH1 0x60 DUP12 ADD DUP12 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x42E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D61737465723A20746172676574206E6F7420737570706F7274656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x445 PUSH2 0x440 PUSH1 0xE0 DUP14 ADD DUP14 PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP1 PUSH6 0xFFFFFFFFFFFF AND TIMESTAMP LT ISZERO PUSH2 0x498 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5061796D61737465723A20746F6F206561726C79 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST DUP2 PUSH6 0xFFFFFFFFFFFF AND TIMESTAMP GT ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x5061796D61737465723A20746F6F206C617465 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x4F1 PUSH0 DUP4 DUP4 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP13 SWAP1 SWAP12 POP SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x518 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x521 PUSH0 PUSH2 0x7E3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x52B PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xE5239967F86BDFEBD2052A7D2539A8359F2CDEFACFBDEB04BDD72E854C994553 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x591 PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x5C3 DUP2 PUSH2 0x7E3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH2 0x5D6 PUSH1 0x14 DUP3 DUP7 DUP9 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x5DF SWAP2 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x60 SHR PUSH2 0x5F0 PUSH1 0x24 PUSH1 0x14 DUP8 DUP10 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x5F9 SWAP2 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x80 SHR PUSH2 0x60A PUSH1 0x34 PUSH1 0x24 DUP9 DUP11 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x613 SWAP2 PUSH2 0xB00 JUMP JUMPDEST SWAP2 SWAP5 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x80 SHR SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x14 DUP3 LT ISZERO PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D61737465723A20696E76616C69642063616C6C44617461206C656E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xE8D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH2 0x6A0 PUSH1 0x14 PUSH0 DUP5 DUP7 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x6A9 SWAP2 PUSH2 0xAB3 JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6C3 PUSH1 0x34 PUSH1 0xC PUSH2 0xB36 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D61737465723A20696E76616C69642074696D65206461746100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A5 JUMP JUMPDEST DUP4 PUSH1 0x34 DUP5 PUSH2 0x721 DUP3 PUSH1 0x6 PUSH2 0xB36 JUMP JUMPDEST SWAP3 PUSH2 0x72E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x737 SWAP2 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0xD0 SHR SWAP2 POP DUP4 DUP4 PUSH2 0x74A PUSH1 0x34 PUSH1 0x6 PUSH2 0xB36 JUMP JUMPDEST SWAP1 PUSH2 0x757 PUSH1 0x34 PUSH1 0xC PUSH2 0xB36 JUMP JUMPDEST SWAP3 PUSH2 0x764 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA8C JUMP JUMPDEST PUSH2 0x76D SWAP2 PUSH2 0xB55 JUMP JUMPDEST PUSH1 0xD0 SHR SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x90 DUP5 PUSH2 0x787 JUMPI PUSH0 PUSH2 0x78A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP1 SHL PUSH1 0xFF AND PUSH1 0x60 DUP4 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL PUSH1 0x30 DUP6 PUSH6 0xFFFFFFFFFFFF AND SWAP1 SHL OR OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x521 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3A5 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x844 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x85A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x86C JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x8C1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x881 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x8E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x8F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x90D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x91D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x933 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x944 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP6 SWAP9 PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP8 POP SWAP5 SWAP6 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP6 PUSH1 0x60 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x979 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x991 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x9A8 PUSH1 0x40 DUP7 ADD PUSH2 0x964 JUMP JUMPDEST SWAP2 POP PUSH2 0x9B6 PUSH1 0x60 DUP7 ADD PUSH2 0x964 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x9D3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x881 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x979 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA01 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xA0A DUP4 PUSH2 0x9DA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA1E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA39 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D3 DUP3 PUSH2 0x9DA JUMP JUMPDEST PUSH0 PUSH0 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xA57 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA71 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xA85 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP6 DUP6 GT ISZERO PUSH2 0xA9A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0xAA6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND SWAP1 PUSH1 0x14 DUP5 LT ISZERO PUSH2 0xAF9 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP6 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP3 AND AND SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT DUP2 AND SWAP1 PUSH1 0x10 DUP5 LT ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB NOT PUSH1 0x10 SWAP5 SWAP1 SWAP5 SUB PUSH1 0x3 SHL DUP5 SWAP1 SHL AND SWAP1 SWAP3 AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6AF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT DUP2 AND SWAP1 PUSH1 0x6 DUP5 LT ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xD0 SHL SUB NOT PUSH1 0x6 SWAP5 SWAP1 SWAP5 SUB PUSH1 0x3 SHL DUP5 SWAP1 SHL AND SWAP1 SWAP3 AND SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH15 0xEAC24636EA119210F213907B5E4A2B 0xE5 0xBE SWAP8 CHAINID 0xDA 0xCA 0xB2 DUP1 DELEGATECALL 0xE9 SWAP4 SWAP9 BASEFEE 0xAA SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"246:5333:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1297:170;;;:::i;:::-;;1567:1427;;;;;;;;;;-1:-1:-1;1567:1427:9;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;3112:352:9:-;;;;;;;;;;-1:-1:-1;3112:352:9;;;;;:::i;:::-;;;;;;;1638:85:0;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;2341:32:22;;;2323:51;;2311:2;2296:18;1638:85:0;2177:203:22;4946:631:9;;;;;;;;;;-1:-1:-1;4946:631:9;;;;;:::i;:::-;5162:408;;;5200:4;5131:12;6792:15:22;;;-1:-1:-1;;6788:53:22;5162:408:9;;;6776:66:22;6880:3;6876:16;;;-1:-1:-1;;;;;;6872:62:22;;;6858:12;;;6851:84;6969:16;;;;6965:62;;;6951:12;;;6944:84;7084:3;7062:16;;;-1:-1:-1;;;;;;7058:47:22;;;7044:12;;;7037:69;7140:16;;;;7136:47;7122:12;;;7115:69;5162:408:9;;;;;;;;;7200:12:22;;;;5162:408:9;;;4946:631;;;;;;;;:::i;1013:186::-;;;;;;;;;;-1:-1:-1;1013:186:9;;;;;:::i;:::-;;:::i;347:39::-;;;;;;;;;;;;;;;453:48;;;;;;;;;;-1:-1:-1;453:48:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4389:14:22;;4382:22;4364:41;;4352:2;4337:18;453:48:9;4224:187:22;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1297:170:9:-;1355:53;;-1:-1:-1;;;1355:53:9;;1402:4;1355:53;;;2323:51:22;1355:10:9;-1:-1:-1;;;;;1355:20:9;;;;1383:9;;2296:18:22;;1355:53:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1423:37:9;;1450:9;4562:25:22;;1438:10:9;;-1:-1:-1;1423:37:9;;-1:-1:-1;4550:2:22;4535:18;;-1:-1:-1;1423:37:9;;;;;;;1297:170::o;1567:1427::-;1748:20;1770:22;;;;1949:69;1994:23;;;;:6;:23;:::i;:::-;1949:44;:69::i;:::-;1862:156;;-1:-1:-1;1862:156:9;-1:-1:-1;1862:156:9;-1:-1:-1;;;;;;2098:26:9;;2119:4;2098:26;2090:68;;;;-1:-1:-1;;;2090:68:9;;5326:2:22;2090:68:9;;;5308:21:22;5365:2;5345:18;;;5338:30;5404:31;5384:18;;;5377:59;5453:18;;2090:68:9;;;;;;;;;2250:14;2267:43;2294:15;;;;:6;:15;:::i;:::-;2267:26;:43::i;:::-;-1:-1:-1;;;;;2377:24:9;;;;;;:16;:24;;;;;;2250:60;;-1:-1:-1;2377:24:9;;2369:68;;;;-1:-1:-1;;;2369:68:9;;5684:2:22;2369:68:9;;;5666:21:22;5723:2;5703:18;;;5696:30;5762:33;5742:18;;;5735:61;5813:18;;2369:68:9;5482:355:22;2369:68:9;2511:17;;2551:47;2574:23;;;;:6;:23;:::i;:::-;2551:22;:47::i;:::-;2510:88;;;;2667:10;2648:29;;:15;:29;;2640:62;;;;-1:-1:-1;;;2640:62:9;;6044:2:22;2640:62:9;;;6026:21:22;6083:2;6063:18;;;6056:30;-1:-1:-1;;;6102:18:22;;;6095:50;6162:18;;2640:62:9;5842:344:22;2640:62:9;2739:10;2720:29;;:15;:29;;2712:61;;;;-1:-1:-1;;;2712:61:9;;6393:2:22;2712:61:9;;;6375:21:22;6432:2;6412:18;;;6405:30;-1:-1:-1;;;6451:18:22;;;6444:49;6510:18;;2712:61:9;6191:343:22;2712:61:9;2841:50;2861:5;2868:10;2880;2841:19;:50::i;:::-;2960:27;;;;;;;;;-1:-1:-1;2960:27:9;;;2824:67;;-1:-1:-1;1567:1427:9;-1:-1:-1;;;;;;;;;;1567:1427:9:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1013:186:9:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1102:24:9;::::1;;::::0;;;:16:::1;:24;::::0;;;;;;;;:36;;-1:-1:-1;;1102:36:9::1;::::0;::::1;;::::0;;::::1;::::0;;;1153:39;;4364:41:22;;;1153:39:9::1;::::0;4337:18:22;1153:39:9::1;;;;;;;1013:186:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2323:51:22::0;2296:18;;2672:31:0::1;2177:203:22::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;4101:507:12:-;4208:17;;;4326:51;368:2;4208:17;4326:16;;:51;:::i;:::-;4318:60;;;:::i;:::-;4310:69;;4409:79;430:2;368;4409:16;;:79;:::i;:::-;4401:88;;;:::i;:::-;4393:97;;4520:69;486:2;430;4520:16;;:69;:::i;:::-;4512:78;;;:::i;:::-;4289:312;;-1:-1:-1;4289:312:12;;;-1:-1:-1;4504:87:12;;;-1:-1:-1;4101:507:12;;;;;:::o;3625:227:9:-;3709:7;3755:2;3736:21;;;3728:68;;;;-1:-1:-1;;;3728:68:9;;8543:2:22;3728:68:9;;;8525:21:22;8582:2;8562:18;;;8555:30;8621:34;8601:18;;;8594:62;-1:-1:-1;;;8672:18:22;;;8665:32;8714:19;;3728:68:9;8341:398:22;3728:68:9;3829:14;3840:2;3838:1;3829:8;;:14;:::i;:::-;3821:23;;;:::i;:::-;3813:32;;3806:39;;3625:227;;;;;:::o;4015:544::-;4103:17;;4186:43;486:2:12;4227::9;4186:43;:::i;:::-;4159:70;;;4151:111;;;;-1:-1:-1;;;4151:111:9;;9173:2:22;4151:111:9;;;9155:21:22;9212:2;9192:18;;;9185:30;9251;9231:18;;;9224:58;9299:18;;4151:111:9;8971:352:22;4151:111:9;4308:16;486:2:12;4308:16:9;4364:42;486:2:12;4405:1:9;4364:42;:::i;:::-;4308:99;;;;;;;:::i;:::-;4301:107;;;:::i;:::-;4294:115;;;-1:-1:-1;4446:16:9;;4463:42;486:2:12;4504:1:9;4463:42;:::i;:::-;4446:104;4506:43;486:2:12;4547::9;4506:43;:::i;:::-;4446:104;;;;;;;:::i;:::-;4439:112;;;:::i;:::-;4432:120;;4419:133;;4015:544;;;;;:::o;4646:221::-;4752:7;4857:3;4835:9;:17;;4851:1;4835:17;;;4847:1;4835:17;4834:26;;;;4778:82;;4829:2;4814:10;4806:19;;:25;;4801:2;4786:10;4778:19;;:25;;:53;:82;4771:89;;4646:221;;;;;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;2323:51:22;2296:18;;1901:40:0;2177:203:22;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:581:22:-;130:6;138;146;199:2;187:9;178:7;174:23;170:32;167:52;;;215:1;212;205:12;167:52;255:9;242:23;288:18;280:6;277:30;274:50;;;320:1;317;310:12;274:50;343:22;;399:3;381:16;;;377:26;374:46;;;416:1;413;406:12;374:46;439:2;488;473:18;;460:32;;-1:-1:-1;561:2:22;546:18;;;533:32;;14:581;-1:-1:-1;;;14:581:22:o;600:288::-;641:3;679:5;673:12;706:6;701:3;694:19;762:6;755:4;748:5;744:16;737:4;732:3;728:14;722:47;814:1;807:4;798:6;793:3;789:16;785:27;778:38;877:4;870:2;866:7;861:2;853:6;849:15;845:29;840:3;836:39;832:50;825:57;;;600:288;;;;:::o;893:::-;1068:2;1057:9;1050:21;1031:4;1088:44;1128:2;1117:9;1113:18;1105:6;1088:44;:::i;:::-;1080:52;;1168:6;1163:2;1152:9;1148:18;1141:34;893:288;;;;;:::o;1186:986::-;1298:6;1306;1314;1322;1330;1383:3;1371:9;1362:7;1358:23;1354:33;1351:53;;;1400:1;1397;1390:12;1351:53;1439:9;1426:23;1478:1;1471:5;1468:12;1458:40;;1494:1;1491;1484:12;1458:40;1517:5;-1:-1:-1;1573:2:22;1558:18;;1545:32;1600:18;1589:30;;1586:50;;;1632:1;1629;1622:12;1586:50;1655:22;;1708:4;1700:13;;1696:27;-1:-1:-1;1686:55:22;;1737:1;1734;1727:12;1686:55;1777:2;1764:16;1803:18;1795:6;1792:30;1789:50;;;1835:1;1832;1825:12;1789:50;1880:7;1875:2;1866:6;1862:2;1858:15;1854:24;1851:37;1848:57;;;1901:1;1898;1891:12;1848:57;1186:986;;1932:2;1924:11;;;;;-1:-1:-1;1954:6:22;;2033:2;2018:18;;2005:32;;2136:2;2121:18;;;2108:32;;-1:-1:-1;1186:986:22;-1:-1:-1;;;1186:986:22:o;2385:167::-;2452:20;;2512:14;2501:26;;2491:37;;2481:65;;2542:1;2539;2532:12;2481:65;2385:167;;;:::o;2557:491::-;2641:6;2649;2657;2665;2718:3;2706:9;2697:7;2693:23;2689:33;2686:53;;;2735:1;2732;2725:12;2686:53;2780:23;;;-1:-1:-1;2900:2:22;2885:18;;2872:32;;-1:-1:-1;2949:37:22;2982:2;2967:18;;2949:37;:::i;:::-;2939:47;;3005:37;3038:2;3027:9;3023:18;3005:37;:::i;:::-;2995:47;;2557:491;;;;;;;:::o;3053:217::-;3200:2;3189:9;3182:21;3163:4;3220:44;3260:2;3249:9;3245:18;3237:6;3220:44;:::i;:::-;3212:52;3053:217;-1:-1:-1;;;3053:217:22:o;3275:173::-;3343:20;;-1:-1:-1;;;;;3392:31:22;;3382:42;;3372:70;;3438:1;3435;3428:12;3453:347;3518:6;3526;3579:2;3567:9;3558:7;3554:23;3550:32;3547:52;;;3595:1;3592;3585:12;3547:52;3618:29;3637:9;3618:29;:::i;:::-;3608:39;;3697:2;3686:9;3682:18;3669:32;3744:5;3737:13;3730:21;3723:5;3720:32;3710:60;;3766:1;3763;3756:12;3710:60;3789:5;3779:15;;;3453:347;;;;;:::o;4033:186::-;4092:6;4145:2;4133:9;4124:7;4120:23;4116:32;4113:52;;;4161:1;4158;4151:12;4113:52;4184:29;4203:9;4184:29;:::i;4598:521::-;4675:4;4681:6;4741:11;4728:25;4835:2;4831:7;4820:8;4804:14;4800:29;4796:43;4776:18;4772:68;4762:96;;4854:1;4851;4844:12;4762:96;4881:33;;4933:20;;;-1:-1:-1;4976:18:22;4965:30;;4962:50;;;5008:1;5005;4998:12;4962:50;5041:4;5029:17;;-1:-1:-1;5072:14:22;5068:27;;;5058:38;;5055:58;;;5109:1;5106;5099:12;5055:58;4598:521;;;;;:::o;7223:331::-;7328:9;7339;7381:8;7369:10;7366:24;7363:44;;;7403:1;7400;7393:12;7363:44;7432:6;7422:8;7419:20;7416:40;;;7452:1;7449;7442:12;7416:40;-1:-1:-1;;7478:23:22;;;7523:25;;;;;-1:-1:-1;7223:331:22:o;7559:374::-;7680:19;;-1:-1:-1;;7717:40:22;;;7777:2;7769:11;;7766:161;;;7889:26;7885:31;7854:26;7850:31;7843:3;7839:2;7835:12;7832:1;7828:20;7824:58;7820:2;7816:67;7812:105;7803:114;;7766:161;;7559:374;;;;:::o;7938:398::-;8059:19;;-1:-1:-1;;;;;;8096:48:22;;;8164:2;8156:11;;8153:177;;;-1:-1:-1;;;;;;8226:2:22;8222:12;;;;8219:1;8215:20;8211:66;;;8203:75;8199:121;;;;7938:398;-1:-1:-1;;7938:398:22:o;8744:222::-;8809:9;;;8830:10;;;8827:133;;;8882:10;8877:3;8873:20;8870:1;8863:31;8917:4;8914:1;8907:15;8945:4;8942:1;8935:15;9328:350;9448:19;;-1:-1:-1;;;;;;9485:33:22;;;9538:1;9530:10;;9527:145;;;-1:-1:-1;;;;;;9599:1:22;9595:11;;;;9592:1;9588:19;9584:50;;;9576:59;9572:90;;;;9328:350;-1:-1:-1;;9328:350:22:o"},"methodIdentifiers":{"createPaymasterAndData(uint256,uint256,uint48,uint48)":"8f8780a4","depositToEntryPoint()":"1b3ba101","entryPoint()":"b0d691fe","owner()":"8da5cb5b","postOp(uint8,bytes,uint256,uint256)":"7c627b21","renounceOwnership()":"715018a6","setSupportedTarget(address,bool)":"a19f212f","supportedTargets(address)":"dc69c06f","transferOwnership(address)":"f2fde38b","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidPaymasterAndDataLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimestamp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedTarget\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"name\":\"TargetSupportChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"postOpGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"}],\"name\":\"createPaymasterAndData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositToEntryPoint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"name\":\"setSupportedTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportedTargets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"createPaymasterAndData(uint256,uint256,uint48,uint48)\":{\"details\":\"Create paymasterAndData for a UserOperation.\"},\"depositToEntryPoint()\":{\"details\":\"Deposits funds into the EntryPoint on behalf of this Paymaster.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"details\":\"The function that the EntryPoint calls after the execution to charge the Paymaster.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setSupportedTarget(address,bool)\":{\"details\":\"Sets whether a target contract is supported for gas sponsorship.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Validates a UserOperation to determine if it should be sponsored.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Paymaster.sol\":\"Paymaster\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Paymaster.sol\":{\"keccak256\":\"0xfaaac66e374ee432286c981a5ea352c45327cc804d69d75756fd75ca4c0b7f5c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ada9511f2823f8e345ef97a3c8a0f2b11b2091fc8a10427825e08ea9ddc830d8\",\"dweb:/ipfs/QmUCaxiLrdU9fHPUaj54F2MyApV7TMiEFYjVBXDJkDWeTC\"]},\"contracts/lib/core/Helpers.sol\":{\"keccak256\":\"0xb310f29da120341cb703a591bc0c94ae2329d391eeb18cf3b9679bbc45da0ece\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://193e652b6cac47388261f61f66f722363b8454c3f884cc2b6d113665f939e0a4\",\"dweb:/ipfs/QmfYJGvTcWGqQipV3cSdxWb5Yuf5UCXMY6QqgLpAsrmQsr\"]},\"contracts/lib/core/UserOperationLib.sol\":{\"keccak256\":\"0x2d3450fa3906422b6fdbbe7f2a2a9e36d6f3751bfa9cd80af88befd6a5be78c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a0ef5295d7f2016e99d2c228958f7f6de94f5bd9652d8696af15af0094a99\",\"dweb:/ipfs/QmVg4fhkZbUB7AopGcaVPmTdvChq7W9ga8fjrc3XaJNTM2\"]},\"contracts/lib/interfaces/IAggregator.sol\":{\"keccak256\":\"0xd59862223f3f946ae2f27aeb21dcefd5871c2033082ab8bee00991bf5adc2ec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2089752bdb69c637606a251d74fdd1f6c86c8004eb20b1017f3aed8817bdbb9\",\"dweb:/ipfs/QmTvCNxn4VFWQGvsKR3jJmEoAkaAnkkBoZUUasqvdQF2pS\"]},\"contracts/lib/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x17386db872e43c625a5b448bba2f8bab23fac44c24d6816d5131c5b6614d4159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b3c7d099969eae9a3f9a9da40d0a253eb322e9c9900ba61e60fb4403b65c3f3\",\"dweb:/ipfs/QmcBxjUmpJocTnWc5ivgvPFACANX651CAz9LjJNcWkCagz\"]},\"contracts/lib/interfaces/INonceManager.sol\":{\"keccak256\":\"0x36d3c27fd64c5ba333ac7ae1f02c4a63411a0413c9073277b135a6e5a29ba88e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://910710c795e905859cbc0a794a6579b53f3de65de034040f084e78cf4c8174f0\",\"dweb:/ipfs/QmcDRaqpMQgpB5APn28xa98Z5wuKHMauwCvbtTxzN7oAJm\"]},\"contracts/lib/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x748fb07cf606d8630853f02b62c52629f11bc38cb4bd2efa7952ff016e2ae9f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4c24e5cae9966f8bede50b1d79f8a8261ad74dc3e5a1bf1f945ff13eb1277d1\",\"dweb:/ipfs/QmeFDsZDganXpQyc39HYtUkdS3XsuxfegteXqMKA6FZ5uL\"]},\"contracts/lib/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0xffc5e46332115ebdada7a8bc8ff9e321ae43ab6258d7e8d7565658b402f32bcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383abd8dc9fcbb1552a3fc8c27474009ecc0a6a890384b1b9da0eb4da7c4cd1a\",\"dweb:/ipfs/QmWR1o5rAqFMXbn1gCUDTa7LB7tEjXjt6HFGK1VrVNU8At\"]},\"contracts/lib/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x9c10ab71a97344d2b8d0469aeac476d69fb2ae50e65c1a548e34ca482c452d6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7d60e99b6f6311a558bf17778dfb8cfa1a287c85fce61c8fdf1b15e3f99939\",\"dweb:/ipfs/QmRX4E2kayv2fYASCGmUAc3MhUsv9hLjM7MQ5LSfaK4hpz\"]},\"contracts/lib/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xe2f47d598c66f1b9e619ff73f768f677bc4244e8a3d3441742a7a5188a3b4053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5159ad9e8ce8642cafd4f3cd77e522036f30478066604eadd11b344f0959029\",\"dweb:/ipfs/QmUXNkJ3bQSCXUqrGKpnnJipywJA1XDgYi6WGrVzznqRzH\"]}},\"version\":1}"}},"contracts/TestAccount.sol":{"TestAccount":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"},{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IEntryPoint","name":"entryPoint","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"AccountInitialized","type":"event"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"}],"name":"executeUserOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_6036":{"entryPoint":null,"id":6036,"parameterSlots":2,"returnSlots":0},"abi_decode_tuple_t_contract$_IEntryPoint_$6970t_address_fromMemory":{"entryPoint":152,"id":null,"parameterSlots":2,"returnSlots":2},"validator_revert_contract_IEntryPoint":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:596:22","nodeType":"YulBlock","src":"0:596:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"72:86:22","nodeType":"YulBlock","src":"72:86:22","statements":[{"body":{"nativeSrc":"136:16:22","nodeType":"YulBlock","src":"136:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"145:1:22","nodeType":"YulLiteral","src":"145:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"148:1:22","nodeType":"YulLiteral","src":"148:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"138:6:22","nodeType":"YulIdentifier","src":"138:6:22"},"nativeSrc":"138:12:22","nodeType":"YulFunctionCall","src":"138:12:22"},"nativeSrc":"138:12:22","nodeType":"YulExpressionStatement","src":"138:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"95:5:22","nodeType":"YulIdentifier","src":"95:5:22"},{"arguments":[{"name":"value","nativeSrc":"106:5:22","nodeType":"YulIdentifier","src":"106:5:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"121:3:22","nodeType":"YulLiteral","src":"121:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"126:1:22","nodeType":"YulLiteral","src":"126:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"117:3:22","nodeType":"YulIdentifier","src":"117:3:22"},"nativeSrc":"117:11:22","nodeType":"YulFunctionCall","src":"117:11:22"},{"kind":"number","nativeSrc":"130:1:22","nodeType":"YulLiteral","src":"130:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"113:3:22","nodeType":"YulIdentifier","src":"113:3:22"},"nativeSrc":"113:19:22","nodeType":"YulFunctionCall","src":"113:19:22"}],"functionName":{"name":"and","nativeSrc":"102:3:22","nodeType":"YulIdentifier","src":"102:3:22"},"nativeSrc":"102:31:22","nodeType":"YulFunctionCall","src":"102:31:22"}],"functionName":{"name":"eq","nativeSrc":"92:2:22","nodeType":"YulIdentifier","src":"92:2:22"},"nativeSrc":"92:42:22","nodeType":"YulFunctionCall","src":"92:42:22"}],"functionName":{"name":"iszero","nativeSrc":"85:6:22","nodeType":"YulIdentifier","src":"85:6:22"},"nativeSrc":"85:50:22","nodeType":"YulFunctionCall","src":"85:50:22"},"nativeSrc":"82:70:22","nodeType":"YulIf","src":"82:70:22"}]},"name":"validator_revert_contract_IEntryPoint","nativeSrc":"14:144:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"61:5:22","nodeType":"YulTypedName","src":"61:5:22","type":""}],"src":"14:144:22"},{"body":{"nativeSrc":"281:313:22","nodeType":"YulBlock","src":"281:313:22","statements":[{"body":{"nativeSrc":"327:16:22","nodeType":"YulBlock","src":"327:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"336:1:22","nodeType":"YulLiteral","src":"336:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"339:1:22","nodeType":"YulLiteral","src":"339:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"329:6:22","nodeType":"YulIdentifier","src":"329:6:22"},"nativeSrc":"329:12:22","nodeType":"YulFunctionCall","src":"329:12:22"},"nativeSrc":"329:12:22","nodeType":"YulExpressionStatement","src":"329:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"302:7:22","nodeType":"YulIdentifier","src":"302:7:22"},{"name":"headStart","nativeSrc":"311:9:22","nodeType":"YulIdentifier","src":"311:9:22"}],"functionName":{"name":"sub","nativeSrc":"298:3:22","nodeType":"YulIdentifier","src":"298:3:22"},"nativeSrc":"298:23:22","nodeType":"YulFunctionCall","src":"298:23:22"},{"kind":"number","nativeSrc":"323:2:22","nodeType":"YulLiteral","src":"323:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"294:3:22","nodeType":"YulIdentifier","src":"294:3:22"},"nativeSrc":"294:32:22","nodeType":"YulFunctionCall","src":"294:32:22"},"nativeSrc":"291:52:22","nodeType":"YulIf","src":"291:52:22"},{"nativeSrc":"352:29:22","nodeType":"YulVariableDeclaration","src":"352:29:22","value":{"arguments":[{"name":"headStart","nativeSrc":"371:9:22","nodeType":"YulIdentifier","src":"371:9:22"}],"functionName":{"name":"mload","nativeSrc":"365:5:22","nodeType":"YulIdentifier","src":"365:5:22"},"nativeSrc":"365:16:22","nodeType":"YulFunctionCall","src":"365:16:22"},"variables":[{"name":"value","nativeSrc":"356:5:22","nodeType":"YulTypedName","src":"356:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"428:5:22","nodeType":"YulIdentifier","src":"428:5:22"}],"functionName":{"name":"validator_revert_contract_IEntryPoint","nativeSrc":"390:37:22","nodeType":"YulIdentifier","src":"390:37:22"},"nativeSrc":"390:44:22","nodeType":"YulFunctionCall","src":"390:44:22"},"nativeSrc":"390:44:22","nodeType":"YulExpressionStatement","src":"390:44:22"},{"nativeSrc":"443:15:22","nodeType":"YulAssignment","src":"443:15:22","value":{"name":"value","nativeSrc":"453:5:22","nodeType":"YulIdentifier","src":"453:5:22"},"variableNames":[{"name":"value0","nativeSrc":"443:6:22","nodeType":"YulIdentifier","src":"443:6:22"}]},{"nativeSrc":"467:40:22","nodeType":"YulVariableDeclaration","src":"467:40:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"492:9:22","nodeType":"YulIdentifier","src":"492:9:22"},{"kind":"number","nativeSrc":"503:2:22","nodeType":"YulLiteral","src":"503:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"488:3:22","nodeType":"YulIdentifier","src":"488:3:22"},"nativeSrc":"488:18:22","nodeType":"YulFunctionCall","src":"488:18:22"}],"functionName":{"name":"mload","nativeSrc":"482:5:22","nodeType":"YulIdentifier","src":"482:5:22"},"nativeSrc":"482:25:22","nodeType":"YulFunctionCall","src":"482:25:22"},"variables":[{"name":"value_1","nativeSrc":"471:7:22","nodeType":"YulTypedName","src":"471:7:22","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"554:7:22","nodeType":"YulIdentifier","src":"554:7:22"}],"functionName":{"name":"validator_revert_contract_IEntryPoint","nativeSrc":"516:37:22","nodeType":"YulIdentifier","src":"516:37:22"},"nativeSrc":"516:46:22","nodeType":"YulFunctionCall","src":"516:46:22"},"nativeSrc":"516:46:22","nodeType":"YulExpressionStatement","src":"516:46:22"},{"nativeSrc":"571:17:22","nodeType":"YulAssignment","src":"571:17:22","value":{"name":"value_1","nativeSrc":"581:7:22","nodeType":"YulIdentifier","src":"581:7:22"},"variableNames":[{"name":"value1","nativeSrc":"571:6:22","nodeType":"YulIdentifier","src":"571:6:22"}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$6970t_address_fromMemory","nativeSrc":"163:431:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"239:9:22","nodeType":"YulTypedName","src":"239:9:22","type":""},{"name":"dataEnd","nativeSrc":"250:7:22","nodeType":"YulTypedName","src":"250:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"262:6:22","nodeType":"YulTypedName","src":"262:6:22","type":""},{"name":"value1","nativeSrc":"270:6:22","nodeType":"YulTypedName","src":"270:6:22","type":""}],"src":"163:431:22"}]},"contents":"{\n    { }\n    function validator_revert_contract_IEntryPoint(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IEntryPoint_$6970t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IEntryPoint(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_IEntryPoint(value_1)\n        value1 := value_1\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561000f575f5ffd5b5060405161090938038061090983398101604081905261002e91610098565b6001600160a01b0382811660808190525f80546001600160a01b03191692841692831781556040517f526ffefac8167421b9048ae3377810715d834479565b0182ea4155f0efa4c3809190a350506100d0565b6001600160a01b0381168114610095575f5ffd5b50565b5f5f604083850312156100a9575f5ffd5b82516100b481610081565b60208401519092506100c581610081565b809150509250929050565b6080516108146100f55f395f818160e601528181610114015261024601526108145ff3fe608060405260043610610041575f3560e01c806319822f7c1461004c5780638da5cb5b1461007e5780638dd7712f146100b4578063b0d691fe146100d5575f5ffd5b3661004857005b5f5ffd5b348015610057575f5ffd5b5061006b610066366004610671565b610108565b6040519081526020015b60405180910390f35b348015610089575f5ffd5b505f5461009c906001600160a01b031681565b6040516001600160a01b039091168152602001610075565b3480156100bf575f5ffd5b506100d36100ce3660046106bb565b61023b565b005b3480156100e0575f5ffd5b5061009c7f000000000000000000000000000000000000000000000000000000000000000081565b5f336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101805760405162461bcd60e51b81526020600482015260176024820152761858d8dbdd5b9d0e881b9bdd08115b9d1c9e541bda5b9d604a1b60448201526064015b60405180910390fd5b61018a84846102c6565b90508115610234576040515f90339084908381818185875af1925050503d805f81146101d1576040519150601f19603f3d011682016040523d82523d5f602084013e6101d6565b606091505b50509050806102325760405162461bcd60e51b815260206004820152602260248201527f6163636f756e743a206661696c656420746f2066756e6420456e747279506f696044820152611b9d60f21b6064820152608401610177565b505b9392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102ad5760405162461bcd60e51b81526020600482015260176024820152761858d8dbdd5b9d0e881b9bdd08115b9d1c9e541bda5b9d604a1b6044820152606401610177565b6102c26102bd60608401846106fd565b610370565b5050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f908152601c829052603c81205f6103426103066101008701876106fd565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525086939250506104699050565b5f549091506001600160a01b038083169116146103645760019250505061036a565b5f925050505b92915050565b5f81900361037c575050565b5f61038a6014828486610747565b6103939161076e565b60601c9050365f6103a78460148188610747565b915091505f5f846001600160a01b031684846040516103c79291906107bb565b5f604051808303815f865af19150503d805f8114610400576040519150601f19603f3d011682016040523d82523d5f602084013e610405565b606091505b5091509150816104605780515f036104585760405162461bcd60e51b81526020600482015260166024820152751858d8dbdd5b9d0e8818d85b1b081c995d995c9d195960521b6044820152606401610177565b805160208201fd5b50505050505050565b5f5f5f5f6104778686610491565b92509250925061048782826104da565b5090949350505050565b5f5f5f83516041036104c8576020840151604085015160608601515f1a6104ba88828585610592565b9550955095505050506104d3565b505081515f91506002905b9250925092565b5f8260038111156104ed576104ed6107ca565b036104f6575050565b600182600381111561050a5761050a6107ca565b036105285760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561053c5761053c6107ca565b0361055d5760405163fce698f760e01b815260048101829052602401610177565b6003826003811115610571576105716107ca565b036102c2576040516335e2f38360e21b815260048101829052602401610177565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156105cb57505f91506003905082610650565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561061c573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b03811661064757505f925060019150829050610650565b92505f91508190505b9450945094915050565b5f610120828403121561066b575f5ffd5b50919050565b5f5f5f60608486031215610683575f5ffd5b833567ffffffffffffffff811115610699575f5ffd5b6106a58682870161065a565b9660208601359650604090950135949350505050565b5f5f604083850312156106cc575f5ffd5b823567ffffffffffffffff8111156106e2575f5ffd5b6106ee8582860161065a565b95602094909401359450505050565b5f5f8335601e19843603018112610712575f5ffd5b83018035915067ffffffffffffffff82111561072c575f5ffd5b602001915036819003821315610740575f5ffd5b9250929050565b5f5f85851115610755575f5ffd5b83861115610761575f5ffd5b5050820193919092039150565b80356bffffffffffffffffffffffff1981169060148410156107b4576bffffffffffffffffffffffff196bffffffffffffffffffffffff198560140360031b1b82161691505b5092915050565b818382375f9101908152919050565b634e487b7160e01b5f52602160045260245ffdfea2646970667358221220bd0eaea7e252a492d41698283e78491e706cc47abaa69998cb7c53a8d7e6696164736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x909 CODESIZE SUB DUP1 PUSH2 0x909 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 DUP5 AND SWAP3 DUP4 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x526FFEFAC8167421B9048AE3377810715D834479565B0182EA4155F0EFA4C380 SWAP2 SWAP1 LOG3 POP POP PUSH2 0xD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x95 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 MLOAD PUSH2 0xB4 DUP2 PUSH2 0x81 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0xC5 DUP2 PUSH2 0x81 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x814 PUSH2 0xF5 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0xE6 ADD MSTORE DUP2 DUP2 PUSH2 0x114 ADD MSTORE PUSH2 0x246 ADD MSTORE PUSH2 0x814 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19822F7C EQ PUSH2 0x4C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8DD7712F EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0xD5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x48 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6B PUSH2 0x66 CALLDATASIZE PUSH1 0x4 PUSH2 0x671 JUMP JUMPDEST PUSH2 0x108 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x9C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x75 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x6BB JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x1858D8DBDD5B9D0E881B9BDD08115B9D1C9E541BDA5B9D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18A DUP5 DUP5 PUSH2 0x2C6 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x234 JUMPI PUSH1 0x40 MLOAD PUSH0 SWAP1 CALLER SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1D1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x232 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206661696C656420746F2066756E6420456E747279506F69 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1B9D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x177 JUMP JUMPDEST POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x1858D8DBDD5B9D0E881B9BDD08115B9D1C9E541BDA5B9D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x177 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x2BD PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 PUSH0 PUSH2 0x342 PUSH2 0x306 PUSH2 0x100 DUP8 ADD DUP8 PUSH2 0x6FD JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 SWAP4 SWAP3 POP POP PUSH2 0x469 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0x364 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x36A JUMP JUMPDEST PUSH0 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 SUB PUSH2 0x37C JUMPI POP POP JUMP JUMPDEST PUSH0 PUSH2 0x38A PUSH1 0x14 DUP3 DUP5 DUP7 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x393 SWAP2 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 POP CALLDATASIZE PUSH0 PUSH2 0x3A7 DUP5 PUSH1 0x14 DUP2 DUP9 PUSH2 0x747 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP3 SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x405 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x460 JUMPI DUP1 MLOAD PUSH0 SUB PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1858D8DBDD5B9D0E8818D85B1B081C995D995C9D1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x177 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x477 DUP7 DUP7 PUSH2 0x491 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x487 DUP3 DUP3 PUSH2 0x4DA JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x4C8 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH0 BYTE PUSH2 0x4BA DUP9 DUP3 DUP6 DUP6 PUSH2 0x592 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x4D3 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4ED PUSH2 0x7CA JUMP JUMPDEST SUB PUSH2 0x4F6 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x50A JUMPI PUSH2 0x50A PUSH2 0x7CA JUMP JUMPDEST SUB PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x53C JUMPI PUSH2 0x53C PUSH2 0x7CA JUMP JUMPDEST SUB PUSH2 0x55D JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x177 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x571 JUMPI PUSH2 0x571 PUSH2 0x7CA JUMP JUMPDEST SUB PUSH2 0x2C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x177 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x5CB JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x61C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x647 JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x650 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x683 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x699 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6A5 DUP7 DUP3 DUP8 ADD PUSH2 0x65A JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6EE DUP6 DUP3 DUP7 ADD PUSH2 0x65A JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x712 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x72C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x740 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP6 DUP6 GT ISZERO PUSH2 0x755 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x761 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND SWAP1 PUSH1 0x14 DUP5 LT ISZERO PUSH2 0x7B4 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP6 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP3 AND AND SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xE 0xAE 0xA7 0xE2 MSTORE LOG4 SWAP3 0xD4 AND SWAP9 0x28 RETURNDATACOPY PUSH25 0x491E706CC47ABAA69998CB7C53A8D7E6696164736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"385:2585:10:-:0;;;922:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;986:24:10;;;;;;;1021:5;:14;;-1:-1:-1;;;;;;1021:14:10;;;;;;;;;1051:39;;;;1021:5;1051:39;922:176;;385:2585;;14:144:22;-1:-1:-1;;;;;102:31:22;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:431::-;262:6;270;323:2;311:9;302:7;298:23;294:32;291:52;;;339:1;336;329:12;291:52;371:9;365:16;390:44;428:5;390:44;:::i;:::-;503:2;488:18;;482:25;453:5;;-1:-1:-1;516:46:22;482:25;516:46;:::i;:::-;581:7;571:17;;;163:431;;;;;:::o;:::-;385:2585:10;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_6195":{"entryPoint":null,"id":6195,"parameterSlots":0,"returnSlots":0},"@_executeUserOp_6191":{"entryPoint":880,"id":6191,"parameterSlots":2,"returnSlots":0},"@_throwError_1978":{"entryPoint":1242,"id":1978,"parameterSlots":2,"returnSlots":0},"@_validateSignature_6135":{"entryPoint":710,"id":6135,"parameterSlots":2,"returnSlots":1},"@entryPoint_5978":{"entryPoint":null,"id":5978,"parameterSlots":0,"returnSlots":0},"@executeUserOp_6101":{"entryPoint":571,"id":6101,"parameterSlots":2,"returnSlots":0},"@owner_5980":{"entryPoint":null,"id":5980,"parameterSlots":0,"returnSlots":0},"@recover_1735":{"entryPoint":1129,"id":1735,"parameterSlots":2,"returnSlots":1},"@toEthSignedMessageHash_1994":{"entryPoint":null,"id":1994,"parameterSlots":1,"returnSlots":1},"@tryRecover_1705":{"entryPoint":1169,"id":1705,"parameterSlots":2,"returnSlots":3},"@tryRecover_1893":{"entryPoint":1426,"id":1893,"parameterSlots":4,"returnSlots":3},"@validateUserOp_6083":{"entryPoint":264,"id":6083,"parameterSlots":3,"returnSlots":1},"abi_decode_struct_PackedUserOperation_calldata":{"entryPoint":1626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_PackedUserOperation_$7171_calldata_ptrt_bytes32":{"entryPoint":1723,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_struct$_PackedUserOperation_$7171_calldata_ptrt_bytes32t_uint256":{"entryPoint":1649,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1979,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$6970__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520737350501b639a3040e8bfa399a40ff84f07adcf0019b13835a075606600c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b1ca099c4e784e19975c481999e983d66a2fe4630ff354c3cdabe0c83aea2350__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bcbccd7f00a120dd5c8288fc42b2ab3be5f36e4a7bd3feb315707f263b339153__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":1789,"id":null,"parameterSlots":2,"returnSlots":2},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":1863,"id":null,"parameterSlots":4,"returnSlots":2},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20":{"entryPoint":1902,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":1994,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5418:22","nodeType":"YulBlock","src":"0:5418:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"96:86:22","nodeType":"YulBlock","src":"96:86:22","statements":[{"body":{"nativeSrc":"136:16:22","nodeType":"YulBlock","src":"136:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"145:1:22","nodeType":"YulLiteral","src":"145:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"148:1:22","nodeType":"YulLiteral","src":"148:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"138:6:22","nodeType":"YulIdentifier","src":"138:6:22"},"nativeSrc":"138:12:22","nodeType":"YulFunctionCall","src":"138:12:22"},"nativeSrc":"138:12:22","nodeType":"YulExpressionStatement","src":"138:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nativeSrc":"117:3:22","nodeType":"YulIdentifier","src":"117:3:22"},{"name":"offset","nativeSrc":"122:6:22","nodeType":"YulIdentifier","src":"122:6:22"}],"functionName":{"name":"sub","nativeSrc":"113:3:22","nodeType":"YulIdentifier","src":"113:3:22"},"nativeSrc":"113:16:22","nodeType":"YulFunctionCall","src":"113:16:22"},{"kind":"number","nativeSrc":"131:3:22","nodeType":"YulLiteral","src":"131:3:22","type":"","value":"288"}],"functionName":{"name":"slt","nativeSrc":"109:3:22","nodeType":"YulIdentifier","src":"109:3:22"},"nativeSrc":"109:26:22","nodeType":"YulFunctionCall","src":"109:26:22"},"nativeSrc":"106:46:22","nodeType":"YulIf","src":"106:46:22"},{"nativeSrc":"161:15:22","nodeType":"YulAssignment","src":"161:15:22","value":{"name":"offset","nativeSrc":"170:6:22","nodeType":"YulIdentifier","src":"170:6:22"},"variableNames":[{"name":"value","nativeSrc":"161:5:22","nodeType":"YulIdentifier","src":"161:5:22"}]}]},"name":"abi_decode_struct_PackedUserOperation_calldata","nativeSrc":"14:168:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"70:6:22","nodeType":"YulTypedName","src":"70:6:22","type":""},{"name":"end","nativeSrc":"78:3:22","nodeType":"YulTypedName","src":"78:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"86:5:22","nodeType":"YulTypedName","src":"86:5:22","type":""}],"src":"14:168:22"},{"body":{"nativeSrc":"330:419:22","nodeType":"YulBlock","src":"330:419:22","statements":[{"body":{"nativeSrc":"376:16:22","nodeType":"YulBlock","src":"376:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"385:1:22","nodeType":"YulLiteral","src":"385:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"388:1:22","nodeType":"YulLiteral","src":"388:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"378:6:22","nodeType":"YulIdentifier","src":"378:6:22"},"nativeSrc":"378:12:22","nodeType":"YulFunctionCall","src":"378:12:22"},"nativeSrc":"378:12:22","nodeType":"YulExpressionStatement","src":"378:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"351:7:22","nodeType":"YulIdentifier","src":"351:7:22"},{"name":"headStart","nativeSrc":"360:9:22","nodeType":"YulIdentifier","src":"360:9:22"}],"functionName":{"name":"sub","nativeSrc":"347:3:22","nodeType":"YulIdentifier","src":"347:3:22"},"nativeSrc":"347:23:22","nodeType":"YulFunctionCall","src":"347:23:22"},{"kind":"number","nativeSrc":"372:2:22","nodeType":"YulLiteral","src":"372:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"343:3:22","nodeType":"YulIdentifier","src":"343:3:22"},"nativeSrc":"343:32:22","nodeType":"YulFunctionCall","src":"343:32:22"},"nativeSrc":"340:52:22","nodeType":"YulIf","src":"340:52:22"},{"nativeSrc":"401:37:22","nodeType":"YulVariableDeclaration","src":"401:37:22","value":{"arguments":[{"name":"headStart","nativeSrc":"428:9:22","nodeType":"YulIdentifier","src":"428:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"415:12:22","nodeType":"YulIdentifier","src":"415:12:22"},"nativeSrc":"415:23:22","nodeType":"YulFunctionCall","src":"415:23:22"},"variables":[{"name":"offset","nativeSrc":"405:6:22","nodeType":"YulTypedName","src":"405:6:22","type":""}]},{"body":{"nativeSrc":"481:16:22","nodeType":"YulBlock","src":"481:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"490:1:22","nodeType":"YulLiteral","src":"490:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"493:1:22","nodeType":"YulLiteral","src":"493:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"483:6:22","nodeType":"YulIdentifier","src":"483:6:22"},"nativeSrc":"483:12:22","nodeType":"YulFunctionCall","src":"483:12:22"},"nativeSrc":"483:12:22","nodeType":"YulExpressionStatement","src":"483:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"453:6:22","nodeType":"YulIdentifier","src":"453:6:22"},{"kind":"number","nativeSrc":"461:18:22","nodeType":"YulLiteral","src":"461:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"450:2:22","nodeType":"YulIdentifier","src":"450:2:22"},"nativeSrc":"450:30:22","nodeType":"YulFunctionCall","src":"450:30:22"},"nativeSrc":"447:50:22","nodeType":"YulIf","src":"447:50:22"},{"nativeSrc":"506:89:22","nodeType":"YulAssignment","src":"506:89:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"567:9:22","nodeType":"YulIdentifier","src":"567:9:22"},{"name":"offset","nativeSrc":"578:6:22","nodeType":"YulIdentifier","src":"578:6:22"}],"functionName":{"name":"add","nativeSrc":"563:3:22","nodeType":"YulIdentifier","src":"563:3:22"},"nativeSrc":"563:22:22","nodeType":"YulFunctionCall","src":"563:22:22"},{"name":"dataEnd","nativeSrc":"587:7:22","nodeType":"YulIdentifier","src":"587:7:22"}],"functionName":{"name":"abi_decode_struct_PackedUserOperation_calldata","nativeSrc":"516:46:22","nodeType":"YulIdentifier","src":"516:46:22"},"nativeSrc":"516:79:22","nodeType":"YulFunctionCall","src":"516:79:22"},"variableNames":[{"name":"value0","nativeSrc":"506:6:22","nodeType":"YulIdentifier","src":"506:6:22"}]},{"nativeSrc":"604:14:22","nodeType":"YulVariableDeclaration","src":"604:14:22","value":{"kind":"number","nativeSrc":"617:1:22","nodeType":"YulLiteral","src":"617:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"608:5:22","nodeType":"YulTypedName","src":"608:5:22","type":""}]},{"nativeSrc":"627:41:22","nodeType":"YulAssignment","src":"627:41:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"653:9:22","nodeType":"YulIdentifier","src":"653:9:22"},{"kind":"number","nativeSrc":"664:2:22","nodeType":"YulLiteral","src":"664:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"649:3:22","nodeType":"YulIdentifier","src":"649:3:22"},"nativeSrc":"649:18:22","nodeType":"YulFunctionCall","src":"649:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"636:12:22","nodeType":"YulIdentifier","src":"636:12:22"},"nativeSrc":"636:32:22","nodeType":"YulFunctionCall","src":"636:32:22"},"variableNames":[{"name":"value","nativeSrc":"627:5:22","nodeType":"YulIdentifier","src":"627:5:22"}]},{"nativeSrc":"677:15:22","nodeType":"YulAssignment","src":"677:15:22","value":{"name":"value","nativeSrc":"687:5:22","nodeType":"YulIdentifier","src":"687:5:22"},"variableNames":[{"name":"value1","nativeSrc":"677:6:22","nodeType":"YulIdentifier","src":"677:6:22"}]},{"nativeSrc":"701:42:22","nodeType":"YulAssignment","src":"701:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"728:9:22","nodeType":"YulIdentifier","src":"728:9:22"},{"kind":"number","nativeSrc":"739:2:22","nodeType":"YulLiteral","src":"739:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"724:3:22","nodeType":"YulIdentifier","src":"724:3:22"},"nativeSrc":"724:18:22","nodeType":"YulFunctionCall","src":"724:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"711:12:22","nodeType":"YulIdentifier","src":"711:12:22"},"nativeSrc":"711:32:22","nodeType":"YulFunctionCall","src":"711:32:22"},"variableNames":[{"name":"value2","nativeSrc":"701:6:22","nodeType":"YulIdentifier","src":"701:6:22"}]}]},"name":"abi_decode_tuple_t_struct$_PackedUserOperation_$7171_calldata_ptrt_bytes32t_uint256","nativeSrc":"187:562:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"280:9:22","nodeType":"YulTypedName","src":"280:9:22","type":""},{"name":"dataEnd","nativeSrc":"291:7:22","nodeType":"YulTypedName","src":"291:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"303:6:22","nodeType":"YulTypedName","src":"303:6:22","type":""},{"name":"value1","nativeSrc":"311:6:22","nodeType":"YulTypedName","src":"311:6:22","type":""},{"name":"value2","nativeSrc":"319:6:22","nodeType":"YulTypedName","src":"319:6:22","type":""}],"src":"187:562:22"},{"body":{"nativeSrc":"855:76:22","nodeType":"YulBlock","src":"855:76:22","statements":[{"nativeSrc":"865:26:22","nodeType":"YulAssignment","src":"865:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"877:9:22","nodeType":"YulIdentifier","src":"877:9:22"},{"kind":"number","nativeSrc":"888:2:22","nodeType":"YulLiteral","src":"888:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"873:3:22","nodeType":"YulIdentifier","src":"873:3:22"},"nativeSrc":"873:18:22","nodeType":"YulFunctionCall","src":"873:18:22"},"variableNames":[{"name":"tail","nativeSrc":"865:4:22","nodeType":"YulIdentifier","src":"865:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"907:9:22","nodeType":"YulIdentifier","src":"907:9:22"},{"name":"value0","nativeSrc":"918:6:22","nodeType":"YulIdentifier","src":"918:6:22"}],"functionName":{"name":"mstore","nativeSrc":"900:6:22","nodeType":"YulIdentifier","src":"900:6:22"},"nativeSrc":"900:25:22","nodeType":"YulFunctionCall","src":"900:25:22"},"nativeSrc":"900:25:22","nodeType":"YulExpressionStatement","src":"900:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"754:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"824:9:22","nodeType":"YulTypedName","src":"824:9:22","type":""},{"name":"value0","nativeSrc":"835:6:22","nodeType":"YulTypedName","src":"835:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"846:4:22","nodeType":"YulTypedName","src":"846:4:22","type":""}],"src":"754:177:22"},{"body":{"nativeSrc":"1037:102:22","nodeType":"YulBlock","src":"1037:102:22","statements":[{"nativeSrc":"1047:26:22","nodeType":"YulAssignment","src":"1047:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1059:9:22","nodeType":"YulIdentifier","src":"1059:9:22"},{"kind":"number","nativeSrc":"1070:2:22","nodeType":"YulLiteral","src":"1070:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1055:3:22","nodeType":"YulIdentifier","src":"1055:3:22"},"nativeSrc":"1055:18:22","nodeType":"YulFunctionCall","src":"1055:18:22"},"variableNames":[{"name":"tail","nativeSrc":"1047:4:22","nodeType":"YulIdentifier","src":"1047:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1089:9:22","nodeType":"YulIdentifier","src":"1089:9:22"},{"arguments":[{"name":"value0","nativeSrc":"1104:6:22","nodeType":"YulIdentifier","src":"1104:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1120:3:22","nodeType":"YulLiteral","src":"1120:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"1125:1:22","nodeType":"YulLiteral","src":"1125:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1116:3:22","nodeType":"YulIdentifier","src":"1116:3:22"},"nativeSrc":"1116:11:22","nodeType":"YulFunctionCall","src":"1116:11:22"},{"kind":"number","nativeSrc":"1129:1:22","nodeType":"YulLiteral","src":"1129:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1112:3:22","nodeType":"YulIdentifier","src":"1112:3:22"},"nativeSrc":"1112:19:22","nodeType":"YulFunctionCall","src":"1112:19:22"}],"functionName":{"name":"and","nativeSrc":"1100:3:22","nodeType":"YulIdentifier","src":"1100:3:22"},"nativeSrc":"1100:32:22","nodeType":"YulFunctionCall","src":"1100:32:22"}],"functionName":{"name":"mstore","nativeSrc":"1082:6:22","nodeType":"YulIdentifier","src":"1082:6:22"},"nativeSrc":"1082:51:22","nodeType":"YulFunctionCall","src":"1082:51:22"},"nativeSrc":"1082:51:22","nodeType":"YulExpressionStatement","src":"1082:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"936:203:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1006:9:22","nodeType":"YulTypedName","src":"1006:9:22","type":""},{"name":"value0","nativeSrc":"1017:6:22","nodeType":"YulTypedName","src":"1017:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1028:4:22","nodeType":"YulTypedName","src":"1028:4:22","type":""}],"src":"936:203:22"},{"body":{"nativeSrc":"1270:368:22","nodeType":"YulBlock","src":"1270:368:22","statements":[{"body":{"nativeSrc":"1316:16:22","nodeType":"YulBlock","src":"1316:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1325:1:22","nodeType":"YulLiteral","src":"1325:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1328:1:22","nodeType":"YulLiteral","src":"1328:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1318:6:22","nodeType":"YulIdentifier","src":"1318:6:22"},"nativeSrc":"1318:12:22","nodeType":"YulFunctionCall","src":"1318:12:22"},"nativeSrc":"1318:12:22","nodeType":"YulExpressionStatement","src":"1318:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1291:7:22","nodeType":"YulIdentifier","src":"1291:7:22"},{"name":"headStart","nativeSrc":"1300:9:22","nodeType":"YulIdentifier","src":"1300:9:22"}],"functionName":{"name":"sub","nativeSrc":"1287:3:22","nodeType":"YulIdentifier","src":"1287:3:22"},"nativeSrc":"1287:23:22","nodeType":"YulFunctionCall","src":"1287:23:22"},{"kind":"number","nativeSrc":"1312:2:22","nodeType":"YulLiteral","src":"1312:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1283:3:22","nodeType":"YulIdentifier","src":"1283:3:22"},"nativeSrc":"1283:32:22","nodeType":"YulFunctionCall","src":"1283:32:22"},"nativeSrc":"1280:52:22","nodeType":"YulIf","src":"1280:52:22"},{"nativeSrc":"1341:37:22","nodeType":"YulVariableDeclaration","src":"1341:37:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1368:9:22","nodeType":"YulIdentifier","src":"1368:9:22"}],"functionName":{"name":"calldataload","nativeSrc":"1355:12:22","nodeType":"YulIdentifier","src":"1355:12:22"},"nativeSrc":"1355:23:22","nodeType":"YulFunctionCall","src":"1355:23:22"},"variables":[{"name":"offset","nativeSrc":"1345:6:22","nodeType":"YulTypedName","src":"1345:6:22","type":""}]},{"body":{"nativeSrc":"1421:16:22","nodeType":"YulBlock","src":"1421:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1430:1:22","nodeType":"YulLiteral","src":"1430:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"1433:1:22","nodeType":"YulLiteral","src":"1433:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1423:6:22","nodeType":"YulIdentifier","src":"1423:6:22"},"nativeSrc":"1423:12:22","nodeType":"YulFunctionCall","src":"1423:12:22"},"nativeSrc":"1423:12:22","nodeType":"YulExpressionStatement","src":"1423:12:22"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1393:6:22","nodeType":"YulIdentifier","src":"1393:6:22"},{"kind":"number","nativeSrc":"1401:18:22","nodeType":"YulLiteral","src":"1401:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1390:2:22","nodeType":"YulIdentifier","src":"1390:2:22"},"nativeSrc":"1390:30:22","nodeType":"YulFunctionCall","src":"1390:30:22"},"nativeSrc":"1387:50:22","nodeType":"YulIf","src":"1387:50:22"},{"nativeSrc":"1446:89:22","nodeType":"YulAssignment","src":"1446:89:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1507:9:22","nodeType":"YulIdentifier","src":"1507:9:22"},{"name":"offset","nativeSrc":"1518:6:22","nodeType":"YulIdentifier","src":"1518:6:22"}],"functionName":{"name":"add","nativeSrc":"1503:3:22","nodeType":"YulIdentifier","src":"1503:3:22"},"nativeSrc":"1503:22:22","nodeType":"YulFunctionCall","src":"1503:22:22"},{"name":"dataEnd","nativeSrc":"1527:7:22","nodeType":"YulIdentifier","src":"1527:7:22"}],"functionName":{"name":"abi_decode_struct_PackedUserOperation_calldata","nativeSrc":"1456:46:22","nodeType":"YulIdentifier","src":"1456:46:22"},"nativeSrc":"1456:79:22","nodeType":"YulFunctionCall","src":"1456:79:22"},"variableNames":[{"name":"value0","nativeSrc":"1446:6:22","nodeType":"YulIdentifier","src":"1446:6:22"}]},{"nativeSrc":"1544:14:22","nodeType":"YulVariableDeclaration","src":"1544:14:22","value":{"kind":"number","nativeSrc":"1557:1:22","nodeType":"YulLiteral","src":"1557:1:22","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1548:5:22","nodeType":"YulTypedName","src":"1548:5:22","type":""}]},{"nativeSrc":"1567:41:22","nodeType":"YulAssignment","src":"1567:41:22","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1593:9:22","nodeType":"YulIdentifier","src":"1593:9:22"},{"kind":"number","nativeSrc":"1604:2:22","nodeType":"YulLiteral","src":"1604:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1589:3:22","nodeType":"YulIdentifier","src":"1589:3:22"},"nativeSrc":"1589:18:22","nodeType":"YulFunctionCall","src":"1589:18:22"}],"functionName":{"name":"calldataload","nativeSrc":"1576:12:22","nodeType":"YulIdentifier","src":"1576:12:22"},"nativeSrc":"1576:32:22","nodeType":"YulFunctionCall","src":"1576:32:22"},"variableNames":[{"name":"value","nativeSrc":"1567:5:22","nodeType":"YulIdentifier","src":"1567:5:22"}]},{"nativeSrc":"1617:15:22","nodeType":"YulAssignment","src":"1617:15:22","value":{"name":"value","nativeSrc":"1627:5:22","nodeType":"YulIdentifier","src":"1627:5:22"},"variableNames":[{"name":"value1","nativeSrc":"1617:6:22","nodeType":"YulIdentifier","src":"1617:6:22"}]}]},"name":"abi_decode_tuple_t_struct$_PackedUserOperation_$7171_calldata_ptrt_bytes32","nativeSrc":"1144:494:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1228:9:22","nodeType":"YulTypedName","src":"1228:9:22","type":""},{"name":"dataEnd","nativeSrc":"1239:7:22","nodeType":"YulTypedName","src":"1239:7:22","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1251:6:22","nodeType":"YulTypedName","src":"1251:6:22","type":""},{"name":"value1","nativeSrc":"1259:6:22","nodeType":"YulTypedName","src":"1259:6:22","type":""}],"src":"1144:494:22"},{"body":{"nativeSrc":"1764:102:22","nodeType":"YulBlock","src":"1764:102:22","statements":[{"nativeSrc":"1774:26:22","nodeType":"YulAssignment","src":"1774:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"1786:9:22","nodeType":"YulIdentifier","src":"1786:9:22"},{"kind":"number","nativeSrc":"1797:2:22","nodeType":"YulLiteral","src":"1797:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1782:3:22","nodeType":"YulIdentifier","src":"1782:3:22"},"nativeSrc":"1782:18:22","nodeType":"YulFunctionCall","src":"1782:18:22"},"variableNames":[{"name":"tail","nativeSrc":"1774:4:22","nodeType":"YulIdentifier","src":"1774:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1816:9:22","nodeType":"YulIdentifier","src":"1816:9:22"},{"arguments":[{"name":"value0","nativeSrc":"1831:6:22","nodeType":"YulIdentifier","src":"1831:6:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1847:3:22","nodeType":"YulLiteral","src":"1847:3:22","type":"","value":"160"},{"kind":"number","nativeSrc":"1852:1:22","nodeType":"YulLiteral","src":"1852:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1843:3:22","nodeType":"YulIdentifier","src":"1843:3:22"},"nativeSrc":"1843:11:22","nodeType":"YulFunctionCall","src":"1843:11:22"},{"kind":"number","nativeSrc":"1856:1:22","nodeType":"YulLiteral","src":"1856:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1839:3:22","nodeType":"YulIdentifier","src":"1839:3:22"},"nativeSrc":"1839:19:22","nodeType":"YulFunctionCall","src":"1839:19:22"}],"functionName":{"name":"and","nativeSrc":"1827:3:22","nodeType":"YulIdentifier","src":"1827:3:22"},"nativeSrc":"1827:32:22","nodeType":"YulFunctionCall","src":"1827:32:22"}],"functionName":{"name":"mstore","nativeSrc":"1809:6:22","nodeType":"YulIdentifier","src":"1809:6:22"},"nativeSrc":"1809:51:22","nodeType":"YulFunctionCall","src":"1809:51:22"},"nativeSrc":"1809:51:22","nodeType":"YulExpressionStatement","src":"1809:51:22"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$6970__to_t_address__fromStack_reversed","nativeSrc":"1643:223:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1733:9:22","nodeType":"YulTypedName","src":"1733:9:22","type":""},{"name":"value0","nativeSrc":"1744:6:22","nodeType":"YulTypedName","src":"1744:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1755:4:22","nodeType":"YulTypedName","src":"1755:4:22","type":""}],"src":"1643:223:22"},{"body":{"nativeSrc":"2045:173:22","nodeType":"YulBlock","src":"2045:173:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2062:9:22","nodeType":"YulIdentifier","src":"2062:9:22"},{"kind":"number","nativeSrc":"2073:2:22","nodeType":"YulLiteral","src":"2073:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2055:6:22","nodeType":"YulIdentifier","src":"2055:6:22"},"nativeSrc":"2055:21:22","nodeType":"YulFunctionCall","src":"2055:21:22"},"nativeSrc":"2055:21:22","nodeType":"YulExpressionStatement","src":"2055:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2096:9:22","nodeType":"YulIdentifier","src":"2096:9:22"},{"kind":"number","nativeSrc":"2107:2:22","nodeType":"YulLiteral","src":"2107:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2092:3:22","nodeType":"YulIdentifier","src":"2092:3:22"},"nativeSrc":"2092:18:22","nodeType":"YulFunctionCall","src":"2092:18:22"},{"kind":"number","nativeSrc":"2112:2:22","nodeType":"YulLiteral","src":"2112:2:22","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"2085:6:22","nodeType":"YulIdentifier","src":"2085:6:22"},"nativeSrc":"2085:30:22","nodeType":"YulFunctionCall","src":"2085:30:22"},"nativeSrc":"2085:30:22","nodeType":"YulExpressionStatement","src":"2085:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2135:9:22","nodeType":"YulIdentifier","src":"2135:9:22"},{"kind":"number","nativeSrc":"2146:2:22","nodeType":"YulLiteral","src":"2146:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2131:3:22","nodeType":"YulIdentifier","src":"2131:3:22"},"nativeSrc":"2131:18:22","nodeType":"YulFunctionCall","src":"2131:18:22"},{"hexValue":"6163636f756e743a206e6f7420456e747279506f696e74","kind":"string","nativeSrc":"2151:25:22","nodeType":"YulLiteral","src":"2151:25:22","type":"","value":"account: not EntryPoint"}],"functionName":{"name":"mstore","nativeSrc":"2124:6:22","nodeType":"YulIdentifier","src":"2124:6:22"},"nativeSrc":"2124:53:22","nodeType":"YulFunctionCall","src":"2124:53:22"},"nativeSrc":"2124:53:22","nodeType":"YulExpressionStatement","src":"2124:53:22"},{"nativeSrc":"2186:26:22","nodeType":"YulAssignment","src":"2186:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2198:9:22","nodeType":"YulIdentifier","src":"2198:9:22"},{"kind":"number","nativeSrc":"2209:2:22","nodeType":"YulLiteral","src":"2209:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2194:3:22","nodeType":"YulIdentifier","src":"2194:3:22"},"nativeSrc":"2194:18:22","nodeType":"YulFunctionCall","src":"2194:18:22"},"variableNames":[{"name":"tail","nativeSrc":"2186:4:22","nodeType":"YulIdentifier","src":"2186:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_520737350501b639a3040e8bfa399a40ff84f07adcf0019b13835a075606600c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1871:347:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2022:9:22","nodeType":"YulTypedName","src":"2022:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2036:4:22","nodeType":"YulTypedName","src":"2036:4:22","type":""}],"src":"1871:347:22"},{"body":{"nativeSrc":"2414:14:22","nodeType":"YulBlock","src":"2414:14:22","statements":[{"nativeSrc":"2416:10:22","nodeType":"YulAssignment","src":"2416:10:22","value":{"name":"pos","nativeSrc":"2423:3:22","nodeType":"YulIdentifier","src":"2423:3:22"},"variableNames":[{"name":"end","nativeSrc":"2416:3:22","nodeType":"YulIdentifier","src":"2416:3:22"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"2223:205:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2398:3:22","nodeType":"YulTypedName","src":"2398:3:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2406:3:22","nodeType":"YulTypedName","src":"2406:3:22","type":""}],"src":"2223:205:22"},{"body":{"nativeSrc":"2607:224:22","nodeType":"YulBlock","src":"2607:224:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2624:9:22","nodeType":"YulIdentifier","src":"2624:9:22"},{"kind":"number","nativeSrc":"2635:2:22","nodeType":"YulLiteral","src":"2635:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2617:6:22","nodeType":"YulIdentifier","src":"2617:6:22"},"nativeSrc":"2617:21:22","nodeType":"YulFunctionCall","src":"2617:21:22"},"nativeSrc":"2617:21:22","nodeType":"YulExpressionStatement","src":"2617:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2658:9:22","nodeType":"YulIdentifier","src":"2658:9:22"},{"kind":"number","nativeSrc":"2669:2:22","nodeType":"YulLiteral","src":"2669:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2654:3:22","nodeType":"YulIdentifier","src":"2654:3:22"},"nativeSrc":"2654:18:22","nodeType":"YulFunctionCall","src":"2654:18:22"},{"kind":"number","nativeSrc":"2674:2:22","nodeType":"YulLiteral","src":"2674:2:22","type":"","value":"34"}],"functionName":{"name":"mstore","nativeSrc":"2647:6:22","nodeType":"YulIdentifier","src":"2647:6:22"},"nativeSrc":"2647:30:22","nodeType":"YulFunctionCall","src":"2647:30:22"},"nativeSrc":"2647:30:22","nodeType":"YulExpressionStatement","src":"2647:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2697:9:22","nodeType":"YulIdentifier","src":"2697:9:22"},{"kind":"number","nativeSrc":"2708:2:22","nodeType":"YulLiteral","src":"2708:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2693:3:22","nodeType":"YulIdentifier","src":"2693:3:22"},"nativeSrc":"2693:18:22","nodeType":"YulFunctionCall","src":"2693:18:22"},{"hexValue":"6163636f756e743a206661696c656420746f2066756e6420456e747279506f69","kind":"string","nativeSrc":"2713:34:22","nodeType":"YulLiteral","src":"2713:34:22","type":"","value":"account: failed to fund EntryPoi"}],"functionName":{"name":"mstore","nativeSrc":"2686:6:22","nodeType":"YulIdentifier","src":"2686:6:22"},"nativeSrc":"2686:62:22","nodeType":"YulFunctionCall","src":"2686:62:22"},"nativeSrc":"2686:62:22","nodeType":"YulExpressionStatement","src":"2686:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2768:9:22","nodeType":"YulIdentifier","src":"2768:9:22"},{"kind":"number","nativeSrc":"2779:2:22","nodeType":"YulLiteral","src":"2779:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2764:3:22","nodeType":"YulIdentifier","src":"2764:3:22"},"nativeSrc":"2764:18:22","nodeType":"YulFunctionCall","src":"2764:18:22"},{"hexValue":"6e74","kind":"string","nativeSrc":"2784:4:22","nodeType":"YulLiteral","src":"2784:4:22","type":"","value":"nt"}],"functionName":{"name":"mstore","nativeSrc":"2757:6:22","nodeType":"YulIdentifier","src":"2757:6:22"},"nativeSrc":"2757:32:22","nodeType":"YulFunctionCall","src":"2757:32:22"},"nativeSrc":"2757:32:22","nodeType":"YulExpressionStatement","src":"2757:32:22"},{"nativeSrc":"2798:27:22","nodeType":"YulAssignment","src":"2798:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"2810:9:22","nodeType":"YulIdentifier","src":"2810:9:22"},{"kind":"number","nativeSrc":"2821:3:22","nodeType":"YulLiteral","src":"2821:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"2806:3:22","nodeType":"YulIdentifier","src":"2806:3:22"},"nativeSrc":"2806:19:22","nodeType":"YulFunctionCall","src":"2806:19:22"},"variableNames":[{"name":"tail","nativeSrc":"2798:4:22","nodeType":"YulIdentifier","src":"2798:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_bcbccd7f00a120dd5c8288fc42b2ab3be5f36e4a7bd3feb315707f263b339153__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2433:398:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:22","nodeType":"YulTypedName","src":"2584:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2598:4:22","nodeType":"YulTypedName","src":"2598:4:22","type":""}],"src":"2433:398:22"},{"body":{"nativeSrc":"2930:427:22","nodeType":"YulBlock","src":"2930:427:22","statements":[{"nativeSrc":"2940:51:22","nodeType":"YulVariableDeclaration","src":"2940:51:22","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"2979:11:22","nodeType":"YulIdentifier","src":"2979:11:22"}],"functionName":{"name":"calldataload","nativeSrc":"2966:12:22","nodeType":"YulIdentifier","src":"2966:12:22"},"nativeSrc":"2966:25:22","nodeType":"YulFunctionCall","src":"2966:25:22"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"2944:18:22","nodeType":"YulTypedName","src":"2944:18:22","type":""}]},{"body":{"nativeSrc":"3080:16:22","nodeType":"YulBlock","src":"3080:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3089:1:22","nodeType":"YulLiteral","src":"3089:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3092:1:22","nodeType":"YulLiteral","src":"3092:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3082:6:22","nodeType":"YulIdentifier","src":"3082:6:22"},"nativeSrc":"3082:12:22","nodeType":"YulFunctionCall","src":"3082:12:22"},"nativeSrc":"3082:12:22","nodeType":"YulExpressionStatement","src":"3082:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"3014:18:22","nodeType":"YulIdentifier","src":"3014:18:22"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"3042:12:22","nodeType":"YulIdentifier","src":"3042:12:22"},"nativeSrc":"3042:14:22","nodeType":"YulFunctionCall","src":"3042:14:22"},{"name":"base_ref","nativeSrc":"3058:8:22","nodeType":"YulIdentifier","src":"3058:8:22"}],"functionName":{"name":"sub","nativeSrc":"3038:3:22","nodeType":"YulIdentifier","src":"3038:3:22"},"nativeSrc":"3038:29:22","nodeType":"YulFunctionCall","src":"3038:29:22"},{"arguments":[{"kind":"number","nativeSrc":"3073:2:22","nodeType":"YulLiteral","src":"3073:2:22","type":"","value":"30"}],"functionName":{"name":"not","nativeSrc":"3069:3:22","nodeType":"YulIdentifier","src":"3069:3:22"},"nativeSrc":"3069:7:22","nodeType":"YulFunctionCall","src":"3069:7:22"}],"functionName":{"name":"add","nativeSrc":"3034:3:22","nodeType":"YulIdentifier","src":"3034:3:22"},"nativeSrc":"3034:43:22","nodeType":"YulFunctionCall","src":"3034:43:22"}],"functionName":{"name":"slt","nativeSrc":"3010:3:22","nodeType":"YulIdentifier","src":"3010:3:22"},"nativeSrc":"3010:68:22","nodeType":"YulFunctionCall","src":"3010:68:22"}],"functionName":{"name":"iszero","nativeSrc":"3003:6:22","nodeType":"YulIdentifier","src":"3003:6:22"},"nativeSrc":"3003:76:22","nodeType":"YulFunctionCall","src":"3003:76:22"},"nativeSrc":"3000:96:22","nodeType":"YulIf","src":"3000:96:22"},{"nativeSrc":"3105:47:22","nodeType":"YulVariableDeclaration","src":"3105:47:22","value":{"arguments":[{"name":"base_ref","nativeSrc":"3123:8:22","nodeType":"YulIdentifier","src":"3123:8:22"},{"name":"rel_offset_of_tail","nativeSrc":"3133:18:22","nodeType":"YulIdentifier","src":"3133:18:22"}],"functionName":{"name":"add","nativeSrc":"3119:3:22","nodeType":"YulIdentifier","src":"3119:3:22"},"nativeSrc":"3119:33:22","nodeType":"YulFunctionCall","src":"3119:33:22"},"variables":[{"name":"addr_1","nativeSrc":"3109:6:22","nodeType":"YulTypedName","src":"3109:6:22","type":""}]},{"nativeSrc":"3161:30:22","nodeType":"YulAssignment","src":"3161:30:22","value":{"arguments":[{"name":"addr_1","nativeSrc":"3184:6:22","nodeType":"YulIdentifier","src":"3184:6:22"}],"functionName":{"name":"calldataload","nativeSrc":"3171:12:22","nodeType":"YulIdentifier","src":"3171:12:22"},"nativeSrc":"3171:20:22","nodeType":"YulFunctionCall","src":"3171:20:22"},"variableNames":[{"name":"length","nativeSrc":"3161:6:22","nodeType":"YulIdentifier","src":"3161:6:22"}]},{"body":{"nativeSrc":"3234:16:22","nodeType":"YulBlock","src":"3234:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3243:1:22","nodeType":"YulLiteral","src":"3243:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3246:1:22","nodeType":"YulLiteral","src":"3246:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3236:6:22","nodeType":"YulIdentifier","src":"3236:6:22"},"nativeSrc":"3236:12:22","nodeType":"YulFunctionCall","src":"3236:12:22"},"nativeSrc":"3236:12:22","nodeType":"YulExpressionStatement","src":"3236:12:22"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3206:6:22","nodeType":"YulIdentifier","src":"3206:6:22"},{"kind":"number","nativeSrc":"3214:18:22","nodeType":"YulLiteral","src":"3214:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3203:2:22","nodeType":"YulIdentifier","src":"3203:2:22"},"nativeSrc":"3203:30:22","nodeType":"YulFunctionCall","src":"3203:30:22"},"nativeSrc":"3200:50:22","nodeType":"YulIf","src":"3200:50:22"},{"nativeSrc":"3259:25:22","nodeType":"YulAssignment","src":"3259:25:22","value":{"arguments":[{"name":"addr_1","nativeSrc":"3271:6:22","nodeType":"YulIdentifier","src":"3271:6:22"},{"kind":"number","nativeSrc":"3279:4:22","nodeType":"YulLiteral","src":"3279:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3267:3:22","nodeType":"YulIdentifier","src":"3267:3:22"},"nativeSrc":"3267:17:22","nodeType":"YulFunctionCall","src":"3267:17:22"},"variableNames":[{"name":"addr","nativeSrc":"3259:4:22","nodeType":"YulIdentifier","src":"3259:4:22"}]},{"body":{"nativeSrc":"3335:16:22","nodeType":"YulBlock","src":"3335:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3344:1:22","nodeType":"YulLiteral","src":"3344:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3347:1:22","nodeType":"YulLiteral","src":"3347:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3337:6:22","nodeType":"YulIdentifier","src":"3337:6:22"},"nativeSrc":"3337:12:22","nodeType":"YulFunctionCall","src":"3337:12:22"},"nativeSrc":"3337:12:22","nodeType":"YulExpressionStatement","src":"3337:12:22"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"3300:4:22","nodeType":"YulIdentifier","src":"3300:4:22"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"3310:12:22","nodeType":"YulIdentifier","src":"3310:12:22"},"nativeSrc":"3310:14:22","nodeType":"YulFunctionCall","src":"3310:14:22"},{"name":"length","nativeSrc":"3326:6:22","nodeType":"YulIdentifier","src":"3326:6:22"}],"functionName":{"name":"sub","nativeSrc":"3306:3:22","nodeType":"YulIdentifier","src":"3306:3:22"},"nativeSrc":"3306:27:22","nodeType":"YulFunctionCall","src":"3306:27:22"}],"functionName":{"name":"sgt","nativeSrc":"3296:3:22","nodeType":"YulIdentifier","src":"3296:3:22"},"nativeSrc":"3296:38:22","nodeType":"YulFunctionCall","src":"3296:38:22"},"nativeSrc":"3293:58:22","nodeType":"YulIf","src":"3293:58:22"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nativeSrc":"2836:521:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"2887:8:22","nodeType":"YulTypedName","src":"2887:8:22","type":""},{"name":"ptr_to_tail","nativeSrc":"2897:11:22","nodeType":"YulTypedName","src":"2897:11:22","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"2913:4:22","nodeType":"YulTypedName","src":"2913:4:22","type":""},{"name":"length","nativeSrc":"2919:6:22","nodeType":"YulTypedName","src":"2919:6:22","type":""}],"src":"2836:521:22"},{"body":{"nativeSrc":"3492:201:22","nodeType":"YulBlock","src":"3492:201:22","statements":[{"body":{"nativeSrc":"3530:16:22","nodeType":"YulBlock","src":"3530:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3539:1:22","nodeType":"YulLiteral","src":"3539:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3542:1:22","nodeType":"YulLiteral","src":"3542:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3532:6:22","nodeType":"YulIdentifier","src":"3532:6:22"},"nativeSrc":"3532:12:22","nodeType":"YulFunctionCall","src":"3532:12:22"},"nativeSrc":"3532:12:22","nodeType":"YulExpressionStatement","src":"3532:12:22"}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"3508:10:22","nodeType":"YulIdentifier","src":"3508:10:22"},{"name":"endIndex","nativeSrc":"3520:8:22","nodeType":"YulIdentifier","src":"3520:8:22"}],"functionName":{"name":"gt","nativeSrc":"3505:2:22","nodeType":"YulIdentifier","src":"3505:2:22"},"nativeSrc":"3505:24:22","nodeType":"YulFunctionCall","src":"3505:24:22"},"nativeSrc":"3502:44:22","nodeType":"YulIf","src":"3502:44:22"},{"body":{"nativeSrc":"3579:16:22","nodeType":"YulBlock","src":"3579:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3588:1:22","nodeType":"YulLiteral","src":"3588:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"3591:1:22","nodeType":"YulLiteral","src":"3591:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3581:6:22","nodeType":"YulIdentifier","src":"3581:6:22"},"nativeSrc":"3581:12:22","nodeType":"YulFunctionCall","src":"3581:12:22"},"nativeSrc":"3581:12:22","nodeType":"YulExpressionStatement","src":"3581:12:22"}]},"condition":{"arguments":[{"name":"endIndex","nativeSrc":"3561:8:22","nodeType":"YulIdentifier","src":"3561:8:22"},{"name":"length","nativeSrc":"3571:6:22","nodeType":"YulIdentifier","src":"3571:6:22"}],"functionName":{"name":"gt","nativeSrc":"3558:2:22","nodeType":"YulIdentifier","src":"3558:2:22"},"nativeSrc":"3558:20:22","nodeType":"YulFunctionCall","src":"3558:20:22"},"nativeSrc":"3555:40:22","nodeType":"YulIf","src":"3555:40:22"},{"nativeSrc":"3604:36:22","nodeType":"YulAssignment","src":"3604:36:22","value":{"arguments":[{"name":"offset","nativeSrc":"3621:6:22","nodeType":"YulIdentifier","src":"3621:6:22"},{"name":"startIndex","nativeSrc":"3629:10:22","nodeType":"YulIdentifier","src":"3629:10:22"}],"functionName":{"name":"add","nativeSrc":"3617:3:22","nodeType":"YulIdentifier","src":"3617:3:22"},"nativeSrc":"3617:23:22","nodeType":"YulFunctionCall","src":"3617:23:22"},"variableNames":[{"name":"offsetOut","nativeSrc":"3604:9:22","nodeType":"YulIdentifier","src":"3604:9:22"}]},{"nativeSrc":"3649:38:22","nodeType":"YulAssignment","src":"3649:38:22","value":{"arguments":[{"name":"endIndex","nativeSrc":"3666:8:22","nodeType":"YulIdentifier","src":"3666:8:22"},{"name":"startIndex","nativeSrc":"3676:10:22","nodeType":"YulIdentifier","src":"3676:10:22"}],"functionName":{"name":"sub","nativeSrc":"3662:3:22","nodeType":"YulIdentifier","src":"3662:3:22"},"nativeSrc":"3662:25:22","nodeType":"YulFunctionCall","src":"3662:25:22"},"variableNames":[{"name":"lengthOut","nativeSrc":"3649:9:22","nodeType":"YulIdentifier","src":"3649:9:22"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nativeSrc":"3362:331:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3426:6:22","nodeType":"YulTypedName","src":"3426:6:22","type":""},{"name":"length","nativeSrc":"3434:6:22","nodeType":"YulTypedName","src":"3434:6:22","type":""},{"name":"startIndex","nativeSrc":"3442:10:22","nodeType":"YulTypedName","src":"3442:10:22","type":""},{"name":"endIndex","nativeSrc":"3454:8:22","nodeType":"YulTypedName","src":"3454:8:22","type":""}],"returnVariables":[{"name":"offsetOut","nativeSrc":"3467:9:22","nodeType":"YulTypedName","src":"3467:9:22","type":""},{"name":"lengthOut","nativeSrc":"3478:9:22","nodeType":"YulTypedName","src":"3478:9:22","type":""}],"src":"3362:331:22"},{"body":{"nativeSrc":"3799:273:22","nodeType":"YulBlock","src":"3799:273:22","statements":[{"nativeSrc":"3809:29:22","nodeType":"YulVariableDeclaration","src":"3809:29:22","value":{"arguments":[{"name":"array","nativeSrc":"3832:5:22","nodeType":"YulIdentifier","src":"3832:5:22"}],"functionName":{"name":"calldataload","nativeSrc":"3819:12:22","nodeType":"YulIdentifier","src":"3819:12:22"},"nativeSrc":"3819:19:22","nodeType":"YulFunctionCall","src":"3819:19:22"},"variables":[{"name":"_1","nativeSrc":"3813:2:22","nodeType":"YulTypedName","src":"3813:2:22","type":""}]},{"nativeSrc":"3847:49:22","nodeType":"YulAssignment","src":"3847:49:22","value":{"arguments":[{"name":"_1","nativeSrc":"3860:2:22","nodeType":"YulIdentifier","src":"3860:2:22"},{"arguments":[{"kind":"number","nativeSrc":"3868:26:22","nodeType":"YulLiteral","src":"3868:26:22","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"3864:3:22","nodeType":"YulIdentifier","src":"3864:3:22"},"nativeSrc":"3864:31:22","nodeType":"YulFunctionCall","src":"3864:31:22"}],"functionName":{"name":"and","nativeSrc":"3856:3:22","nodeType":"YulIdentifier","src":"3856:3:22"},"nativeSrc":"3856:40:22","nodeType":"YulFunctionCall","src":"3856:40:22"},"variableNames":[{"name":"value","nativeSrc":"3847:5:22","nodeType":"YulIdentifier","src":"3847:5:22"}]},{"body":{"nativeSrc":"3928:138:22","nodeType":"YulBlock","src":"3928:138:22","statements":[{"nativeSrc":"3942:114:22","nodeType":"YulAssignment","src":"3942:114:22","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"3959:2:22","nodeType":"YulIdentifier","src":"3959:2:22"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3971:1:22","nodeType":"YulLiteral","src":"3971:1:22","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"3978:2:22","nodeType":"YulLiteral","src":"3978:2:22","type":"","value":"20"},{"name":"len","nativeSrc":"3982:3:22","nodeType":"YulIdentifier","src":"3982:3:22"}],"functionName":{"name":"sub","nativeSrc":"3974:3:22","nodeType":"YulIdentifier","src":"3974:3:22"},"nativeSrc":"3974:12:22","nodeType":"YulFunctionCall","src":"3974:12:22"}],"functionName":{"name":"shl","nativeSrc":"3967:3:22","nodeType":"YulIdentifier","src":"3967:3:22"},"nativeSrc":"3967:20:22","nodeType":"YulFunctionCall","src":"3967:20:22"},{"arguments":[{"kind":"number","nativeSrc":"3993:26:22","nodeType":"YulLiteral","src":"3993:26:22","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"3989:3:22","nodeType":"YulIdentifier","src":"3989:3:22"},"nativeSrc":"3989:31:22","nodeType":"YulFunctionCall","src":"3989:31:22"}],"functionName":{"name":"shl","nativeSrc":"3963:3:22","nodeType":"YulIdentifier","src":"3963:3:22"},"nativeSrc":"3963:58:22","nodeType":"YulFunctionCall","src":"3963:58:22"}],"functionName":{"name":"and","nativeSrc":"3955:3:22","nodeType":"YulIdentifier","src":"3955:3:22"},"nativeSrc":"3955:67:22","nodeType":"YulFunctionCall","src":"3955:67:22"},{"arguments":[{"kind":"number","nativeSrc":"4028:26:22","nodeType":"YulLiteral","src":"4028:26:22","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nativeSrc":"4024:3:22","nodeType":"YulIdentifier","src":"4024:3:22"},"nativeSrc":"4024:31:22","nodeType":"YulFunctionCall","src":"4024:31:22"}],"functionName":{"name":"and","nativeSrc":"3951:3:22","nodeType":"YulIdentifier","src":"3951:3:22"},"nativeSrc":"3951:105:22","nodeType":"YulFunctionCall","src":"3951:105:22"},"variableNames":[{"name":"value","nativeSrc":"3942:5:22","nodeType":"YulIdentifier","src":"3942:5:22"}]}]},"condition":{"arguments":[{"name":"len","nativeSrc":"3911:3:22","nodeType":"YulIdentifier","src":"3911:3:22"},{"kind":"number","nativeSrc":"3916:2:22","nodeType":"YulLiteral","src":"3916:2:22","type":"","value":"20"}],"functionName":{"name":"lt","nativeSrc":"3908:2:22","nodeType":"YulIdentifier","src":"3908:2:22"},"nativeSrc":"3908:11:22","nodeType":"YulFunctionCall","src":"3908:11:22"},"nativeSrc":"3905:161:22","nodeType":"YulIf","src":"3905:161:22"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20","nativeSrc":"3698:374:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"3774:5:22","nodeType":"YulTypedName","src":"3774:5:22","type":""},{"name":"len","nativeSrc":"3781:3:22","nodeType":"YulTypedName","src":"3781:3:22","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3789:5:22","nodeType":"YulTypedName","src":"3789:5:22","type":""}],"src":"3698:374:22"},{"body":{"nativeSrc":"4224:124:22","nodeType":"YulBlock","src":"4224:124:22","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4247:3:22","nodeType":"YulIdentifier","src":"4247:3:22"},{"name":"value0","nativeSrc":"4252:6:22","nodeType":"YulIdentifier","src":"4252:6:22"},{"name":"value1","nativeSrc":"4260:6:22","nodeType":"YulIdentifier","src":"4260:6:22"}],"functionName":{"name":"calldatacopy","nativeSrc":"4234:12:22","nodeType":"YulIdentifier","src":"4234:12:22"},"nativeSrc":"4234:33:22","nodeType":"YulFunctionCall","src":"4234:33:22"},"nativeSrc":"4234:33:22","nodeType":"YulExpressionStatement","src":"4234:33:22"},{"nativeSrc":"4276:26:22","nodeType":"YulVariableDeclaration","src":"4276:26:22","value":{"arguments":[{"name":"pos","nativeSrc":"4290:3:22","nodeType":"YulIdentifier","src":"4290:3:22"},{"name":"value1","nativeSrc":"4295:6:22","nodeType":"YulIdentifier","src":"4295:6:22"}],"functionName":{"name":"add","nativeSrc":"4286:3:22","nodeType":"YulIdentifier","src":"4286:3:22"},"nativeSrc":"4286:16:22","nodeType":"YulFunctionCall","src":"4286:16:22"},"variables":[{"name":"_1","nativeSrc":"4280:2:22","nodeType":"YulTypedName","src":"4280:2:22","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"4318:2:22","nodeType":"YulIdentifier","src":"4318:2:22"},{"kind":"number","nativeSrc":"4322:1:22","nodeType":"YulLiteral","src":"4322:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4311:6:22","nodeType":"YulIdentifier","src":"4311:6:22"},"nativeSrc":"4311:13:22","nodeType":"YulFunctionCall","src":"4311:13:22"},"nativeSrc":"4311:13:22","nodeType":"YulExpressionStatement","src":"4311:13:22"},{"nativeSrc":"4333:9:22","nodeType":"YulAssignment","src":"4333:9:22","value":{"name":"_1","nativeSrc":"4340:2:22","nodeType":"YulIdentifier","src":"4340:2:22"},"variableNames":[{"name":"end","nativeSrc":"4333:3:22","nodeType":"YulIdentifier","src":"4333:3:22"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"4077:271:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4192:3:22","nodeType":"YulTypedName","src":"4192:3:22","type":""},{"name":"value1","nativeSrc":"4197:6:22","nodeType":"YulTypedName","src":"4197:6:22","type":""},{"name":"value0","nativeSrc":"4205:6:22","nodeType":"YulTypedName","src":"4205:6:22","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4216:3:22","nodeType":"YulTypedName","src":"4216:3:22","type":""}],"src":"4077:271:22"},{"body":{"nativeSrc":"4527:172:22","nodeType":"YulBlock","src":"4527:172:22","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4544:9:22","nodeType":"YulIdentifier","src":"4544:9:22"},{"kind":"number","nativeSrc":"4555:2:22","nodeType":"YulLiteral","src":"4555:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4537:6:22","nodeType":"YulIdentifier","src":"4537:6:22"},"nativeSrc":"4537:21:22","nodeType":"YulFunctionCall","src":"4537:21:22"},"nativeSrc":"4537:21:22","nodeType":"YulExpressionStatement","src":"4537:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4578:9:22","nodeType":"YulIdentifier","src":"4578:9:22"},{"kind":"number","nativeSrc":"4589:2:22","nodeType":"YulLiteral","src":"4589:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4574:3:22","nodeType":"YulIdentifier","src":"4574:3:22"},"nativeSrc":"4574:18:22","nodeType":"YulFunctionCall","src":"4574:18:22"},{"kind":"number","nativeSrc":"4594:2:22","nodeType":"YulLiteral","src":"4594:2:22","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"4567:6:22","nodeType":"YulIdentifier","src":"4567:6:22"},"nativeSrc":"4567:30:22","nodeType":"YulFunctionCall","src":"4567:30:22"},"nativeSrc":"4567:30:22","nodeType":"YulExpressionStatement","src":"4567:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4617:9:22","nodeType":"YulIdentifier","src":"4617:9:22"},{"kind":"number","nativeSrc":"4628:2:22","nodeType":"YulLiteral","src":"4628:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4613:3:22","nodeType":"YulIdentifier","src":"4613:3:22"},"nativeSrc":"4613:18:22","nodeType":"YulFunctionCall","src":"4613:18:22"},{"hexValue":"6163636f756e743a2063616c6c207265766572746564","kind":"string","nativeSrc":"4633:24:22","nodeType":"YulLiteral","src":"4633:24:22","type":"","value":"account: call reverted"}],"functionName":{"name":"mstore","nativeSrc":"4606:6:22","nodeType":"YulIdentifier","src":"4606:6:22"},"nativeSrc":"4606:52:22","nodeType":"YulFunctionCall","src":"4606:52:22"},"nativeSrc":"4606:52:22","nodeType":"YulExpressionStatement","src":"4606:52:22"},{"nativeSrc":"4667:26:22","nodeType":"YulAssignment","src":"4667:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4679:9:22","nodeType":"YulIdentifier","src":"4679:9:22"},{"kind":"number","nativeSrc":"4690:2:22","nodeType":"YulLiteral","src":"4690:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4675:3:22","nodeType":"YulIdentifier","src":"4675:3:22"},"nativeSrc":"4675:18:22","nodeType":"YulFunctionCall","src":"4675:18:22"},"variableNames":[{"name":"tail","nativeSrc":"4667:4:22","nodeType":"YulIdentifier","src":"4667:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b1ca099c4e784e19975c481999e983d66a2fe4630ff354c3cdabe0c83aea2350__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4353:346:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4504:9:22","nodeType":"YulTypedName","src":"4504:9:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4518:4:22","nodeType":"YulTypedName","src":"4518:4:22","type":""}],"src":"4353:346:22"},{"body":{"nativeSrc":"4736:95:22","nodeType":"YulBlock","src":"4736:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4753:1:22","nodeType":"YulLiteral","src":"4753:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"4760:3:22","nodeType":"YulLiteral","src":"4760:3:22","type":"","value":"224"},{"kind":"number","nativeSrc":"4765:10:22","nodeType":"YulLiteral","src":"4765:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"4756:3:22","nodeType":"YulIdentifier","src":"4756:3:22"},"nativeSrc":"4756:20:22","nodeType":"YulFunctionCall","src":"4756:20:22"}],"functionName":{"name":"mstore","nativeSrc":"4746:6:22","nodeType":"YulIdentifier","src":"4746:6:22"},"nativeSrc":"4746:31:22","nodeType":"YulFunctionCall","src":"4746:31:22"},"nativeSrc":"4746:31:22","nodeType":"YulExpressionStatement","src":"4746:31:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4793:1:22","nodeType":"YulLiteral","src":"4793:1:22","type":"","value":"4"},{"kind":"number","nativeSrc":"4796:4:22","nodeType":"YulLiteral","src":"4796:4:22","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"4786:6:22","nodeType":"YulIdentifier","src":"4786:6:22"},"nativeSrc":"4786:15:22","nodeType":"YulFunctionCall","src":"4786:15:22"},"nativeSrc":"4786:15:22","nodeType":"YulExpressionStatement","src":"4786:15:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4817:1:22","nodeType":"YulLiteral","src":"4817:1:22","type":"","value":"0"},{"kind":"number","nativeSrc":"4820:4:22","nodeType":"YulLiteral","src":"4820:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4810:6:22","nodeType":"YulIdentifier","src":"4810:6:22"},"nativeSrc":"4810:15:22","nodeType":"YulFunctionCall","src":"4810:15:22"},"nativeSrc":"4810:15:22","nodeType":"YulExpressionStatement","src":"4810:15:22"}]},"name":"panic_error_0x21","nativeSrc":"4704:127:22","nodeType":"YulFunctionDefinition","src":"4704:127:22"},{"body":{"nativeSrc":"4937:76:22","nodeType":"YulBlock","src":"4937:76:22","statements":[{"nativeSrc":"4947:26:22","nodeType":"YulAssignment","src":"4947:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"4959:9:22","nodeType":"YulIdentifier","src":"4959:9:22"},{"kind":"number","nativeSrc":"4970:2:22","nodeType":"YulLiteral","src":"4970:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4955:3:22","nodeType":"YulIdentifier","src":"4955:3:22"},"nativeSrc":"4955:18:22","nodeType":"YulFunctionCall","src":"4955:18:22"},"variableNames":[{"name":"tail","nativeSrc":"4947:4:22","nodeType":"YulIdentifier","src":"4947:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4989:9:22","nodeType":"YulIdentifier","src":"4989:9:22"},{"name":"value0","nativeSrc":"5000:6:22","nodeType":"YulIdentifier","src":"5000:6:22"}],"functionName":{"name":"mstore","nativeSrc":"4982:6:22","nodeType":"YulIdentifier","src":"4982:6:22"},"nativeSrc":"4982:25:22","nodeType":"YulFunctionCall","src":"4982:25:22"},"nativeSrc":"4982:25:22","nodeType":"YulExpressionStatement","src":"4982:25:22"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"4836:177:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4906:9:22","nodeType":"YulTypedName","src":"4906:9:22","type":""},{"name":"value0","nativeSrc":"4917:6:22","nodeType":"YulTypedName","src":"4917:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4928:4:22","nodeType":"YulTypedName","src":"4928:4:22","type":""}],"src":"4836:177:22"},{"body":{"nativeSrc":"5199:217:22","nodeType":"YulBlock","src":"5199:217:22","statements":[{"nativeSrc":"5209:27:22","nodeType":"YulAssignment","src":"5209:27:22","value":{"arguments":[{"name":"headStart","nativeSrc":"5221:9:22","nodeType":"YulIdentifier","src":"5221:9:22"},{"kind":"number","nativeSrc":"5232:3:22","nodeType":"YulLiteral","src":"5232:3:22","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5217:3:22","nodeType":"YulIdentifier","src":"5217:3:22"},"nativeSrc":"5217:19:22","nodeType":"YulFunctionCall","src":"5217:19:22"},"variableNames":[{"name":"tail","nativeSrc":"5209:4:22","nodeType":"YulIdentifier","src":"5209:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5252:9:22","nodeType":"YulIdentifier","src":"5252:9:22"},{"name":"value0","nativeSrc":"5263:6:22","nodeType":"YulIdentifier","src":"5263:6:22"}],"functionName":{"name":"mstore","nativeSrc":"5245:6:22","nodeType":"YulIdentifier","src":"5245:6:22"},"nativeSrc":"5245:25:22","nodeType":"YulFunctionCall","src":"5245:25:22"},"nativeSrc":"5245:25:22","nodeType":"YulExpressionStatement","src":"5245:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5290:9:22","nodeType":"YulIdentifier","src":"5290:9:22"},{"kind":"number","nativeSrc":"5301:2:22","nodeType":"YulLiteral","src":"5301:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5286:3:22","nodeType":"YulIdentifier","src":"5286:3:22"},"nativeSrc":"5286:18:22","nodeType":"YulFunctionCall","src":"5286:18:22"},{"arguments":[{"name":"value1","nativeSrc":"5310:6:22","nodeType":"YulIdentifier","src":"5310:6:22"},{"kind":"number","nativeSrc":"5318:4:22","nodeType":"YulLiteral","src":"5318:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"5306:3:22","nodeType":"YulIdentifier","src":"5306:3:22"},"nativeSrc":"5306:17:22","nodeType":"YulFunctionCall","src":"5306:17:22"}],"functionName":{"name":"mstore","nativeSrc":"5279:6:22","nodeType":"YulIdentifier","src":"5279:6:22"},"nativeSrc":"5279:45:22","nodeType":"YulFunctionCall","src":"5279:45:22"},"nativeSrc":"5279:45:22","nodeType":"YulExpressionStatement","src":"5279:45:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5344:9:22","nodeType":"YulIdentifier","src":"5344:9:22"},{"kind":"number","nativeSrc":"5355:2:22","nodeType":"YulLiteral","src":"5355:2:22","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5340:3:22","nodeType":"YulIdentifier","src":"5340:3:22"},"nativeSrc":"5340:18:22","nodeType":"YulFunctionCall","src":"5340:18:22"},{"name":"value2","nativeSrc":"5360:6:22","nodeType":"YulIdentifier","src":"5360:6:22"}],"functionName":{"name":"mstore","nativeSrc":"5333:6:22","nodeType":"YulIdentifier","src":"5333:6:22"},"nativeSrc":"5333:34:22","nodeType":"YulFunctionCall","src":"5333:34:22"},"nativeSrc":"5333:34:22","nodeType":"YulExpressionStatement","src":"5333:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5387:9:22","nodeType":"YulIdentifier","src":"5387:9:22"},{"kind":"number","nativeSrc":"5398:2:22","nodeType":"YulLiteral","src":"5398:2:22","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5383:3:22","nodeType":"YulIdentifier","src":"5383:3:22"},"nativeSrc":"5383:18:22","nodeType":"YulFunctionCall","src":"5383:18:22"},{"name":"value3","nativeSrc":"5403:6:22","nodeType":"YulIdentifier","src":"5403:6:22"}],"functionName":{"name":"mstore","nativeSrc":"5376:6:22","nodeType":"YulIdentifier","src":"5376:6:22"},"nativeSrc":"5376:34:22","nodeType":"YulFunctionCall","src":"5376:34:22"},"nativeSrc":"5376:34:22","nodeType":"YulExpressionStatement","src":"5376:34:22"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"5018:398:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5144:9:22","nodeType":"YulTypedName","src":"5144:9:22","type":""},{"name":"value3","nativeSrc":"5155:6:22","nodeType":"YulTypedName","src":"5155:6:22","type":""},{"name":"value2","nativeSrc":"5163:6:22","nodeType":"YulTypedName","src":"5163:6:22","type":""},{"name":"value1","nativeSrc":"5171:6:22","nodeType":"YulTypedName","src":"5171:6:22","type":""},{"name":"value0","nativeSrc":"5179:6:22","nodeType":"YulTypedName","src":"5179:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5190:4:22","nodeType":"YulTypedName","src":"5190:4:22","type":""}],"src":"5018:398:22"}]},"contents":"{\n    { }\n    function abi_decode_struct_PackedUserOperation_calldata(offset, end) -> value\n    {\n        if slt(sub(end, offset), 288) { revert(0, 0) }\n        value := offset\n    }\n    function abi_decode_tuple_t_struct$_PackedUserOperation_$7171_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_struct_PackedUserOperation_calldata(add(headStart, offset), dataEnd)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_struct$_PackedUserOperation_$7171_calldata_ptrt_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_struct_PackedUserOperation_calldata(add(headStart, offset), dataEnd)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$6970__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_520737350501b639a3040e8bfa399a40ff84f07adcf0019b13835a075606600c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"account: not EntryPoint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_bcbccd7f00a120dd5c8288fc42b2ab3be5f36e4a7bd3feb315707f263b339153__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"account: failed to fund EntryPoi\")\n        mstore(add(headStart, 96), \"nt\")\n        tail := add(headStart, 128)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20(array, len) -> value\n    {\n        let _1 := calldataload(array)\n        value := and(_1, not(0xffffffffffffffffffffffff))\n        if lt(len, 20)\n        {\n            value := and(and(_1, shl(shl(3, sub(20, len)), not(0xffffffffffffffffffffffff))), not(0xffffffffffffffffffffffff))\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_b1ca099c4e784e19975c481999e983d66a2fe4630ff354c3cdabe0c83aea2350__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"account: call reverted\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"5978":[{"length":32,"start":230},{"length":32,"start":276},{"length":32,"start":582}]},"linkReferences":{},"object":"608060405260043610610041575f3560e01c806319822f7c1461004c5780638da5cb5b1461007e5780638dd7712f146100b4578063b0d691fe146100d5575f5ffd5b3661004857005b5f5ffd5b348015610057575f5ffd5b5061006b610066366004610671565b610108565b6040519081526020015b60405180910390f35b348015610089575f5ffd5b505f5461009c906001600160a01b031681565b6040516001600160a01b039091168152602001610075565b3480156100bf575f5ffd5b506100d36100ce3660046106bb565b61023b565b005b3480156100e0575f5ffd5b5061009c7f000000000000000000000000000000000000000000000000000000000000000081565b5f336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101805760405162461bcd60e51b81526020600482015260176024820152761858d8dbdd5b9d0e881b9bdd08115b9d1c9e541bda5b9d604a1b60448201526064015b60405180910390fd5b61018a84846102c6565b90508115610234576040515f90339084908381818185875af1925050503d805f81146101d1576040519150601f19603f3d011682016040523d82523d5f602084013e6101d6565b606091505b50509050806102325760405162461bcd60e51b815260206004820152602260248201527f6163636f756e743a206661696c656420746f2066756e6420456e747279506f696044820152611b9d60f21b6064820152608401610177565b505b9392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102ad5760405162461bcd60e51b81526020600482015260176024820152761858d8dbdd5b9d0e881b9bdd08115b9d1c9e541bda5b9d604a1b6044820152606401610177565b6102c26102bd60608401846106fd565b610370565b5050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f908152601c829052603c81205f6103426103066101008701876106fd565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525086939250506104699050565b5f549091506001600160a01b038083169116146103645760019250505061036a565b5f925050505b92915050565b5f81900361037c575050565b5f61038a6014828486610747565b6103939161076e565b60601c9050365f6103a78460148188610747565b915091505f5f846001600160a01b031684846040516103c79291906107bb565b5f604051808303815f865af19150503d805f8114610400576040519150601f19603f3d011682016040523d82523d5f602084013e610405565b606091505b5091509150816104605780515f036104585760405162461bcd60e51b81526020600482015260166024820152751858d8dbdd5b9d0e8818d85b1b081c995d995c9d195960521b6044820152606401610177565b805160208201fd5b50505050505050565b5f5f5f5f6104778686610491565b92509250925061048782826104da565b5090949350505050565b5f5f5f83516041036104c8576020840151604085015160608601515f1a6104ba88828585610592565b9550955095505050506104d3565b505081515f91506002905b9250925092565b5f8260038111156104ed576104ed6107ca565b036104f6575050565b600182600381111561050a5761050a6107ca565b036105285760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561053c5761053c6107ca565b0361055d5760405163fce698f760e01b815260048101829052602401610177565b6003826003811115610571576105716107ca565b036102c2576040516335e2f38360e21b815260048101829052602401610177565b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156105cb57505f91506003905082610650565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561061c573d5f5f3e3d5ffd5b5050604051601f1901519150506001600160a01b03811661064757505f925060019150829050610650565b92505f91508190505b9450945094915050565b5f610120828403121561066b575f5ffd5b50919050565b5f5f5f60608486031215610683575f5ffd5b833567ffffffffffffffff811115610699575f5ffd5b6106a58682870161065a565b9660208601359650604090950135949350505050565b5f5f604083850312156106cc575f5ffd5b823567ffffffffffffffff8111156106e2575f5ffd5b6106ee8582860161065a565b95602094909401359450505050565b5f5f8335601e19843603018112610712575f5ffd5b83018035915067ffffffffffffffff82111561072c575f5ffd5b602001915036819003821315610740575f5ffd5b9250929050565b5f5f85851115610755575f5ffd5b83861115610761575f5ffd5b5050820193919092039150565b80356bffffffffffffffffffffffff1981169060148410156107b4576bffffffffffffffffffffffff196bffffffffffffffffffffffff198560140360031b1b82161691505b5092915050565b818382375f9101908152919050565b634e487b7160e01b5f52602160045260245ffdfea2646970667358221220bd0eaea7e252a492d41698283e78491e706cc47abaa69998cb7c53a8d7e6696164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19822F7C EQ PUSH2 0x4C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8DD7712F EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0xD5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x48 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x6B PUSH2 0x66 CALLDATASIZE PUSH1 0x4 PUSH2 0x671 JUMP JUMPDEST PUSH2 0x108 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x9C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x75 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x6BB JUMP JUMPDEST PUSH2 0x23B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x9C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x1858D8DBDD5B9D0E881B9BDD08115B9D1C9E541BDA5B9D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18A DUP5 DUP5 PUSH2 0x2C6 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x234 JUMPI PUSH1 0x40 MLOAD PUSH0 SWAP1 CALLER SWAP1 DUP5 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1D1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x232 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6163636F756E743A206661696C656420746F2066756E6420456E747279506F69 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1B9D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x177 JUMP JUMPDEST POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x2AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x1858D8DBDD5B9D0E881B9BDD08115B9D1C9E541BDA5B9D PUSH1 0x4A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x177 JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x2BD PUSH1 0x60 DUP5 ADD DUP5 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1C DUP3 SWAP1 MSTORE PUSH1 0x3C DUP2 KECCAK256 PUSH0 PUSH2 0x342 PUSH2 0x306 PUSH2 0x100 DUP8 ADD DUP8 PUSH2 0x6FD JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP7 SWAP4 SWAP3 POP POP PUSH2 0x469 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0x364 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x36A JUMP JUMPDEST PUSH0 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 SUB PUSH2 0x37C JUMPI POP POP JUMP JUMPDEST PUSH0 PUSH2 0x38A PUSH1 0x14 DUP3 DUP5 DUP7 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x393 SWAP2 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 POP CALLDATASIZE PUSH0 PUSH2 0x3A7 DUP5 PUSH1 0x14 DUP2 DUP9 PUSH2 0x747 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP3 SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x400 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x405 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x460 JUMPI DUP1 MLOAD PUSH0 SUB PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1858D8DBDD5B9D0E8818D85B1B081C995D995C9D1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x177 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x477 DUP7 DUP7 PUSH2 0x491 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x487 DUP3 DUP3 PUSH2 0x4DA JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x4C8 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH0 BYTE PUSH2 0x4BA DUP9 DUP3 DUP6 DUP6 PUSH2 0x592 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x4D3 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4ED PUSH2 0x7CA JUMP JUMPDEST SUB PUSH2 0x4F6 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x50A JUMPI PUSH2 0x50A PUSH2 0x7CA JUMP JUMPDEST SUB PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x53C JUMPI PUSH2 0x53C PUSH2 0x7CA JUMP JUMPDEST SUB PUSH2 0x55D JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x177 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x571 JUMPI PUSH2 0x571 PUSH2 0x7CA JUMP JUMPDEST SUB PUSH2 0x2C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x177 JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x5CB JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x61C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x647 JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x650 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x683 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x699 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6A5 DUP7 DUP3 DUP8 ADD PUSH2 0x65A JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6E2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6EE DUP6 DUP3 DUP7 ADD PUSH2 0x65A JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x712 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x72C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x740 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP6 DUP6 GT ISZERO PUSH2 0x755 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x761 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND SWAP1 PUSH1 0x14 DUP5 LT ISZERO PUSH2 0x7B4 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP6 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP3 AND AND SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xE 0xAE 0xA7 0xE2 MSTORE LOG4 SWAP3 0xD4 AND SWAP9 0x28 RETURNDATACOPY PUSH25 0x491E706CC47ABAA69998CB7C53A8D7E6696164736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"385:2585:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1136:493;;;;;;;;;;-1:-1:-1;1136:493:10;;;;;:::i;:::-;;:::i;:::-;;;900:25:22;;;888:2;873:18;1136:493:10;;;;;;;;561:20;;;;;;;;;;-1:-1:-1;561:20:10;;;;-1:-1:-1;;;;;561:20:10;;;;;;-1:-1:-1;;;;;1100:32:22;;;1082:51;;1070:2;1055:18;561:20:10;936:203:22;1674:188:10;;;;;;;;;;-1:-1:-1;1674:188:10;;;;;:::i;:::-;;:::i;:::-;;515:39;;;;;;;;;;;;;;;1136:493;1322:22;833:10;-1:-1:-1;;;;;855:10:10;833:33;;825:69;;;;-1:-1:-1;;;825:69:10;;2073:2:22;825:69:10;;;2055:21:22;2112:2;2092:18;;;2085:30;-1:-1:-1;;;2131:18:22;;;2124:53;2194:18;;825:69:10;;;;;;;;;1374:38:::1;1393:6;1401:10;1374:18;:38::i;:::-;1357:55:::0;-1:-1:-1;1427:23:10;;1423:199:::1;;1485:56;::::0;1468:12:::1;::::0;1493:10:::1;::::0;1517:19;;1468:12;1485:56;1468:12;1485:56;1517:19;1493:10;1485:56:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1467:74;;;1564:7;1556:54;;;::::0;-1:-1:-1;;;1556:54:10;;2635:2:22;1556:54:10::1;::::0;::::1;2617:21:22::0;2674:2;2654:18;;;2647:30;2713:34;2693:18;;;2686:62;-1:-1:-1;;;2764:18:22;;;2757:32;2806:19;;1556:54:10::1;2433:398:22::0;1556:54:10::1;1452:170;1423:199;1136:493:::0;;;;;:::o;1674:188::-;833:10;-1:-1:-1;;;;;855:10:10;833:33;;825:69;;;;-1:-1:-1;;;825:69:10;;2073:2:22;825:69:10;;;2055:21:22;2112:2;2092:18;;;2085:30;-1:-1:-1;;;2131:18:22;;;2124:53;2194:18;;825:69:10;1871:347:22;825:69:10;1823:31:::1;1838:15;;::::0;::::1;:6:::0;:15:::1;:::i;:::-;1823:14;:31::i;:::-;1674:188:::0;;:::o;1870:415::-;1401:34:5;2003:22:10;1388:48:5;;;1497:4;1490:25;;;1595:4;1579:21;;2099:17:10;2119:30;2132:16;;;;:6;:16;:::i;:::-;2119:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2119:4:10;;:30;-1:-1:-1;;2119:12:10;:30;-1:-1:-1;2119:30:10:i;:::-;2177:5;;2099:50;;-1:-1:-1;;;;;;2164:18:10;;;2177:5;;2164:18;2160:80;;2206:1;2199:8;;;;;;2160:80;2257:1;2250:8;;;;1870:415;;;;;:::o;2293:596::-;2385:1;2366:20;;;2362:59;;2293:596;;:::o;2362:59::-;2482:14;2515;2526:2;2482:14;2515:8;;:14;:::i;:::-;2507:23;;;:::i;:::-;2499:32;;;-1:-1:-1;2542:19:10;;2564:13;:8;2573:2;2564:8;;:13;:::i;:::-;2542:35;;;;2591:12;2605:19;2628:6;-1:-1:-1;;;;;2628:11:10;2640:4;;2628:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2590:55;;;;2661:7;2656:226;;2689:6;:13;2706:1;2689:18;2685:91;;2728:32;;-1:-1:-1;;;2728:32:10;;4555:2:22;2728:32:10;;;4537:21:22;4594:2;4574:18;;;4567:30;-1:-1:-1;;;4613:18:22;;;4606:52;4675:18;;2728:32:10;4353:346:22;2685:91:10;2848:6;2842:13;2837:2;2829:6;2825:15;2818:38;2656:226;2351:538;;;;;2293:596;;:::o;3714:255:4:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:4;;3714:255;-1:-1:-1;;;;3714:255:4:o;2129:778::-;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:4;;2823:1;;-1:-1:-1;2827:35:4;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:4;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:4;;;;;900:25:22;;;873:18;;7634:46:4;754:177:22;7563:243:4;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:4;;;;;900:25:22;;;873:18;;7763:32:4;754:177:22;5203:1551:4;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:4;;-1:-1:-1;6385:30:4;;-1:-1:-1;6417:1:4;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;5245:25:22;;;5318:4;5306:17;;5286:18;;;5279:45;;;;5340:18;;;5333:34;;;5383:18;;;5376:34;;;6541:24:4;;5217:19:22;;6541:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:4;;-1:-1:-1;;6541:24:4;;;-1:-1:-1;;;;;;;6579:20:4;;6575:113;;-1:-1:-1;6631:1:4;;-1:-1:-1;6635:29:4;;-1:-1:-1;6631:1:4;;-1:-1:-1;6615:62:4;;6575:113;6706:6;-1:-1:-1;6714:20:4;;-1:-1:-1;6714:20:4;;-1:-1:-1;5203:1551:4;;;;;;;;;:::o;14:168:22:-;86:5;131:3;122:6;117:3;113:16;109:26;106:46;;;148:1;145;138:12;106:46;-1:-1:-1;170:6:22;14:168;-1:-1:-1;14:168:22:o;187:562::-;303:6;311;319;372:2;360:9;351:7;347:23;343:32;340:52;;;388:1;385;378:12;340:52;428:9;415:23;461:18;453:6;450:30;447:50;;;493:1;490;483:12;447:50;516:79;587:7;578:6;567:9;563:22;516:79;:::i;:::-;506:89;664:2;649:18;;636:32;;-1:-1:-1;739:2:22;724:18;;;711:32;;187:562;-1:-1:-1;;;;187:562:22:o;1144:494::-;1251:6;1259;1312:2;1300:9;1291:7;1287:23;1283:32;1280:52;;;1328:1;1325;1318:12;1280:52;1368:9;1355:23;1401:18;1393:6;1390:30;1387:50;;;1433:1;1430;1423:12;1387:50;1456:79;1527:7;1518:6;1507:9;1503:22;1456:79;:::i;:::-;1446:89;1604:2;1589:18;;;;1576:32;;-1:-1:-1;;;;1144:494:22:o;2836:521::-;2913:4;2919:6;2979:11;2966:25;3073:2;3069:7;3058:8;3042:14;3038:29;3034:43;3014:18;3010:68;3000:96;;3092:1;3089;3082:12;3000:96;3119:33;;3171:20;;;-1:-1:-1;3214:18:22;3203:30;;3200:50;;;3246:1;3243;3236:12;3200:50;3279:4;3267:17;;-1:-1:-1;3310:14:22;3306:27;;;3296:38;;3293:58;;;3347:1;3344;3337:12;3293:58;2836:521;;;;;:::o;3362:331::-;3467:9;3478;3520:8;3508:10;3505:24;3502:44;;;3542:1;3539;3532:12;3502:44;3571:6;3561:8;3558:20;3555:40;;;3591:1;3588;3581:12;3555:40;-1:-1:-1;;3617:23:22;;;3662:25;;;;;-1:-1:-1;3362:331:22:o;3698:374::-;3819:19;;-1:-1:-1;;3856:40:22;;;3916:2;3908:11;;3905:161;;;4028:26;4024:31;3993:26;3989:31;3982:3;3978:2;3974:12;3971:1;3967:20;3963:58;3959:2;3955:67;3951:105;3942:114;;3905:161;;3698:374;;;;:::o;4077:271::-;4260:6;4252;4247:3;4234:33;4216:3;4286:16;;4311:13;;;4286:16;4077:271;-1:-1:-1;4077:271:22:o;4704:127::-;4765:10;4760:3;4756:20;4753:1;4746:31;4796:4;4793:1;4786:15;4820:4;4817:1;4810:15"},"methodIdentifiers":{"entryPoint()":"b0d691fe","executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)":"8dd7712f","owner()":"8da5cb5b","validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"AccountInitialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"}],\"name\":\"executeUserOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{\"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)\":{\"params\":{\"userOp\":\"- The operation that was just validated.\",\"userOpHash\":\"- Hash of the user's request data.\"}},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"aggregator\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)\":{\"notice\":\"Account may implement this execute method. passing this methodSig at the beginning of callData will cause the entryPoint to pass the full UserOp (and hash) to the account. The account should skip the methodSig, and use the callData (and optionally, other UserOp fields)\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestAccount.sol\":\"TestAccount\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/TestAccount.sol\":{\"keccak256\":\"0xb428a5f907712c20f47a15dfc634f184a019d8c97683d31bccc06f0b9f4f1cfa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0707fe589fadbfbc6b7e59930329d9ecd49ede351e534a0977d23128066d2639\",\"dweb:/ipfs/QmVu6VNnq4r7XxSW31dKJnadiEf4mnxkgfX6EjV2AenSZU\"]},\"contracts/lib/core/Helpers.sol\":{\"keccak256\":\"0xb310f29da120341cb703a591bc0c94ae2329d391eeb18cf3b9679bbc45da0ece\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://193e652b6cac47388261f61f66f722363b8454c3f884cc2b6d113665f939e0a4\",\"dweb:/ipfs/QmfYJGvTcWGqQipV3cSdxWb5Yuf5UCXMY6QqgLpAsrmQsr\"]},\"contracts/lib/core/UserOperationLib.sol\":{\"keccak256\":\"0x2d3450fa3906422b6fdbbe7f2a2a9e36d6f3751bfa9cd80af88befd6a5be78c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a0ef5295d7f2016e99d2c228958f7f6de94f5bd9652d8696af15af0094a99\",\"dweb:/ipfs/QmVg4fhkZbUB7AopGcaVPmTdvChq7W9ga8fjrc3XaJNTM2\"]},\"contracts/lib/interfaces/IAccount.sol\":{\"keccak256\":\"0x9202b3c0bc502fb070ea3bcc5edfbc796ad96dbd4779022ca4da800c17050701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://427001b5239708796f42acf60147e866e7087bcb746dc60cf4467b2ab1373ffe\",\"dweb:/ipfs/QmRvmZamEpWMfA7KnB74DhQFmxdeZbQvuPn8qg2mCUVuCq\"]},\"contracts/lib/interfaces/IAccountExecute.sol\":{\"keccak256\":\"0x1fc27645c344eed5d47bc648c781af041896090899ba0ef59f6df9f1322de983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33edc9ca30f81d9c88d53f9c53b69fd98e0ef27a0ef97893657b32691d700f22\",\"dweb:/ipfs/QmPpYSKM5Y6qW6AwZVp2RDti8uHizBNynxwkqc4igueZPo\"]},\"contracts/lib/interfaces/IAggregator.sol\":{\"keccak256\":\"0xd59862223f3f946ae2f27aeb21dcefd5871c2033082ab8bee00991bf5adc2ec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2089752bdb69c637606a251d74fdd1f6c86c8004eb20b1017f3aed8817bdbb9\",\"dweb:/ipfs/QmTvCNxn4VFWQGvsKR3jJmEoAkaAnkkBoZUUasqvdQF2pS\"]},\"contracts/lib/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x17386db872e43c625a5b448bba2f8bab23fac44c24d6816d5131c5b6614d4159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b3c7d099969eae9a3f9a9da40d0a253eb322e9c9900ba61e60fb4403b65c3f3\",\"dweb:/ipfs/QmcBxjUmpJocTnWc5ivgvPFACANX651CAz9LjJNcWkCagz\"]},\"contracts/lib/interfaces/INonceManager.sol\":{\"keccak256\":\"0x36d3c27fd64c5ba333ac7ae1f02c4a63411a0413c9073277b135a6e5a29ba88e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://910710c795e905859cbc0a794a6579b53f3de65de034040f084e78cf4c8174f0\",\"dweb:/ipfs/QmcDRaqpMQgpB5APn28xa98Z5wuKHMauwCvbtTxzN7oAJm\"]},\"contracts/lib/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0xffc5e46332115ebdada7a8bc8ff9e321ae43ab6258d7e8d7565658b402f32bcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383abd8dc9fcbb1552a3fc8c27474009ecc0a6a890384b1b9da0eb4da7c4cd1a\",\"dweb:/ipfs/QmWR1o5rAqFMXbn1gCUDTa7LB7tEjXjt6HFGK1VrVNU8At\"]},\"contracts/lib/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x9c10ab71a97344d2b8d0469aeac476d69fb2ae50e65c1a548e34ca482c452d6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7d60e99b6f6311a558bf17778dfb8cfa1a287c85fce61c8fdf1b15e3f99939\",\"dweb:/ipfs/QmRX4E2kayv2fYASCGmUAc3MhUsv9hLjM7MQ5LSfaK4hpz\"]},\"contracts/lib/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xe2f47d598c66f1b9e619ff73f768f677bc4244e8a3d3441742a7a5188a3b4053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5159ad9e8ce8642cafd4f3cd77e522036f30478066604eadd11b344f0959029\",\"dweb:/ipfs/QmUXNkJ3bQSCXUqrGKpnnJipywJA1XDgYi6WGrVzznqRzH\"]}},\"version\":1}"}},"contracts/lib/core/UserOperationLib.sol":{"UserOperationLib":{"abi":[{"inputs":[],"name":"PAYMASTER_DATA_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_POSTOP_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_VALIDATION_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a76032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106046575f3560e01c806325093e1b14604a578063b29a8ff4146063578063ede3150214606a575b5f5ffd5b6051602481565b60405190815260200160405180910390f35b6051601481565b605160348156fea26469706673582212201cb2b01fb83ea887fc3fefea87fcaee3e727f048af20ece90e77d2217494dadd64736f6c634300081c0033","opcodes":"PUSH1 0xA7 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x46 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4A JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x63 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x6A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x51 PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x51 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x51 PUSH1 0x34 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xB2 0xB0 0x1F 0xB8 RETURNDATACOPY 0xA8 DUP8 0xFC EXTCODEHASH 0xEF 0xEA DUP8 0xFC 0xAE 0xE3 0xE7 0x27 CREATE BASEFEE 0xAF KECCAK256 0xEC 0xE9 0xE PUSH24 0xD2217494DADD64736F6C634300081C003300000000000000 ","sourceMap":"278:4766:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;278:4766:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PAYMASTER_DATA_OFFSET_6401":{"entryPoint":null,"id":6401,"parameterSlots":0,"returnSlots":0},"@PAYMASTER_POSTOP_GAS_OFFSET_6398":{"entryPoint":null,"id":6398,"parameterSlots":0,"returnSlots":0},"@PAYMASTER_VALIDATION_GAS_OFFSET_6395":{"entryPoint":null,"id":6395,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:201:22","nodeType":"YulBlock","src":"0:201:22","statements":[{"nativeSrc":"6:3:22","nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nativeSrc":"123:76:22","nodeType":"YulBlock","src":"123:76:22","statements":[{"nativeSrc":"133:26:22","nodeType":"YulAssignment","src":"133:26:22","value":{"arguments":[{"name":"headStart","nativeSrc":"145:9:22","nodeType":"YulIdentifier","src":"145:9:22"},{"kind":"number","nativeSrc":"156:2:22","nodeType":"YulLiteral","src":"156:2:22","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"141:3:22","nodeType":"YulIdentifier","src":"141:3:22"},"nativeSrc":"141:18:22","nodeType":"YulFunctionCall","src":"141:18:22"},"variableNames":[{"name":"tail","nativeSrc":"133:4:22","nodeType":"YulIdentifier","src":"133:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"175:9:22","nodeType":"YulIdentifier","src":"175:9:22"},{"name":"value0","nativeSrc":"186:6:22","nodeType":"YulIdentifier","src":"186:6:22"}],"functionName":{"name":"mstore","nativeSrc":"168:6:22","nodeType":"YulIdentifier","src":"168:6:22"},"nativeSrc":"168:25:22","nodeType":"YulFunctionCall","src":"168:25:22"},"nativeSrc":"168:25:22","nodeType":"YulExpressionStatement","src":"168:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nativeSrc":"14:185:22","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"92:9:22","nodeType":"YulTypedName","src":"92:9:22","type":""},{"name":"value0","nativeSrc":"103:6:22","nodeType":"YulTypedName","src":"103:6:22","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"114:4:22","nodeType":"YulTypedName","src":"114:4:22","type":""}],"src":"14:185:22"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600436106046575f3560e01c806325093e1b14604a578063b29a8ff4146063578063ede3150214606a575b5f5ffd5b6051602481565b60405190815260200160405180910390f35b6051601481565b605160348156fea26469706673582212201cb2b01fb83ea887fc3fefea87fcaee3e727f048af20ece90e77d2217494dadd64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x46 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4A JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x63 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x6A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x51 PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x51 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x51 PUSH1 0x34 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xB2 0xB0 0x1F 0xB8 RETURNDATACOPY 0xA8 DUP8 0xFC EXTCODEHASH 0xEF 0xEA DUP8 0xFC 0xAE 0xE3 0xE7 0x27 CREATE BASEFEE 0xAF KECCAK256 0xEC 0xE9 0xE PUSH24 0xD2217494DADD64736F6C634300081C003300000000000000 ","sourceMap":"278:4766:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;376:56;;430:2;376:56;;;;;168:25:22;;;156:2;141:18;376:56:12;;;;;;;310:60;;368:2;310:60;;438:50;;486:2;438:50;"},"methodIdentifiers":{"PAYMASTER_DATA_OFFSET()":"ede31502","PAYMASTER_POSTOP_GAS_OFFSET()":"25093e1b","PAYMASTER_VALIDATION_GAS_OFFSET()":"b29a8ff4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PAYMASTER_DATA_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_POSTOP_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_VALIDATION_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/core/UserOperationLib.sol\":\"UserOperationLib\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/core/Helpers.sol\":{\"keccak256\":\"0xb310f29da120341cb703a591bc0c94ae2329d391eeb18cf3b9679bbc45da0ece\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://193e652b6cac47388261f61f66f722363b8454c3f884cc2b6d113665f939e0a4\",\"dweb:/ipfs/QmfYJGvTcWGqQipV3cSdxWb5Yuf5UCXMY6QqgLpAsrmQsr\"]},\"contracts/lib/core/UserOperationLib.sol\":{\"keccak256\":\"0x2d3450fa3906422b6fdbbe7f2a2a9e36d6f3751bfa9cd80af88befd6a5be78c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://292a0ef5295d7f2016e99d2c228958f7f6de94f5bd9652d8696af15af0094a99\",\"dweb:/ipfs/QmVg4fhkZbUB7AopGcaVPmTdvChq7W9ga8fjrc3XaJNTM2\"]},\"contracts/lib/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xe2f47d598c66f1b9e619ff73f768f677bc4244e8a3d3441742a7a5188a3b4053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5159ad9e8ce8642cafd4f3cd77e522036f30478066604eadd11b344f0959029\",\"dweb:/ipfs/QmUXNkJ3bQSCXUqrGKpnnJipywJA1XDgYi6WGrVzznqRzH\"]}},\"version\":1}"}},"contracts/lib/interfaces/IAccount.sol":{"IAccount":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"aggregator\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/IAccount.sol\":{\"keccak256\":\"0x9202b3c0bc502fb070ea3bcc5edfbc796ad96dbd4779022ca4da800c17050701\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://427001b5239708796f42acf60147e866e7087bcb746dc60cf4467b2ab1373ffe\",\"dweb:/ipfs/QmRvmZamEpWMfA7KnB74DhQFmxdeZbQvuPn8qg2mCUVuCq\"]},\"contracts/lib/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xe2f47d598c66f1b9e619ff73f768f677bc4244e8a3d3441742a7a5188a3b4053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5159ad9e8ce8642cafd4f3cd77e522036f30478066604eadd11b344f0959029\",\"dweb:/ipfs/QmUXNkJ3bQSCXUqrGKpnnJipywJA1XDgYi6WGrVzznqRzH\"]}},\"version\":1}"}},"contracts/lib/interfaces/IAccountExecute.sol":{"IAccountExecute":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"}],"name":"executeUserOp","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)":"8dd7712f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"}],\"name\":\"executeUserOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)\":{\"params\":{\"userOp\":\"- The operation that was just validated.\",\"userOpHash\":\"- Hash of the user's request data.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)\":{\"notice\":\"Account may implement this execute method. passing this methodSig at the beginning of callData will cause the entryPoint to pass the full UserOp (and hash) to the account. The account should skip the methodSig, and use the callData (and optionally, other UserOp fields)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/IAccountExecute.sol\":\"IAccountExecute\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/IAccountExecute.sol\":{\"keccak256\":\"0x1fc27645c344eed5d47bc648c781af041896090899ba0ef59f6df9f1322de983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33edc9ca30f81d9c88d53f9c53b69fd98e0ef27a0ef97893657b32691d700f22\",\"dweb:/ipfs/QmPpYSKM5Y6qW6AwZVp2RDti8uHizBNynxwkqc4igueZPo\"]},\"contracts/lib/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xe2f47d598c66f1b9e619ff73f768f677bc4244e8a3d3441742a7a5188a3b4053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5159ad9e8ce8642cafd4f3cd77e522036f30478066604eadd11b344f0959029\",\"dweb:/ipfs/QmUXNkJ3bQSCXUqrGKpnnJipywJA1XDgYi6WGrVzznqRzH\"]}},\"version\":1}"}},"contracts/lib/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])":"ae574a43","validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)":"2dd81133","validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"062a422b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- An array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- An array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code to perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"notice\":\"Validate an aggregated signature. Reverts if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Validate the signature of a single userOp. This method should be called by bundler after EntryPointSimulation.simulateValidation() returns the aggregator this account uses. First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/IAggregator.sol\":{\"keccak256\":\"0xd59862223f3f946ae2f27aeb21dcefd5871c2033082ab8bee00991bf5adc2ec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2089752bdb69c637606a251d74fdd1f6c86c8004eb20b1017f3aed8817bdbb9\",\"dweb:/ipfs/QmTvCNxn4VFWQGvsKR3jJmEoAkaAnkkBoZUUasqvdQF2pS\"]},\"contracts/lib/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xe2f47d598c66f1b9e619ff73f768f677bc4244e8a3d3441742a7a5188a3b4053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5159ad9e8ce8642cafd4f3cd77e522036f30478066604eadd11b344f0959029\",\"dweb:/ipfs/QmUXNkJ3bQSCXUqrGKpnnJipywJA1XDgYi6WGrVzznqRzH\"]}},\"version\":1}"}},"contracts/lib/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"ret","type":"bytes"}],"name":"DelegateAndRevert","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"inner","type":"bytes"}],"name":"FailedOpWithRevert","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"UserOperationPrefundTooLow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"delegateAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"senderCreator","outputs":[{"internalType":"contract ISenderCreator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","delegateAndRevert(address,bytes)":"850aaf62","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"22cdde4c","handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)":"dbed18e0","handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)":"765e827f","incrementNonce(uint192)":"0bd28e3b","senderCreator()":"09ccb880","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"name\":\"DelegateAndRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"inner\",\"type\":\"bytes\"}],\"name\":\"FailedOpWithRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"UserOperationPrefundTooLow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderCreator\",\"outputs\":[{\"internalType\":\"contract ISenderCreator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"details\":\"note that inner is truncated to 2048 bytes\",\"params\":{\"inner\":\"- data from inner cought revert reason\",\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. see FailedOp(uint256,string), above\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the reverted call to \\\"postOp\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the reverted \\\"callData\\\" call.\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"delegateAndRevert(address,bytes)\":{\"details\":\"calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace  actual EntryPoint code is less convenient.\",\"params\":{\"data\":\"data to pass to target in a delegatecall\",\"target\":\"a target contract to make a delegatecall from entrypoint\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"},\"returns\":{\"_0\":\"hash the hash of this UserOperation\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"incrementNonce(uint192)\":{\"params\":{\"key\":\"- the \\\"nonce key\\\" to increment the \\\"nonce sequence\\\" for.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps andhandleAggregatedOps, to identify the offending op. Should be caught in off-chain handleOps/handleAggregatedOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"notice\":\"A custom revert error of handleOps and handleAggregatedOps, to report a revert by account or paymaster.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps() and handleAggregatedOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"notice\":\"UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"delegateAndRevert(address,bytes)\":{\"notice\":\"Helper method for dry-run testing.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error.this method cannot be used for EIP-7702 derived contracts.\"},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), entrypoint address, chainId and (optionally) 7702 delegate address\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"senderCreator()\":{\"notice\":\"Retrieves the immutable SenderCreator contract which is responsible for deployment of sender contracts.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/IAggregator.sol\":{\"keccak256\":\"0xd59862223f3f946ae2f27aeb21dcefd5871c2033082ab8bee00991bf5adc2ec9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2089752bdb69c637606a251d74fdd1f6c86c8004eb20b1017f3aed8817bdbb9\",\"dweb:/ipfs/QmTvCNxn4VFWQGvsKR3jJmEoAkaAnkkBoZUUasqvdQF2pS\"]},\"contracts/lib/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x17386db872e43c625a5b448bba2f8bab23fac44c24d6816d5131c5b6614d4159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b3c7d099969eae9a3f9a9da40d0a253eb322e9c9900ba61e60fb4403b65c3f3\",\"dweb:/ipfs/QmcBxjUmpJocTnWc5ivgvPFACANX651CAz9LjJNcWkCagz\"]},\"contracts/lib/interfaces/INonceManager.sol\":{\"keccak256\":\"0x36d3c27fd64c5ba333ac7ae1f02c4a63411a0413c9073277b135a6e5a29ba88e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://910710c795e905859cbc0a794a6579b53f3de65de034040f084e78cf4c8174f0\",\"dweb:/ipfs/QmcDRaqpMQgpB5APn28xa98Z5wuKHMauwCvbtTxzN7oAJm\"]},\"contracts/lib/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0xffc5e46332115ebdada7a8bc8ff9e321ae43ab6258d7e8d7565658b402f32bcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383abd8dc9fcbb1552a3fc8c27474009ecc0a6a890384b1b9da0eb4da7c4cd1a\",\"dweb:/ipfs/QmWR1o5rAqFMXbn1gCUDTa7LB7tEjXjt6HFGK1VrVNU8At\"]},\"contracts/lib/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x9c10ab71a97344d2b8d0469aeac476d69fb2ae50e65c1a548e34ca482c452d6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7d60e99b6f6311a558bf17778dfb8cfa1a287c85fce61c8fdf1b15e3f99939\",\"dweb:/ipfs/QmRX4E2kayv2fYASCGmUAc3MhUsv9hLjM7MQ5LSfaK4hpz\"]},\"contracts/lib/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xe2f47d598c66f1b9e619ff73f768f677bc4244e8a3d3441742a7a5188a3b4053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5159ad9e8ce8642cafd4f3cd77e522036f30478066604eadd11b344f0959029\",\"dweb:/ipfs/QmUXNkJ3bQSCXUqrGKpnnJipywJA1XDgYi6WGrVzznqRzH\"]}},\"version\":1}"}},"contracts/lib/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"incrementNonce(uint192)\":{\"params\":{\"key\":\"- the \\\"nonce key\\\" to increment the \\\"nonce sequence\\\" for.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/INonceManager.sol\":{\"keccak256\":\"0x36d3c27fd64c5ba333ac7ae1f02c4a63411a0413c9073277b135a6e5a29ba88e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://910710c795e905859cbc0a794a6579b53f3de65de034040f084e78cf4c8174f0\",\"dweb:/ipfs/QmcDRaqpMQgpB5APn28xa98Z5wuKHMauwCvbtTxzN7oAJm\"]}},\"version\":1}"}},"contracts/lib/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256,uint256)":"7c627b21","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual cost of gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - Last timestamp this operation is valid at, or 0 for \\\"indefinitely\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x748fb07cf606d8630853f02b62c52629f11bc38cb4bd2efa7952ff016e2ae9f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4c24e5cae9966f8bede50b1d79f8a8261ad74dc3e5a1bf1f945ff13eb1277d1\",\"dweb:/ipfs/QmeFDsZDganXpQyc39HYtUkdS3XsuxfegteXqMKA6FZ5uL\"]},\"contracts/lib/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0xe2f47d598c66f1b9e619ff73f768f677bc4244e8a3d3441742a7a5188a3b4053\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5159ad9e8ce8642cafd4f3cd77e522036f30478066604eadd11b344f0959029\",\"dweb:/ipfs/QmUXNkJ3bQSCXUqrGKpnnJipywJA1XDgYi6WGrVzznqRzH\"]}},\"version\":1}"}},"contracts/lib/interfaces/ISenderCreator.sol":{"ISenderCreator":{"abi":[{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"createSender","outputs":[{"internalType":"address","name":"sender","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes","name":"initCallData","type":"bytes"}],"name":"initEip7702Sender","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"createSender(bytes)":"570e1a36","initEip7702Sender(address,bytes)":"c09ad0d9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"createSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initCallData\",\"type\":\"bytes\"}],\"name\":\"initEip7702Sender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSender(bytes)\":{\"details\":\"Creates a new sender contract.\",\"returns\":{\"sender\":\"Address of the newly created sender contract.\"}},\"initEip7702Sender(address,bytes)\":{\"params\":{\"initCallData\":\"- the call data to be passed to the sender account call.\",\"sender\":\"- the 'sender' EIP-7702 account to be initialized.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initEip7702Sender(address,bytes)\":{\"notice\":\"Use initCallData to initialize an EIP-7702 account. The caller is the EntryPoint contract and it is already verified to be an EIP-7702 account. Note: Can be called multiple times as long as an appropriate initCode is supplied\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/ISenderCreator.sol\":\"ISenderCreator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/ISenderCreator.sol\":{\"keccak256\":\"0xffc5e46332115ebdada7a8bc8ff9e321ae43ab6258d7e8d7565658b402f32bcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383abd8dc9fcbb1552a3fc8c27474009ecc0a6a890384b1b9da0eb4da7c4cd1a\",\"dweb:/ipfs/QmWR1o5rAqFMXbn1gCUDTa7LB7tEjXjt6HFGK1VrVNU8At\"]}},\"version\":1}"}},"contracts/lib/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x9c10ab71a97344d2b8d0469aeac476d69fb2ae50e65c1a548e34ca482c452d6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7d60e99b6f6311a558bf17778dfb8cfa1a287c85fce61c8fdf1b15e3f99939\",\"dweb:/ipfs/QmRX4E2kayv2fYASCGmUAc3MhUsv9hLjM7MQ5LSfaK4hpz\"]}},\"version\":1}"}}}}}