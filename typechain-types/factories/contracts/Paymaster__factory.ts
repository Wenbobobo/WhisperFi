/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Paymaster, PaymasterInterface } from "../../contracts/Paymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidPaymasterAndDataLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimestamp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedTarget",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    name: "TargetSupportChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "verificationGasLimit",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "postOpGasLimit",
        type: "uint128",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    name: "createPaymasterAndData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositToEntryPoint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    name: "setSupportedTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTargets",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b50604051610d7a380380610d7a83398101604081905261002e916100e2565b806001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61006581610078565b50506001600160a01b0316608052610113565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100dd575f5ffd5b919050565b5f5f604083850312156100f3575f5ffd5b6100fc836100c7565b915061010a602084016100c7565b90509250929050565b608051610c486101325f395f818161020101526102950152610c485ff3fe60806040526004361061008f575f3560e01c80638da5cb5b116100575780638da5cb5b146101a1578063a19f212f146101d1578063b0d691fe146101f0578063dc69c06f14610223578063f2fde38b14610261575f5ffd5b80631b3ba10114610093578063370323681461009d57806352b7512c1461013f578063715018a61461016c5780637c627b2114610180575b5f5ffd5b61009b610280565b005b3480156100a8575f5ffd5b506101296100b73660046108ae565b6040805130606090811b6bffffffffffffffffffffffff19166020830152608096871b6001600160801b031990811660348401529590961b909416604485015260d092831b6001600160d01b031990811660548601529190921b16605a83015280518083038201815292909101905290565b604051610136919061092d565b60405180910390f35b34801561014a575f5ffd5b5061015e610159366004610946565b61032f565b604051610136929190610995565b348015610177575f5ffd5b5061009b6104b6565b34801561018b575f5ffd5b5061009b61019a3660046109b6565b5050505050565b3480156101ac575f5ffd5b505f546001600160a01b03165b6040516001600160a01b039091168152602001610136565b3480156101dc575f5ffd5b5061009b6101eb366004610a60565b6104c9565b3480156101fb575f5ffd5b506101b97f000000000000000000000000000000000000000000000000000000000000000081565b34801561022e575f5ffd5b5061025161023d366004610a99565b60016020525f908152604090205460ff1681565b6040519015158152602001610136565b34801561026c575f5ffd5b5061009b61027b366004610a99565b61052f565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024015f604051808303818588803b1580156102e0575f5ffd5b505af11580156102f2573d5f5f3e3d5ffd5b50506040513481523393507f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d4749250602001905060405180910390a2565b60605f8061034861034360e0880188610ab2565b61056c565b50909150506001600160a01b03811630146103aa5760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e644461746100000060448201526064015b60405180910390fd5b5f6103c06103bb6060890189610ab2565b610623565b6001600160a01b0381165f9081526001602052604090205490915060ff166103fb57604051633bc5944560e11b815260040160405180910390fd5b5f8061041261040d60e08b018b610ab2565b61073a565b915091505f8165ffffffffffff1611801561043457508065ffffffffffff1642105b156104525760405163b7d0949760e01b815260040160405180910390fd5b5f8265ffffffffffff1611801561047057508165ffffffffffff1642115b1561048e5760405163b7d0949760e01b815260040160405180910390fd5b6104995f83836107cc565b60408051602081019091525f81529a909950975050505050505050565b6104be610803565b6104c75f61082f565b565b6104d1610803565b6001600160a01b0382165f81815260016020908152604091829020805460ff191685151590811790915591519182527fe5239967f86bdfebd2052a7d2539a8359f2cdefacfbdeb04bdd72e854c994553910160405180910390a25050565b610537610803565b6001600160a01b03811661056057604051631e4fbdf760e01b81525f60048201526024016103a1565b6105698161082f565b50565b5f808060348410156105c05760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e644461746100000060448201526064016103a1565b6105cd60145f8688610afc565b6105d691610b23565b60601c92506105e9602460148688610afc565b6105f291610b70565b60801c9150610605603460248688610afc565b61060e91610b70565b60801c6001600160801b031690509250925092565b5f602482101561068f5760405162461bcd60e51b815260206004820152603160248201527f5061796d61737465723a20696e76616c69642063616c6c4461746120666f72206044820152703a30b933b2ba1032bc3a3930b1ba34b7b760791b60648201526084016103a1565b5f61069d6004828587610afc565b6106a691610ba6565b9050635b0e93fb60e11b6001600160e01b03198216146107185760405162461bcd60e51b815260206004820152602760248201527f5061796d61737465723a206e6f7420616e20657865637574652066756e6374696044820152661bdb8818d85b1b60ca1b60648201526084016103a1565b610726602460108587610afc565b61072f91610b23565b60601c949350505050565b5f80604083101561078d5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c6964207061796d6173746572416e6444617461206c656e6774680060448201526064016103a1565b61079b603a60348587610afc565b6107a491610bdc565b60d01c91506107b76040603a8587610afc565b6107c091610bdc565b60d01c90509250929050565b5f836107d8575f6107db565b60015b60ff1660a08465ffffffffffff16901b60d08465ffffffffffff16901b171790509392505050565b5f546001600160a01b031633146104c75760405163118cdaa760e01b81523360048201526024016103a1565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160801b0381168114610894575f5ffd5b919050565b803565ffffffffffff81168114610894575f5ffd5b5f5f5f5f608085870312156108c1575f5ffd5b6108ca8561087e565b93506108d86020860161087e565b92506108e660408601610899565b91506108f460608601610899565b905092959194509250565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f61093f60208301846108ff565b9392505050565b5f5f5f60608486031215610958575f5ffd5b833567ffffffffffffffff81111561096e575f5ffd5b84016101208187031215610980575f5ffd5b95602085013595506040909401359392505050565b604081525f6109a760408301856108ff565b90508260208301529392505050565b5f5f5f5f5f608086880312156109ca575f5ffd5b8535600381106109d8575f5ffd5b9450602086013567ffffffffffffffff8111156109f3575f5ffd5b8601601f81018813610a03575f5ffd5b803567ffffffffffffffff811115610a19575f5ffd5b886020828401011115610a2a575f5ffd5b959860209190910197509495604081013595606090910135945092505050565b80356001600160a01b0381168114610894575f5ffd5b5f5f60408385031215610a71575f5ffd5b610a7a83610a4a565b915060208301358015158114610a8e575f5ffd5b809150509250929050565b5f60208284031215610aa9575f5ffd5b61093f82610a4a565b5f5f8335601e19843603018112610ac7575f5ffd5b83018035915067ffffffffffffffff821115610ae1575f5ffd5b602001915036819003821315610af5575f5ffd5b9250929050565b5f5f85851115610b0a575f5ffd5b83861115610b16575f5ffd5b5050820193919092039150565b80356bffffffffffffffffffffffff198116906014841015610b69576bffffffffffffffffffffffff196bffffffffffffffffffffffff198560140360031b1b82161691505b5092915050565b80356001600160801b03198116906010841015610b69576001600160801b031960109490940360031b84901b1690921692915050565b80356001600160e01b03198116906004841015610b69576001600160e01b031960049490940360031b84901b1690921692915050565b80356001600160d01b03198116906006841015610b69576001600160d01b031960069490940360031b84901b169092169291505056fea2646970667358221220a6cfddd1da66bc3b48ac4b1b0a0087b1fb2dfb7e1af663ba64061037d9cfea1964736f6c634300081c0033";

type PaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Paymaster__factory extends ContractFactory {
  constructor(...args: PaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _entryPoint: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_entryPoint, _owner, overrides || {});
  }
  override deploy(
    _entryPoint: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_entryPoint, _owner, overrides || {}) as Promise<
      Paymaster & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Paymaster__factory {
    return super.connect(runner) as Paymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymasterInterface {
    return new Interface(_abi) as PaymasterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Paymaster {
    return new Contract(address, _abi, runner) as unknown as Paymaster;
  }
}
