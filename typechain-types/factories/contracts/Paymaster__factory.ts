/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Paymaster, PaymasterInterface } from "../../contracts/Paymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidPaymasterAndDataLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTimestamp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedTarget",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    name: "TargetSupportChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "verificationGasLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "postOpGasLimit",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    name: "createPaymasterAndData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositToEntryPoint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    name: "setSupportedTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTargets",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b50604051610c64380380610c6483398101604081905261002e916100e2565b806001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61006581610078565b50506001600160a01b0316608052610113565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100dd575f5ffd5b919050565b5f5f604083850312156100f3575f5ffd5b6100fc836100c7565b915061010a602084016100c7565b90509250929050565b608051610b326101325f395f818161020101526102950152610b325ff3fe60806040526004361061008f575f3560e01c80638f8780a4116100575780638f8780a414610138578063a19f212f146101d1578063b0d691fe146101f0578063dc69c06f14610223578063f2fde38b14610261575f5ffd5b80631b3ba1011461009357806352b7512c1461009d578063715018a6146100d35780637c627b21146100e75780638da5cb5b14610108575b5f5ffd5b61009b610280565b005b3480156100a8575f5ffd5b506100bc6100b73660046107a3565b61032f565b6040516100ca929190610820565b60405180910390f35b3480156100de575f5ffd5b5061009b610479565b3480156100f2575f5ffd5b5061009b610101366004610841565b5050505050565b348015610113575f5ffd5b505f546001600160a01b03165b6040516001600160a01b0390911681526020016100ca565b348015610143575f5ffd5b506101c46101523660046108ef565b6040805130606090811b6bffffffffffffffffffffffff19166020830152608096871b6001600160801b031990811660348401529590961b909416604485015260d092831b6001600160d01b031990811660548601529190921b16605a83015280518083038201815292909101905290565b6040516100ca9190610932565b3480156101dc575f5ffd5b5061009b6101eb366004610961565b61048c565b3480156101fb575f5ffd5b506101207f000000000000000000000000000000000000000000000000000000000000000081565b34801561022e575f5ffd5b5061025161023d36600461099a565b60016020525f908152604090205460ff1681565b60405190151581526020016100ca565b34801561026c575f5ffd5b5061009b61027b36600461099a565b6104f2565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024015f604051808303818588803b1580156102e0575f5ffd5b505af11580156102f2573d5f5f3e3d5ffd5b50506040513481523393507f543ba50a5eec5e6178218e364b1d0f396157b3c8fa278522c2cb7fd99407d4749250602001905060405180910390a2565b60605f8061034861034360e08801886109b3565b61052f565b50909150506001600160a01b03811630146103aa5760405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e644461746100000060448201526064015b60405180910390fd5b5f6103c06103bb60608901896109b3565b61059f565b6001600160a01b0381165f9081526001602052604090205490915060ff166103fb57604051633bc5944560e11b815260040160405180910390fd5b5f8061041261040d60e08b018b6109b3565b61062e565b915091508065ffffffffffff1642108061043357508165ffffffffffff1642115b156104515760405163b7d0949760e01b815260040160405180910390fd5b61045c5f83836106f2565b60408051602081019091525f81529a909950975050505050505050565b610481610728565b61048a5f610754565b565b610494610728565b6001600160a01b0382165f81815260016020908152604091829020805460ff191685151590811790915591519182527fe5239967f86bdfebd2052a7d2539a8359f2cdefacfbdeb04bdd72e854c994553910160405180910390a25050565b6104fa610728565b6001600160a01b03811661052357604051631e4fbdf760e01b81525f60048201526024016103a1565b61052c81610754565b50565b5f808061053f60148286886109fd565b61054891610a24565b60601c6105596024601487896109fd565b61056291610a71565b60801c61057360346024888a6109fd565b61057c91610a71565b9194506fffffffffffffffffffffffffffffffff16925060801c90509250925092565b5f602482101561060b5760405162461bcd60e51b815260206004820152603160248201527f5061796d61737465723a20696e76616c69642063616c6c4461746120666f72206044820152703a30b933b2ba1032bc3a3930b1ba34b7b760791b60648201526084016103a1565b6106196024601084866109fd565b61062291610a24565b60601c90505b92915050565b5f8061063c6034600c610aa7565b83101561068b5760405162461bcd60e51b815260206004820152601c60248201527f5061796d61737465723a20696e76616c69642074696d6520646174610000000060448201526064016103a1565b8360348461069a826006610aa7565b926106a7939291906109fd565b6106b091610ac6565b60d01c915083836106c360346006610aa7565b906106d06034600c610aa7565b926106dd939291906109fd565b6106e691610ac6565b60d01c90509250929050565b5f60d08265ffffffffffff16901b60a08465ffffffffffff16901b85610718575f61071b565b60015b60ff161717949350505050565b5f546001600160a01b0316331461048a5760405163118cdaa760e01b81523360048201526024016103a1565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5f5f606084860312156107b5575f5ffd5b833567ffffffffffffffff8111156107cb575f5ffd5b840161012081870312156107dd575f5ffd5b95602085013595506040909401359392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b604081525f61083260408301856107f2565b90508260208301529392505050565b5f5f5f5f5f60808688031215610855575f5ffd5b853560038110610863575f5ffd5b9450602086013567ffffffffffffffff81111561087e575f5ffd5b8601601f8101881361088e575f5ffd5b803567ffffffffffffffff8111156108a4575f5ffd5b8860208284010111156108b5575f5ffd5b959860209190910197509495604081013595606090910135945092505050565b803565ffffffffffff811681146108ea575f5ffd5b919050565b5f5f5f5f60808587031215610902575f5ffd5b8435935060208501359250610919604086016108d5565b9150610927606086016108d5565b905092959194509250565b602081525f61094460208301846107f2565b9392505050565b80356001600160a01b03811681146108ea575f5ffd5b5f5f60408385031215610972575f5ffd5b61097b8361094b565b91506020830135801515811461098f575f5ffd5b809150509250929050565b5f602082840312156109aa575f5ffd5b6109448261094b565b5f5f8335601e198436030181126109c8575f5ffd5b83018035915067ffffffffffffffff8211156109e2575f5ffd5b6020019150368190038213156109f6575f5ffd5b9250929050565b5f5f85851115610a0b575f5ffd5b83861115610a17575f5ffd5b5050820193919092039150565b80356bffffffffffffffffffffffff198116906014841015610a6a576bffffffffffffffffffffffff196bffffffffffffffffffffffff198560140360031b1b82161691505b5092915050565b80356001600160801b03198116906010841015610a6a576001600160801b031960109490940360031b84901b1690921692915050565b8082018082111561062857634e487b7160e01b5f52601160045260245ffd5b80356001600160d01b03198116906006841015610a6a576001600160d01b031960069490940360031b84901b169092169291505056fea2646970667358221220b337ce496237e9f4f6c8040b43f50c76444b34b316be011cf00e44aad4b331cc64736f6c634300081c0033";

type PaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Paymaster__factory extends ContractFactory {
  constructor(...args: PaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _entryPoint: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_entryPoint, _owner, overrides || {});
  }
  override deploy(
    _entryPoint: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_entryPoint, _owner, overrides || {}) as Promise<
      Paymaster & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Paymaster__factory {
    return super.connect(runner) as Paymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymasterInterface {
    return new Interface(_abi) as PaymasterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Paymaster {
    return new Contract(address, _abi, runner) as unknown as Paymaster;
  }
}
