/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PrivacyPool,
  PrivacyPoolInterface,
} from "../../contracts/PrivacyPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_zeroValue",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "newCommitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "tradeDataHash",
        type: "bytes32",
      },
    ],
    name: "Trade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "DEPOSIT_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LEVELS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_commitment",
        type: "bytes32",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "bytes32",
        name: "_proofRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifier",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_newCommitment",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_tradeDataHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
    ],
    name: "trade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "bytes32",
        name: "_proofRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_nullifier",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b50604051610eac380380610eac83398101604081905261002e916101c2565b806001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100658161009a565b50600380546001600160a01b0319166001600160a01b03851617905561008e60046014846100e9565b600155506101fb915050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f6100ff8484846107c061010760201b17610136565b949350505050565b5f818310610121575f82815260208490526040902061012f565b5f8381526020839052604090205b9392505050565b60ff83166001850181905560028501555f82815b8560ff1681101561017a57816101636002890183610188565b556101708280602087901c565b915060010161014a565b505f86559050949350505050565b5f826100ff6101a4846101a0845f9081526020902090565b0190565b90565b80516001600160a01b03811681146101bd575f5ffd5b919050565b5f5f5f606084860312156101d4575f5ffd5b6101dd846101a7565b9250602084015191506101f2604085016101a7565b90509250925092565b610ca4806102085f395ff3fe60806040526004361061009a575f3560e01c8063b214faa511610062578063b214faa514610169578063e2adba8c1461017c578063ebf0c7171461019e578063ec6925a7146101b3578063f2fde38b146101ce578063fa41e14d146101ed575f5ffd5b80631eca74141461009e5780632997e86b146100bf5780632b7ac3f314610102578063715018a6146101395780638da5cb5b1461014d575b5f5ffd5b3480156100a9575f5ffd5b506100bd6100b83660046109c3565b61020c565b005b3480156100ca575f5ffd5b506100ed6100d9366004610ab2565b60026020525f908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561010d575f5ffd5b50600354610121906001600160a01b031681565b6040516001600160a01b0390911681526020016100f9565b348015610144575f5ffd5b506100bd61048b565b348015610158575f5ffd5b505f546001600160a01b0316610121565b6100bd610177366004610ab2565b61049e565b348015610187575f5ffd5b50610190601481565b6040519081526020016100f9565b3480156101a9575f5ffd5b5061019060015481565b3480156101be575f5ffd5b5061019067016345785d8a000081565b3480156101d9575f5ffd5b506100bd6101e8366004610ac9565b61054b565b3480156101f8575f5ffd5b506100bd610207366004610ae2565b610588565b60015488146102585760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a590813595c9adb19481c9bdbdd606a1b60448201526064015b60405180910390fd5b5f8781526002602052604090205460ff16156102b05760405162461bcd60e51b8152602060048201526017602482015276139d5b1b1a599a595c881a185cc81899595b881d5cd959604a1b604482015260640161024f565b6040805160208101825286815260035491516343753b4d60e01b815290916001600160a01b0316906343753b4d906102f2908f908f908f908790600401610b56565b602060405180830381865afa15801561030d573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103319190610bc6565b61036d5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b604482015260640161024f565b5f888152600260205260408120805460ff191660011790558061039160048a6107f1565b60018190556040805163ffffffff841681524260208201529294509092508a917fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196910160405180910390a2604051631cff79cd60e01b81526001600160a01b03881690631cff79cd9061040c90899089908990600401610bec565b5f604051808303815f87803b158015610423575f5ffd5b505af1158015610435573d5f5f3e3d5ffd5b5050604080518d8152602081018d90529081018b90527fe109f06ce9b13336f35e4eae3350cf986a890bb5c256d6dff6ac4d58ff09d4be9250606001905060405180910390a15050505050505050505050505050565b61049361080b565b61049c5f610837565b565b67016345785d8a000034146104ee5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a590819195c1bdcda5d08185b5bdd5b9d60521b604482015260640161024f565b5f806104fb6004846107f1565b60018190556040805163ffffffff8416815242602082015292945090925084917fa945e51eec50ab98c161376f0db4cf2aeba3ec92755fe2fcd388bdbbb80ff196910160405180910390a2505050565b61055361080b565b6001600160a01b03811661057c57604051631e4fbdf760e01b81525f600482015260240161024f565b61058581610837565b50565b60015484146105cf5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a590813595c9adb19481c9bdbdd606a1b604482015260640161024f565b5f8381526002602052604090205460ff16156106275760405162461bcd60e51b8152602060048201526017602482015276139d5b1b1a599a595c881a185cc81899595b881d5cd959604a1b604482015260640161024f565b6040516bffffffffffffffffffffffff19606084901b16602082015260348101829052605481018490525f9060740160408051601f198184030181528282528051602091820120908301825280835260035491516343753b4d60e01b81529093506001600160a01b03909116906343753b4d906106ae908c908c908c908790600401610b56565b602060405180830381865afa1580156106c9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106ed9190610bc6565b6107295760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b604482015260640161024f565b5f85815260026020526040808220805460ff19166001179055516001600160a01b0386169185156108fc02918691818181858888f19350505050158015610772573d5f5f3e3d5ffd5b50604080516001600160a01b0386168152602081018790527f0ce490531f6c8ae2f1ff174643bc8b7ed5e52987ab50dc1e8f33655d2cd8c90b910160405180910390a1505050505050505050565b5f8183106107da575f8281526020849052604090206107e8565b5f8381526020839052604090205b90505b92915050565b5f5f61080084846107c0610886565b915091509250929050565b5f546001600160a01b0316331461049c5760405163118cdaa760e01b815233600482015260240161024f565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5f5f610894866002015490565b8654909150865f6108a483610c2b565b9091555092506001811b83106108be576108be6041610950565b82855f5b83811015610943575f6108d6600285610c4f565b15905080156108ef57826108ed8b60010184610961565b555b61092f8161090a576109048b60010184610961565b5461090c565b835b826109175784610926565b6109248c60020185610961565b545b8a63ffffffff16565b600194851c949093509190910190506108c2565b5092505050935093915050565b634e487b715f52806020526024601cfd5b5f8261098061097d84610979845f9081526020902090565b0190565b90565b949350505050565b80604081018310156107eb575f5ffd5b80608081018310156107eb575f5ffd5b80356001600160a01b03811681146109be575f5ffd5b919050565b5f5f5f5f5f5f5f5f5f5f5f6101e08c8e0312156109de575f5ffd5b6109e88d8d610988565b9a506109f78d60408e01610998565b9950610a068d60c08e01610988565b98506101008c013597506101208c013596506101408c013595506101608c01359450610a356101808d016109a8565b9350610a446101a08d016109a8565b92506101c08c013567ffffffffffffffff811115610a60575f5ffd5b8c01601f81018e13610a70575f5ffd5b803567ffffffffffffffff811115610a86575f5ffd5b8e6020828401011115610a97575f5ffd5b60208201935080925050509295989b509295989b9093969950565b5f60208284031215610ac2575f5ffd5b5035919050565b5f60208284031215610ad9575f5ffd5b6107e8826109a8565b5f5f5f5f5f5f5f610180888a031215610af9575f5ffd5b610b038989610988565b9650610b128960408a01610998565b9550610b218960c08a01610988565b945061010088013593506101208801359250610b4061014089016109a8565b9150610160880135905092959891949750929550565b6101208101604086833760408201855f5b6002811015610b885760408284376040928301929190910190600101610b67565b50505060408460c08401376101008201835f5b6001811015610bba578151835260209283019290910190600101610b9b565b50505095945050505050565b5f60208284031215610bd6575f5ffd5b81518015158114610be5575f5ffd5b9392505050565b6001600160a01b03841681526040602082018190528101829052818360608301375f818301606090810191909152601f909201601f1916010192915050565b5f60018201610c4857634e487b7160e01b5f52601160045260245ffd5b5060010190565b5f82610c6957634e487b7160e01b5f52601260045260245ffd5b50069056fea2646970667358221220daa11a6130a958f089078033af86c7baec2d39481235afa2d8b0319f0b84f96c64736f6c634300081c0033";

type PrivacyPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivacyPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivacyPool__factory extends ContractFactory {
  constructor(...args: PrivacyPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    _zeroValue: BytesLike,
    _initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _verifier,
      _zeroValue,
      _initialOwner,
      overrides || {}
    );
  }
  override deploy(
    _verifier: AddressLike,
    _zeroValue: BytesLike,
    _initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _verifier,
      _zeroValue,
      _initialOwner,
      overrides || {}
    ) as Promise<
      PrivacyPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivacyPool__factory {
    return super.connect(runner) as PrivacyPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivacyPoolInterface {
    return new Interface(_abi) as PrivacyPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PrivacyPool {
    return new Contract(address, _abi, runner) as unknown as PrivacyPool;
  }
}
